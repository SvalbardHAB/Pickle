

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Fri Dec 27 15:27:42 2013

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F1519
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	text2152,local,class=CODE,delta=2
    17                           	psect	text2160,local,class=CODE,delta=2
    18                           	psect	text2165,local,class=CODE,delta=2
    19                           	psect	text2176,local,class=CODE,delta=2
    20                           	psect	text2215,local,class=CODE,delta=2
    21                           	psect	swtext1,local,class=CONST,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text2223,local,class=CODE,delta=2
    24                           	psect	text2224,local,class=CODE,delta=2
    25                           	psect	pa_nodes,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  000A                     	;#
    28                           
    29                           	psect	config
    30  8007  29E4               	dw	1073687012	;#
    31                           
    32                           	psect	stringtext
    33  1800                     __pstringtext:	
    34  1800                     __stringtab:	
    35  1800  3400               	retlw	0
    36  1801                     _LCDDigTable:	
    37  1801  3477               	retlw	119
    38  1802  3424               	retlw	36
    39  1803  345D               	retlw	93
    40  1804  346D               	retlw	109
    41  1805  342E               	retlw	46
    42  1806  346B               	retlw	107
    43  1807  347B               	retlw	123
    44  1808  3425               	retlw	37
    45  1809  347F               	retlw	127
    46  180A  346F               	retlw	111
    47  180B  343F               	retlw	63
    48  180C  347A               	retlw	122
    49  180D  3453               	retlw	83
    50  180E  347C               	retlw	124
    51  180F  345B               	retlw	91
    52  1810  341B               	retlw	27
    53  1811  346F               	retlw	111
    54  1812  343E               	retlw	62
    55  1813  3424               	retlw	36
    56  1814  3464               	retlw	100
    57  1815  341A               	retlw	26
    58  1816  3452               	retlw	82
    59  1817  3437               	retlw	55
    60  1818  3438               	retlw	56
    61  1819  3478               	retlw	120
    62  181A  341F               	retlw	31
    63  181B  342F               	retlw	47
    64  181C  3418               	retlw	24
    65  181D  346B               	retlw	107
    66  181E  345A               	retlw	90
    67  181F  3470               	retlw	112
    68  1820  3476               	retlw	118
    69  1821  3400               	retlw	0
    70  1822  3400               	retlw	0
    71  1823  3400               	retlw	0
    72  1824  3400               	retlw	0
    73  1825  3400               	retlw	0
    74  1826  3408               	retlw	8
    75  1827                     _RFM98ConfigTbl:	
    76  1827  3402               	retlw	2
    77  1828  3404               	retlw	4
    78  1829  343D               	retlw	61
    79  182A  3405               	retlw	5
    80  182B  340B               	retlw	11
    81  182C  340B               	retlw	11
    82  182D  3423               	retlw	35
    83  182E  340C               	retlw	12
    84  182F  3412               	retlw	18
    85  1830  3412               	retlw	18
    86  1831  34A0               	retlw	160
    87  1832  341F               	retlw	31
    88  1833  3400               	retlw	0
    89  1834  3425               	retlw	37
    90  1835  3406               	retlw	6
    91  1836  3426               	retlw	38
    92  1837  3492               	retlw	146
    93  1838  3427               	retlw	39
    94  1839  34AA               	retlw	170
    95  183A  3428               	retlw	40
    96  183B  342D               	retlw	45
    97  183C  3429               	retlw	41
    98  183D  34D4               	retlw	212
    99  183E  342A               	retlw	42
   100  183F  3400               	retlw	0
   101  1840  3430               	retlw	48
   102  1841  3440               	retlw	64
   103  1842  3431               	retlw	49
   104  1843  3415               	retlw	21
   105  1844  3432               	retlw	50
   106  1845  3495               	retlw	149
   107  1846  3435               	retlw	53
   108  1847                     _RFM98TestConfigTbl:	
   109  1847  3402               	retlw	2
   110  1848  3404               	retlw	4
   111  1849  343D               	retlw	61
   112  184A  3405               	retlw	5
   113  184B  340B               	retlw	11
   114  184C  340B               	retlw	11
   115  184D  3420               	retlw	32
   116  184E  340C               	retlw	12
   117  184F  3412               	retlw	18
   118  1850  3412               	retlw	18
   119  1851  34A0               	retlw	160
   120  1852  341F               	retlw	31
   121  1853  3400               	retlw	0
   122  1854  3425               	retlw	37
   123  1855  3400               	retlw	0
   124  1856  3426               	retlw	38
   125  1857  3400               	retlw	0
   126  1858  3431               	retlw	49
   127  1859                     _RFM98FSKRateTbl:	
   128  1859  3468               	retlw	104
   129  185A  3402               	retlw	2
   130  185B  342B               	retlw	43
   131  185C  3403               	retlw	3
   132  185D  3434               	retlw	52
   133  185E  3402               	retlw	2
   134  185F  3415               	retlw	21
   135  1860  3403               	retlw	3
   136  1861  341A               	retlw	26
   137  1862  3402               	retlw	2
   138  1863  340B               	retlw	11
   139  1864  3403               	retlw	3
   140  1865  340D               	retlw	13
   141  1866  3402               	retlw	2
   142  1867  3405               	retlw	5
   143  1868  3403               	retlw	3
   144  1869                     _RFM98LoRaBwTbl:	
   145  1869  3400               	retlw	0
   146  186A  3401               	retlw	1
   147  186B  3402               	retlw	2
   148  186C  3403               	retlw	3
   149  186D  3404               	retlw	4
   150  186E  3405               	retlw	5
   151  186F  3406               	retlw	6
   152  1870  3407               	retlw	7
   153  1871  3408               	retlw	8
   154  1872  3409               	retlw	9
   155  1873                     _RFM98PowerTbl:	
   156  1873  34FF               	retlw	255
   157  1874  3409               	retlw	9
   158  1875  34FC               	retlw	252
   159  1876  3409               	retlw	9
   160  1877  34F9               	retlw	249
   161  1878  3409               	retlw	9
   162  1879  34F6               	retlw	246
   163  187A  3409               	retlw	9
   164  187B                     _RFM98RxTable:	
   165  187B  340F               	retlw	15
   166  187C  3409               	retlw	9
   167  187D  340C               	retlw	12
   168  187E  3440               	retlw	64
   169  187F  3400               	retlw	0
   170  1880  3441               	retlw	65
   171  1881  3484               	retlw	132
   172  1882  344D               	retlw	77
   173  1883                     _RFM98SpreadFactorTbl:	
   174  1883  3406               	retlw	6
   175  1884  3407               	retlw	7
   176  1885  3408               	retlw	8
   177  1886  3409               	retlw	9
   178  1887  340A               	retlw	10
   179  1888  340B               	retlw	11
   180  1889  340C               	retlw	12
   181  188A                     _RFM98FreqTbl:	
   182  188A  346C               	retlw	108
   183  188B  3406               	retlw	6
   184  188C  3480               	retlw	128
   185  188D  3407               	retlw	7
   186  188E  3400               	retlw	0
   187  188F  3408               	retlw	8
   188  1890                     _RFM98TxTable:	
   189  1890  3400               	retlw	0
   190  1891  3440               	retlw	64
   191  1892  3400               	retlw	0
   192  1893  3441               	retlw	65
   193  1894  3487               	retlw	135
   194  1895  344D               	retlw	77
   195  1896                     _MusicTab_PowerOn:	
   196  1896  3480               	retlw	128
   197  1897  34F5               	retlw	245
   198  1898  34F4               	retlw	244
   199  1899  3401               	retlw	1
   200  189A  3480               	retlw	128
   201  189B  34F6               	retlw	246
   202  189C  34F4               	retlw	244
   203  189D  3401               	retlw	1
   204  189E  3400               	retlw	0
   205  189F  34F7               	retlw	247
   206  18A0  34F4               	retlw	244
   207  18A1  3401               	retlw	1
   208  18A2  3400               	retlw	0
   209  18A3  34F7               	retlw	247
   210  18A4  34FA               	retlw	250
   211  18A5  3400               	retlw	0
   212  18A6  3480               	retlw	128
   213  18A7  34F6               	retlw	246
   214  18A8  34FA               	retlw	250
   215  18A9  3400               	retlw	0
   216  18AA  3400               	retlw	0
   217  18AB  34F7               	retlw	247
   218  18AC  34F4               	retlw	244
   219  18AD  3401               	retlw	1
   220  18AE  3480               	retlw	128
   221  18AF  34F5               	retlw	245
   222  18B0  34FA               	retlw	250
   223  18B1  3400               	retlw	0
   224  18B2  3400               	retlw	0
   225  18B3  34F5               	retlw	245
   226  18B4  34FA               	retlw	250
   227  18B5  3400               	retlw	0
   228  18B6  3400               	retlw	0
   229  18B7  3400               	retlw	0
   230  18B8  3400               	retlw	0
   231  18B9  3400               	retlw	0
   232  18BA                     _MusicTab_KeyOver:	
   233  18BA  3400               	retlw	0
   234  18BB  34F1               	retlw	241
   235  18BC  34C8               	retlw	200
   236  18BD  3400               	retlw	0
   237  18BE  3400               	retlw	0
   238  18BF  3400               	retlw	0
   239  18C0  3464               	retlw	100
   240  18C1  3400               	retlw	0
   241  18C2  3400               	retlw	0
   242  18C3  34F3               	retlw	243
   243  18C4  34C8               	retlw	200
   244  18C5  3400               	retlw	0
   245  18C6  3400               	retlw	0
   246  18C7  3400               	retlw	0
   247  18C8  3464               	retlw	100
   248  18C9  3400               	retlw	0
   249  18CA  3400               	retlw	0
   250  18CB  34F2               	retlw	242
   251  18CC  34C8               	retlw	200
   252  18CD  3400               	retlw	0
   253  18CE  3400               	retlw	0
   254  18CF  3400               	retlw	0
   255  18D0  3464               	retlw	100
   256  18D1  3400               	retlw	0
   257  18D2  3400               	retlw	0
   258  18D3  34F7               	retlw	247
   259  18D4  34C8               	retlw	200
   260  18D5  3400               	retlw	0
   261  18D6  3400               	retlw	0
   262  18D7  3400               	retlw	0
   263  18D8  3400               	retlw	0
   264  18D9  3400               	retlw	0
   265  18DA                     _C_RFM98_LoRaBandBuf:	
   266  18DA  344E               	retlw	78
   267  18DB  3400               	retlw	0
   268  18DC  3468               	retlw	104
   269  18DD  3400               	retlw	0
   270  18DE  349C               	retlw	156
   271  18DF  3400               	retlw	0
   272  18E0  34D0               	retlw	208
   273  18E1  3400               	retlw	0
   274  18E2  3438               	retlw	56
   275  18E3  3401               	retlw	1
   276  18E4  34A1               	retlw	161
   277  18E5  3401               	retlw	1
   278  18E6  3471               	retlw	113
   279  18E7  3402               	retlw	2
   280  18E8  34E2               	retlw	226
   281  18E9  3404               	retlw	4
   282  18EA  34C4               	retlw	196
   283  18EB  3409               	retlw	9
   284  18EC  3488               	retlw	136
   285  18ED  3413               	retlw	19
   286  18EE  3400               	retlw	0
   287  18EF  3400               	retlw	0
   288  18F0                     _RFM98Data:	
   289  18F0  3448               	retlw	72
   290  18F1  346F               	retlw	111
   291  18F2  3470               	retlw	112
   292  18F3  3465               	retlw	101
   293  18F4  3452               	retlw	82
   294  18F5  3446               	retlw	70
   295  18F6  3420               	retlw	32
   296  18F7  3452               	retlw	82
   297  18F8  3446               	retlw	70
   298  18F9  344D               	retlw	77
   299  18FA  3420               	retlw	32
   300  18FB  3443               	retlw	67
   301  18FC  344F               	retlw	79
   302  18FD  3442               	retlw	66
   303  18FE  3452               	retlw	82
   304  18FF  3446               	retlw	70
   305  1900  344D               	retlw	77
   306  1901  3439               	retlw	57
   307  1902  3438               	retlw	56
   308  1903  342D               	retlw	45
   309  1904  3453               	retlw	83
   310  1905  3400               	retlw	0
   311  1906                     _MusicTab_Error:	
   312  1906  3400               	retlw	0
   313  1907  34F8               	retlw	248
   314  1908  3496               	retlw	150
   315  1909  3400               	retlw	0
   316  190A  3400               	retlw	0
   317  190B  3400               	retlw	0
   318  190C  3432               	retlw	50
   319  190D  3400               	retlw	0
   320  190E  3480               	retlw	128
   321  190F  34F4               	retlw	244
   322  1910  34C8               	retlw	200
   323  1911  3400               	retlw	0
   324  1912  3400               	retlw	0
   325  1913  3400               	retlw	0
   326  1914  3432               	retlw	50
   327  1915  3400               	retlw	0
   328  1916  3400               	retlw	0
   329  1917  3400               	retlw	0
   330  1918  3400               	retlw	0
   331  1919  3400               	retlw	0
   332  191A                     _MusicTab_KeyOK:	
   333  191A  3480               	retlw	128
   334  191B  34F5               	retlw	245
   335  191C  3464               	retlw	100
   336  191D  3400               	retlw	0
   337  191E  3400               	retlw	0
   338  191F  34F3               	retlw	243
   339  1920  3496               	retlw	150
   340  1921  3400               	retlw	0
   341  1922  3400               	retlw	0
   342  1923  3400               	retlw	0
   343  1924  3400               	retlw	0
   344  1925  3400               	retlw	0
   345  1926                     _MusicTab_KeySet:	
   346  1926  3400               	retlw	0
   347  1927  34F3               	retlw	243
   348  1928  3496               	retlw	150
   349  1929  3400               	retlw	0
   350  192A  3480               	retlw	128
   351  192B  34F5               	retlw	245
   352  192C  3464               	retlw	100
   353  192D  3400               	retlw	0
   354  192E  3400               	retlw	0
   355  192F  3400               	retlw	0
   356  1930  3400               	retlw	0
   357  1931  3400               	retlw	0
   358  1932                     _C_RFM98_SpreadFactorBuf:	
   359  1932  3406               	retlw	6
   360  1933  3407               	retlw	7
   361  1934  3408               	retlw	8
   362  1935  3409               	retlw	9
   363  1936  340A               	retlw	10
   364  1937  340B               	retlw	11
   365  1938  340C               	retlw	12
   366  1939  3400               	retlw	0
   367  193A                     _MusicTab_KeyErr:	
   368  193A  3400               	retlw	0
   369  193B  34F1               	retlw	241
   370  193C  3432               	retlw	50
   371  193D  3400               	retlw	0
   372  193E  3400               	retlw	0
   373  193F  3400               	retlw	0
   374  1940  3400               	retlw	0
   375  1941  3400               	retlw	0
   376  1942                     _MusicTab_KeyMove:	
   377  1942  3480               	retlw	128
   378  1943  34F4               	retlw	244
   379  1944  3464               	retlw	100
   380  1945  3400               	retlw	0
   381  1946  3400               	retlw	0
   382  1947  3400               	retlw	0
   383  1948  3400               	retlw	0
   384  1949  3400               	retlw	0
   385  194A                     _MusicTab_RxSuccess:	
   386  194A  3400               	retlw	0
   387  194B  34F3               	retlw	243
   388  194C  3432               	retlw	50
   389  194D  3400               	retlw	0
   390  194E  3400               	retlw	0
   391  194F  3400               	retlw	0
   392  1950  3400               	retlw	0
   393  1951  3400               	retlw	0
   394  1952                     _C_RFM98_LoRaRSSIBuf:	
   395  1952  3428               	retlw	40
   396  1953  343C               	retlw	60
   397  1954  345A               	retlw	90
   398  1955  3478               	retlw	120
   399  1956  3400               	retlw	0
   400  1957                     _C_RFM98_ModuleName:	
   401  1957  3439               	retlw	57
   402  1958  3438               	retlw	56
   403  1959  3420               	retlw	32
   404  195A  3420               	retlw	32
   405  195B  3400               	retlw	0
   406  195C                     _C_RFM98_PowerBuf:	
   407  195C  3414               	retlw	20
   408  195D  3411               	retlw	17
   409  195E  340D               	retlw	13
   410  195F  340B               	retlw	11
   411  1960  3400               	retlw	0
   412  1961                     _C_RFM98_RSSIBuf:	
   413  1961  3419               	retlw	25
   414  1962  3432               	retlw	50
   415  1963  3446               	retlw	70
   416  1964  345F               	retlw	95
   417  1965  3400               	retlw	0
   418  1966                     _C_RFM98_RateBuf:	
   419  1966  340C               	retlw	12
   420  1967  3418               	retlw	24
   421  1968  3430               	retlw	48
   422  1969  3460               	retlw	96
   423  196A  3400               	retlw	0
   424  196B                     _C_RFM98_FreqBuf:	
   425  196B  34B2               	retlw	178
   426  196C  3401               	retlw	1
   427  196D  3400               	retlw	0
   428  196E  3400               	retlw	0
   429  196F                     _C_RFM98_ModemBuf:	
   430  196F  3412               	retlw	18
   431  1970  3410               	retlw	16
   432  1971  3400               	retlw	0
   433  1972                     _C_RFM98_BandBuf:	
   434  1972  3453               	retlw	83
   435  1973  3400               	retlw	0
   436  1974                     _C_RFM98_FdevBuf:	
   437  1974  3423               	retlw	35
   438  1975  3400               	retlw	0
   439  000B                     _INTCON	set	11
   440  0011                     _PIR1	set	17
   441  0012                     _PIR2	set	18
   442  000C                     _PORTA	set	12
   443  000D                     _PORTB	set	13
   444  000E                     _PORTC	set	14
   445  000F                     _PORTD	set	15
   446  0010                     _PORTE	set	16
   447  001B                     _PR2	set	27
   448  0018                     _T1CON	set	24
   449  001C                     _T2CON	set	28
   450  0017                     _TMR1H	set	23
   451  0016                     _TMR1L	set	22
   452  005F                     _GIE	set	95
   453  0060                     _RA0	set	96
   454  0061                     _RA1	set	97
   455  0065                     _RA5	set	101
   456  0068                     _RB0	set	104
   457  0069                     _RB1	set	105
   458  006A                     _RB2	set	106
   459  006B                     _RB3	set	107
   460  006D                     _RB5	set	109
   461  0072                     _RC2	set	114
   462  0073                     _RC3	set	115
   463  0074                     _RC4	set	116
   464  0075                     _RC5	set	117
   465  0079                     _RD1	set	121
   466  007A                     _RD2	set	122
   467  007B                     _RD3	set	123
   468  007C                     _RD4	set	124
   469  007D                     _RD5	set	125
   470  007E                     _RD6	set	126
   471  007F                     _RD7	set	127
   472  0080                     _RE0	set	128
   473  0082                     _RE2	set	130
   474  0088                     _TMR1IF	set	136
   475  00C0                     _TMR1ON	set	192
   476  0089                     _TMR2IF	set	137
   477  009D                     _ADCON0	set	157
   478  0095                     _OPTION_REG	set	149
   479  0099                     _OSCCON	set	153
   480  0096                     _PCON	set	150
   481  008C                     _TRISA	set	140
   482  008D                     _TRISB	set	141
   483  008E                     _TRISC	set	142
   484  008F                     _TRISD	set	143
   485  0090                     _TRISE	set	144
   486  0097                     _WDTCON	set	151
   487  048D                     _RCIE	set	1165
   488  0488                     _TMR1IE	set	1160
   489  0489                     _TMR2IE	set	1161
   490  0461                     _TRISA1	set	1121
   491  0465                     _TRISA5	set	1125
   492  0476                     _TRISC6	set	1142
   493  0477                     _TRISC7	set	1143
   494  0478                     _TRISD0	set	1144
   495  0480                     _TRISE0	set	1152
   496  0481                     _TRISE1	set	1153
   497  0482                     _TRISE2	set	1154
   498  048C                     _TXIE	set	1164
   499  011D                     _APFCON	set	285
   500  0116                     _BORCON	set	278
   501  0117                     _FVRCON	set	279
   502  010C                     _LATA	set	268
   503  010D                     _LATB	set	269
   504  010E                     _LATC	set	270
   505  010F                     _LATD	set	271
   506  0110                     _LATE	set	272
   507  0878                     _LATD0	set	2168
   508  0191                     _PMADR	set	401
   509  0193                     _PMDAT	set	403
   510  018C                     _ANSELA	set	396
   511  018D                     _ANSELB	set	397
   512  018E                     _ANSELC	set	398
   513  018F                     _ANSELD	set	399
   514  0190                     _ANSELE	set	400
   515  019F                     _BAUDCON	set	415
   516  0196                     _PMCON2	set	406
   517  0194                     _PMDATH	set	404
   518  0193                     _PMDATL	set	403
   519  019D                     _RCSTA	set	413
   520  019C                     _SPBRGH	set	412
   521  019B                     _SPBRGL	set	411
   522  019E                     _TXSTA	set	414
   523  0CAE                     _CFGS	set	3246
   524  0CAC                     _FREE	set	3244
   525  0CAD                     _LWLO	set	3245
   526  0CA8                     _RD	set	3240
   527  0CA9                     _WR	set	3241
   528  0CAA                     _WREN	set	3242
   529  020D                     _WPUB	set	525
   530  0210                     _WPUE	set	528
   531  1976                     STR_19:	
   532  1976  3420               	retlw	32	;' '
   533  1977  3445               	retlw	69	;'E'
   534  1978  3472               	retlw	114	;'r'
   535  1979  3472               	retlw	114	;'r'
   536  197A  3420               	retlw	32	;' '
   537  197B  3420               	retlw	32	;' '
   538  197C  3400               	retlw	0
   539  197D                     STR_5:	
   540  197D  3420               	retlw	32	;' '
   541  197E  3473               	retlw	115	;'s'
   542  197F  3465               	retlw	101	;'e'
   543  1980  3474               	retlw	116	;'t'
   544  1981  3420               	retlw	32	;' '
   545  1982  3420               	retlw	32	;' '
   546  1983  3400               	retlw	0
   547  1984                     STR_17:	
   548  1984  3453               	retlw	83	;'S'
   549  1985  344C               	retlw	76	;'L'
   550  1986  3445               	retlw	69	;'E'
   551  1987  3445               	retlw	69	;'E'
   552  1988  3450               	retlw	80	;'P'
   553  1989  3420               	retlw	32	;' '
   554  198A  3400               	retlw	0
   555  198B                     STR_10:	
   556  198B  344F               	retlw	79	;'O'
   557  198C  344F               	retlw	79	;'O'
   558  198D  342D               	retlw	45	;'-'
   559  198E  342D               	retlw	45	;'-'
   560  198F  3452               	retlw	82	;'R'
   561  1990  3420               	retlw	32	;' '
   562  1991  3400               	retlw	0
   563  1992                     STR_13:	
   564  1992  344C               	retlw	76	;'L'
   565  1993  3452               	retlw	82	;'R'
   566  1994  342D               	retlw	45	;'-'
   567  1995  342D               	retlw	45	;'-'
   568  1996  3452               	retlw	82	;'R'
   569  1997  3420               	retlw	32	;' '
   570  1998  3400               	retlw	0
   571  1999                     STR_7:	
   572  1999  3446               	retlw	70	;'F'
   573  199A  3453               	retlw	83	;'S'
   574  199B  342D               	retlw	45	;'-'
   575  199C  342D               	retlw	45	;'-'
   576  199D  3452               	retlw	82	;'R'
   577  199E  3420               	retlw	32	;' '
   578  199F  3400               	retlw	0
   579  19A0                     STR_16:	
   580  19A0  3420               	retlw	32	;' '
   581  19A1  3454               	retlw	84	;'T'
   582  19A2  342D               	retlw	45	;'-'
   583  19A3  342D               	retlw	45	;'-'
   584  19A4  3452               	retlw	82	;'R'
   585  19A5  3420               	retlw	32	;' '
   586  19A6  3400               	retlw	0
   587  19A7                     STR_9:	
   588  19A7  344F               	retlw	79	;'O'
   589  19A8  344F               	retlw	79	;'O'
   590  19A9  342D               	retlw	45	;'-'
   591  19AA  342D               	retlw	45	;'-'
   592  19AB  3454               	retlw	84	;'T'
   593  19AC  3420               	retlw	32	;' '
   594  19AD  3400               	retlw	0
   595  19AE                     STR_12:	
   596  19AE  344C               	retlw	76	;'L'
   597  19AF  3452               	retlw	82	;'R'
   598  19B0  342D               	retlw	45	;'-'
   599  19B1  342D               	retlw	45	;'-'
   600  19B2  3454               	retlw	84	;'T'
   601  19B3  3420               	retlw	32	;' '
   602  19B4  3400               	retlw	0
   603  19B5                     STR_6:	
   604  19B5  3446               	retlw	70	;'F'
   605  19B6  3453               	retlw	83	;'S'
   606  19B7  342D               	retlw	45	;'-'
   607  19B8  342D               	retlw	45	;'-'
   608  19B9  3454               	retlw	84	;'T'
   609  19BA  3420               	retlw	32	;' '
   610  19BB  3400               	retlw	0
   611  19BC                     STR_15:	
   612  19BC  3420               	retlw	32	;' '
   613  19BD  3454               	retlw	84	;'T'
   614  19BE  342D               	retlw	45	;'-'
   615  19BF  342D               	retlw	45	;'-'
   616  19C0  3454               	retlw	84	;'T'
   617  19C1  3420               	retlw	32	;' '
   618  19C2  3400               	retlw	0
   619  19C3                     STR_4:	
   620  19C3  3473               	retlw	115	;'s'
   621  19C4  3465               	retlw	101	;'e'
   622  19C5  346C               	retlw	108	;'l'
   623  19C6  342D               	retlw	45	;'-'
   624  19C7  3452               	retlw	82	;'R'
   625  19C8  3446               	retlw	70	;'F'
   626  19C9  3400               	retlw	0
   627  19CA                     STR_2:	
   628  19CA  3473               	retlw	115	;'s'
   629  19CB  3465               	retlw	101	;'e'
   630  19CC  346C               	retlw	108	;'l'
   631  19CD  342D               	retlw	45	;'-'
   632  19CE  344F               	retlw	79	;'O'
   633  19CF  344F               	retlw	79	;'O'
   634  19D0  3400               	retlw	0
   635  19D1                     STR_11:	
   636  19D1  344F               	retlw	79	;'O'
   637  19D2  344F               	retlw	79	;'O'
   638  19D3  342D               	retlw	45	;'-'
   639  19D4  342D               	retlw	45	;'-'
   640  19D5  3454               	retlw	84	;'T'
   641  19D6  3452               	retlw	82	;'R'
   642  19D7  3400               	retlw	0
   643  19D8                     STR_14:	
   644  19D8  344C               	retlw	76	;'L'
   645  19D9  3452               	retlw	82	;'R'
   646  19DA  342D               	retlw	45	;'-'
   647  19DB  342D               	retlw	45	;'-'
   648  19DC  3454               	retlw	84	;'T'
   649  19DD  3452               	retlw	82	;'R'
   650  19DE  3400               	retlw	0
   651  19DF                     STR_8:	
   652  19DF  3446               	retlw	70	;'F'
   653  19E0  3453               	retlw	83	;'S'
   654  19E1  342D               	retlw	45	;'-'
   655  19E2  342D               	retlw	45	;'-'
   656  19E3  3454               	retlw	84	;'T'
   657  19E4  3452               	retlw	82	;'R'
   658  19E5  3400               	retlw	0
   659  19E6                     STR_1:	
   660  19E6  3473               	retlw	115	;'s'
   661  19E7  3465               	retlw	101	;'e'
   662  19E8  346C               	retlw	108	;'l'
   663  19E9  342D               	retlw	45	;'-'
   664  19EA  3446               	retlw	70	;'F'
   665  19EB  3453               	retlw	83	;'S'
   666  19EC  3400               	retlw	0
   667  19ED                     STR_3:	
   668  19ED  3473               	retlw	115	;'s'
   669  19EE  3465               	retlw	101	;'e'
   670  19EF  346C               	retlw	108	;'l'
   671  19F0  342D               	retlw	45	;'-'
   672  19F1  344C               	retlw	76	;'L'
   673  19F2  3472               	retlw	114	;'r'
   674  19F3  3400               	retlw	0
   675  19F4                     STR_20:	
   676  19F4  3420               	retlw	32	;' '
   677  19F5  3420               	retlw	32	;' '
   678  19F6  3420               	retlw	32	;' '
   679  19F7  3420               	retlw	32	;' '
   680  19F8  3400               	retlw	0
   681  19F6                     
   682                           	psect	cinit
   683  0099                     start_initialization:	
   684  0099  3020               	movlw	low __pbssBANK0
   685                           
   686                           ; Clear objects allocated to COMMON
   687  009A  01FA               	clrf	__pbssCOMMON& (0+127)
   688  009B  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   689                           
   690                           ; Clear objects allocated to BANK0
   691  009C  0084               	movwf	4
   692  009D  3000               	movlw	high __pbssBANK0
   693  009E  0085               	movwf	5
   694  009F  3040               	movlw	64
   695  00A0  3187  27DF  3180   	fcall	clear_ram
   696                           
   697                           ; Clear objects allocated to BANK1
   698  00A3  30A0               	movlw	low __pbssBANK1
   699  00A4  0084               	movwf	4
   700  00A5  3000               	movlw	high __pbssBANK1
   701  00A6  0085               	movwf	5
   702  00A7  3044               	movlw	68
   703  00A8  3187  27DF  3180   	fcall	clear_ram
   704                           
   705                           ; Clear objects allocated to BANK2
   706  00AB  3020               	movlw	low __pbssBANK2
   707  00AC  0084               	movwf	4
   708  00AD  3001               	movlw	high __pbssBANK2
   709  00AE  0085               	movwf	5
   710  00AF  3020               	movlw	32
   711  00B0  3187  27DF  3180   	fcall	clear_ram
   712                           
   713                           ; Clear objects allocated to BANK3
   714  00B3  30A0               	movlw	low __pbssBANK3
   715  00B4  0084               	movwf	4
   716  00B5  3001               	movlw	high __pbssBANK3
   717  00B6  0085               	movwf	5
   718  00B7  303C               	movlw	60
   719  00B8  3187  27DF  3180   	fcall	clear_ram
   720  00BB                     end_of_initialization:	
   721                           ;End of C runtime variable initialization code
   722                           
   723  00BB  0020               	movlb	0
   724  00BC  28BD               	ljmp	_main	;jump to C main() function
   725  00BD                     __pmaintext:	
   726 ;;Data sizes: Strings 131, constant 373, data 0, bss 226, persistent 0 stack 0
   727 ;;Auto spaces:   Size  Autos    Used
   728 ;; COMMON          14     10      12
   729 ;; BANK0           80     16      80
   730 ;; BANK1           80      2      70
   731 ;; BANK2           80      0      32
   732 ;; BANK3           80      0      60
   733 ;; BANK4           80      0       0
   734 ;; BANK5           80      0       0
   735 ;; BANK6           80      0       0
   736 ;; BANK7           80      0       0
   737 ;; BANK8           80      0       0
   738 ;; BANK9           80      0       0
   739 ;; BANK10          80      0       0
   740 ;; BANK11          80      0       0
   741 ;; BANK12          48      0       0
   742 ;;
   743 ;; Pointer list with targets:
   744 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   745 ;;
   746 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   747 ;;
   748 ;; BurstWrite@ptr	PTR unsigned char  size(2) Largest target is 22
   749 ;;		 -> RFM98Data(CODE[22]), 
   750 ;;
   751 ;; SPIBurstRead@ptr	PTR unsigned char  size(1) Largest target is 32
   752 ;;		 -> gb_RxData(BANK2[32]), 
   753 ;;
   754 ;; RFM98_Running@RSSI	PTR unsigned char  size(1) Largest target is 1
   755 ;;		 -> gb_RF_RSSI(BANK0[1]), 
   756 ;;
   757 ;; RFM98_Running@RxFlag	PTR unsigned char  size(1) Largest target is 1
   758 ;;		 -> main@RxFlag(BANK1[1]), 
   759 ;;
   760 ;; RFM98_Running@TxFlag	PTR unsigned char  size(1) Largest target is 1
   761 ;;		 -> main@TxFlag(BANK1[1]), 
   762 ;;
   763 ;; BeepOn@Tone	PTR unsigned int  size(2) Largest target is 36
   764 ;;		 -> MusicTab_RxSuccess(CODE[8]), MusicTab_PowerOn(CODE[36]), MusicTab_KeyOver(CODE[32]), MusicTab_KeyErr(CODE[8]), 
   765 ;;		 -> MusicTab_KeyOK(CODE[12]), MusicTab_KeyMove(CODE[8]), MusicTab_KeySet(CODE[12]), MusicTab_Error(CODE[20]), 
   766 ;;
   767 ;; DisplayRFParameter@TempDispBuf	PTR unsigned char  size(2) Largest target is 7
   768 ;;		 -> STR_19(CODE[7]), STR_18(CODE[7]), STR_17(CODE[7]), STR_16(CODE[7]), 
   769 ;;		 -> STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[7]), STR_12(CODE[7]), 
   770 ;;		 -> STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[7]), 
   771 ;;		 -> STR_7(CODE[7]), STR_6(CODE[7]), STR_5(CODE[7]), 
   772 ;;
   773 ;; RF_LoRaBandWidthBuf	PTR unsigned int  size(2) Largest target is 22
   774 ;;		 -> NULL(NULL[0]), C_RFM98_LoRaBandBuf(CODE[22]), 
   775 ;;
   776 ;; RF_RSSIBuf	PTR unsigned char  size(2) Largest target is 5
   777 ;;		 -> NULL(NULL[0]), C_RFM98_LoRaRSSIBuf(CODE[5]), C_RFM98_RSSIBuf(CODE[5]), 
   778 ;;
   779 ;; RF_BandBuf	PTR unsigned char  size(2) Largest target is 2
   780 ;;		 -> NULL(NULL[0]), C_RFM98_BandBuf(CODE[2]), 
   781 ;;
   782 ;; RF_FdevBuf	PTR unsigned char  size(2) Largest target is 2
   783 ;;		 -> NULL(NULL[0]), C_RFM98_FdevBuf(CODE[2]), 
   784 ;;
   785 ;; RF_PowerBuf	PTR unsigned char  size(2) Largest target is 5
   786 ;;		 -> NULL(NULL[0]), C_RFM98_PowerBuf(CODE[5]), 
   787 ;;
   788 ;; RF_RateBuf	PTR unsigned char  size(2) Largest target is 8
   789 ;;		 -> NULL(NULL[0]), C_RFM98_SpreadFactorBuf(CODE[8]), C_RFM98_RateBuf(CODE[5]), 
   790 ;;
   791 ;; RF_FreqBuf	PTR unsigned int  size(2) Largest target is 4
   792 ;;		 -> NULL(NULL[0]), C_RFM98_FreqBuf(CODE[4]), 
   793 ;;
   794 ;; RF_ModuleName	PTR unsigned char  size(2) Largest target is 5
   795 ;;		 -> NULL(NULL[0]), C_RFM98_ModuleName(CODE[5]), 
   796 ;;
   797 ;; RF_ModemBuf	PTR unsigned char  size(2) Largest target is 3
   798 ;;		 -> NULL(NULL[0]), C_RFM98_ModemBuf(CODE[3]), 
   799 ;;
   800 ;; SendStringToDispBuf@datBuf	PTR unsigned char  size(2) Largest target is 7
   801 ;;		 -> NULL(NULL[0]), STR_25(CODE[4]), STR_24(CODE[4]), STR_23(CODE[5]), 
   802 ;;		 -> STR_22(CODE[4]), STR_21(CODE[3]), STR_20(CODE[5]), STR_19(CODE[7]), 
   803 ;;		 -> STR_18(CODE[7]), STR_17(CODE[7]), STR_16(CODE[7]), STR_15(CODE[7]), 
   804 ;;		 -> STR_14(CODE[7]), STR_13(CODE[7]), STR_12(CODE[7]), STR_11(CODE[7]), 
   805 ;;		 -> STR_10(CODE[7]), STR_9(CODE[7]), STR_8(CODE[7]), STR_7(CODE[7]), 
   806 ;;		 -> STR_6(CODE[7]), STR_5(CODE[7]), STR_4(CODE[7]), STR_3(CODE[7]), 
   807 ;;		 -> STR_2(CODE[7]), STR_1(CODE[7]), C_RFM98_ModuleName(CODE[5]), 
   808 ;;
   809 ;; FlashWrite@array	PTR unsigned char  size(1) Largest target is 32
   810 ;;		 -> gb_RxData(BANK2[32]), 
   811 ;;
   812 ;; FlashRead@array	PTR unsigned char  size(1) Largest target is 32
   813 ;;		 -> gb_RxData(BANK2[32]), 
   814 ;;
   815 ;;
   816 ;; Critical Paths under _main in COMMON
   817 ;;
   818 ;;   _RFM98_Running->_RFM98_LoRaRxPacket
   819 ;;   _RFM98_Running->_BeepOn
   820 ;;   _RFM98_Running->_RFM98_FskTxPacket
   821 ;;   _RFM98_Running->_RFM98_FskRxPacket
   822 ;;   _RFM98_TestRx->_RFM98_FSKRxWaitStable
   823 ;;   _RFM98_EntryTestRx->_RFM98_TestConfig
   824 ;;   _RFM98_TestTx->_RFM98_FSKTxWaitStable
   825 ;;   _RFM98_EntryTestTx->_RFM98_TestConfig
   826 ;;   _RFM98_FskTxPacket->_BurstWrite
   827 ;;   _RFM98_FskEntryTx->_RFM98_Config
   828 ;;   _RFM98_FskRxPacket->_SPIBurstRead
   829 ;;   _RFM98_FskEntryRx->_RFM98_Config
   830 ;;   _RFM98_LoRaTxPacket->_BurstWrite
   831 ;;   _RFM98_LoRaEntryTx->_RFM98_Config
   832 ;;   _RFM98_LoRaRxPacket->_SPIBurstRead
   833 ;;   _RFM98_LoRaEntryRx->_RFM98_Config
   834 ;;   _WorkModeSelect->_BeepOn
   835 ;;   _WorkModeSelect->_SaveRFParameterToFlash
   836 ;;   _ModemSelect->_BeepOn
   837 ;;   _ModemSelect->_SaveRFParameterToFlash
   838 ;;   _RFParameterSelect->_BeepOn
   839 ;;   _RFParameterSelect->_SaveRFParameterToFlash
   840 ;;   _RFM98_TestConfig->_SPIWrite
   841 ;;   _RFM98_FSKTxWaitStable->_SPIRead
   842 ;;   _RFM98_FSKRxWaitStable->_SPIRead
   843 ;;   _RFM98_ReadRSSI->_SPIRead
   844 ;;   _RFM98_LoRaTxWaitStable->_SPIRead
   845 ;;   _RFM98_LoRaReadRSSI->_SPIRead
   846 ;;   _RFM98_LoRaRxWaitStable->_SPIRead
   847 ;;   _RFM98_Config->_SPIWrite
   848 ;;   _PowerOnMusic->_BeepOn
   849 ;;   _DisplayRFParameter->_SendStringToDispBuf
   850 ;;   _DisplayRFParameter->_BeepOn
   851 ;;   _SaveRFParameterToFlash->_FlashWrite
   852 ;;   _LCD_Init->_Clr_LCD
   853 ;;   _PowerUpDelay->_Delay_ms
   854 ;;   _RFM98_FskClearFIFO->_SPIWrite
   855 ;;   _BurstWrite->_SPICmd8bit
   856 ;;   _SPIBurstRead->_SPICmd8bit
   857 ;;   _SPIBurstRead->_SPIRead8bit
   858 ;;   _SPIRead->_SPICmd8bit
   859 ;;   _SPIRead->_SPIRead8bit
   860 ;;   _RFM98_LoRaClearIrq->_SPIWrite
   861 ;;   _RFM98_EntryLoRa->_SPIWrite
   862 ;;   _RFM98_Sleep->_SPIWrite
   863 ;;   _RFM98_Standby->_SPIWrite
   864 ;;   _ModuleSelectModeEntryCheck->_FlashRead
   865 ;;   _KeyScan->_KeyRead
   866 ;;   _LCD_Display->_CK1622_WriteByte
   867 ;;   _SendNumberToDispBuf->___lwmod
   868 ;;   _SendStringToDispBuf->_AsciiToDisplay
   869 ;;   _Clr_LCD->_CK1622_WriteByte
   870 ;;   ___lwmod->___lwdiv
   871 ;;   _SPIWrite->___bmul
   872 ;;
   873 ;; Critical Paths under _ISR_timer in COMMON
   874 ;;
   875 ;;   None.
   876 ;;
   877 ;; Critical Paths under _main in BANK0
   878 ;;
   879 ;;   _main->_MenuConfig
   880 ;;   _RFM98_Running->_RFM98_FskEntryTx
   881 ;;   _RFM98_Running->_RFM98_FskEntryRx
   882 ;;   _MenuConfig->_DisplayRFParameter
   883 ;;   _RFM98_EntryTestRx->_RFM98_TestConfig
   884 ;;   _RFM98_EntryTestTx->_RFM98_TestConfig
   885 ;;   _RFM98_FskTxPacket->_BurstWrite
   886 ;;   _RFM98_FskEntryTx->_RFM98_Config
   887 ;;   _RFM98_FskEntryRx->_RFM98_Config
   888 ;;   _RFM98_LoRaTxPacket->_BurstWrite
   889 ;;   _RFM98_LoRaEntryTx->_RFM98_Config
   890 ;;   _RFM98_LoRaEntryRx->_RFM98_Config
   891 ;;   _DisplayRFParameter->_SendNumberToDispBuf
   892 ;;   _PowerUpDelay->_Delay_ms
   893 ;;   _SendNumberToDispBuf->___lwmod
   894 ;;
   895 ;; Critical Paths under _ISR_timer in BANK0
   896 ;;
   897 ;;   None.
   898 ;;
   899 ;; Critical Paths under _main in BANK1
   900 ;;
   901 ;;   None.
   902 ;;
   903 ;; Critical Paths under _ISR_timer in BANK1
   904 ;;
   905 ;;   None.
   906 ;;
   907 ;; Critical Paths under _main in BANK2
   908 ;;
   909 ;;   None.
   910 ;;
   911 ;; Critical Paths under _ISR_timer in BANK2
   912 ;;
   913 ;;   None.
   914 ;;
   915 ;; Critical Paths under _main in BANK3
   916 ;;
   917 ;;   None.
   918 ;;
   919 ;; Critical Paths under _ISR_timer in BANK3
   920 ;;
   921 ;;   None.
   922 ;;
   923 ;; Critical Paths under _main in BANK4
   924 ;;
   925 ;;   None.
   926 ;;
   927 ;; Critical Paths under _ISR_timer in BANK4
   928 ;;
   929 ;;   None.
   930 ;;
   931 ;; Critical Paths under _main in BANK5
   932 ;;
   933 ;;   None.
   934 ;;
   935 ;; Critical Paths under _ISR_timer in BANK5
   936 ;;
   937 ;;   None.
   938 ;;
   939 ;; Critical Paths under _main in BANK6
   940 ;;
   941 ;;   None.
   942 ;;
   943 ;; Critical Paths under _ISR_timer in BANK6
   944 ;;
   945 ;;   None.
   946 ;;
   947 ;; Critical Paths under _main in BANK7
   948 ;;
   949 ;;   None.
   950 ;;
   951 ;; Critical Paths under _ISR_timer in BANK7
   952 ;;
   953 ;;   None.
   954 ;;
   955 ;; Critical Paths under _main in BANK8
   956 ;;
   957 ;;   None.
   958 ;;
   959 ;; Critical Paths under _ISR_timer in BANK8
   960 ;;
   961 ;;   None.
   962 ;;
   963 ;; Critical Paths under _main in BANK9
   964 ;;
   965 ;;   None.
   966 ;;
   967 ;; Critical Paths under _ISR_timer in BANK9
   968 ;;
   969 ;;   None.
   970 ;;
   971 ;; Critical Paths under _main in BANK10
   972 ;;
   973 ;;   None.
   974 ;;
   975 ;; Critical Paths under _ISR_timer in BANK10
   976 ;;
   977 ;;   None.
   978 ;;
   979 ;; Critical Paths under _main in BANK11
   980 ;;
   981 ;;   None.
   982 ;;
   983 ;; Critical Paths under _ISR_timer in BANK11
   984 ;;
   985 ;;   None.
   986 ;;
   987 ;; Critical Paths under _main in BANK12
   988 ;;
   989 ;;   None.
   990 ;;
   991 ;; Critical Paths under _ISR_timer in BANK12
   992 ;;
   993 ;;   None.
   994 ;;
   995 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   996 ;;
   997 ;;
   998 ;;Call Graph Tables:
   999 ;;
  1000 ;; ---------------------------------------------------------------------------------
  1001 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1002 ;; ---------------------------------------------------------------------------------
  1003 ;; (0) _main                                                 2     2      0   31476
  1004 ;;                                              0 BANK1      2     2      0
  1005 ;;                            _InitSfr
  1006 ;;                       _PowerUpDelay
  1007 ;;                           _InitPort
  1008 ;;                        _timer1_init
  1009 ;;                        _timer2_init
  1010 ;;                           _LCD_Init
  1011 ;;                            _BeepOff
  1012 ;;         _ModuleSelectModeEntryCheck
  1013 ;;                          _Uart_init
  1014 ;;                       _PowerOnMusic
  1015 ;;                         _MenuConfig
  1016 ;;                      _RFM98_Running
  1017 ;;                         _TxLED_Deal
  1018 ;;                         _RxLED_Deal
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; (1) _RFM98_Running                                        7     2      5   16641
  1021 ;;                                              6 BANK0      7     2      5
  1022 ;;                  _RFM98_LoRaEntryTx
  1023 ;;                 _RFM98_LoRaTxPacket
  1024 ;;                  _RFM98_LoRaEntryRx
  1025 ;;                 _RFM98_LoRaRxPacket
  1026 ;;                             _BeepOn
  1027 ;;                 _RFM98_LoRaReadRSSI
  1028 ;;                   _RFM98_FskEntryTx
  1029 ;;                  _RFM98_FskTxPacket
  1030 ;;                   _RFM98_FskEntryRx
  1031 ;;                  _RFM98_FskRxPacket
  1032 ;;                     _RFM98_ReadRSSI
  1033 ;;                      _RFM98_Standby
  1034 ;;                        _RFM98_Sleep
  1035 ;;                  _RFM98_EntryTestTx
  1036 ;;                       _RFM98_TestTx
  1037 ;;                  _RFM98_EntryTestRx
  1038 ;;                       _RFM98_TestRx
  1039 ;; ---------------------------------------------------------------------------------
  1040 ;; (1) _MenuConfig                                           1     1      0   10650
  1041 ;;                                             15 BANK0      1     1      0
  1042 ;;                            _KeyScan
  1043 ;;                  _RFParameterSelect
  1044 ;;                        _ModemSelect
  1045 ;;                     _WorkModeSelect
  1046 ;;                 _DisplayRFParameter
  1047 ;;                        _LCD_Display
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; (2) _RFM98_TestRx                                         0     0      0     275
  1050 ;;              _RFM98_FSKRxWaitStable
  1051 ;; ---------------------------------------------------------------------------------
  1052 ;; (2) _RFM98_EntryTestRx                                    1     1      0    1128
  1053 ;;                                              1 BANK0      1     1      0
  1054 ;;                   _RFM98_TestConfig
  1055 ;;                           _SPIWrite
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; (2) _RFM98_TestTx                                         0     0      0     275
  1058 ;;              _RFM98_FSKTxWaitStable
  1059 ;; ---------------------------------------------------------------------------------
  1060 ;; (2) _RFM98_EntryTestTx                                    1     1      0    1128
  1061 ;;                                              1 BANK0      1     1      0
  1062 ;;                   _RFM98_TestConfig
  1063 ;;                           _SPIWrite
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (2) _RFM98_FskTxPacket                                    1     1      0     819
  1066 ;;                                              9 COMMON     1     1      0
  1067 ;;              _RFM98_FSKTxWaitStable
  1068 ;;                         _BurstWrite
  1069 ;;                      _RFM98_Standby
  1070 ;;                           _SPIWrite
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; (2) _RFM98_FskEntryTx                                     3     3      0    1678
  1073 ;;                                              3 BANK0      3     3      0
  1074 ;;                       _RFM98_Config
  1075 ;;                           _SPIWrite
  1076 ;; ---------------------------------------------------------------------------------
  1077 ;; (2) _RFM98_FskRxPacket                                    2     2      0    1042
  1078 ;;                                              9 COMMON     1     1      0
  1079 ;;                                              0 BANK0      1     1      0
  1080 ;;              _RFM98_FSKRxWaitStable
  1081 ;;                       _SPIBurstRead
  1082 ;;                 _RFM98_FskClearFIFO
  1083 ;; ---------------------------------------------------------------------------------
  1084 ;; (2) _RFM98_FskEntryRx                                     3     3      0    1678
  1085 ;;                                              3 BANK0      3     3      0
  1086 ;;                       _RFM98_Config
  1087 ;;                           _SPIWrite
  1088 ;; ---------------------------------------------------------------------------------
  1089 ;; (2) _RFM98_LoRaTxPacket                                   2     2      0    1267
  1090 ;;                                              2 BANK0      2     2      0
  1091 ;;             _RFM98_LoRaTxWaitStable
  1092 ;;                         _BurstWrite
  1093 ;;                           _SPIWrite
  1094 ;;                            _SPIRead
  1095 ;;                 _RFM98_LoRaClearIrq
  1096 ;;                      _RFM98_Standby
  1097 ;; ---------------------------------------------------------------------------------
  1098 ;; (2) _RFM98_LoRaEntryTx                                    1     1      0    1894
  1099 ;;                                              3 BANK0      1     1      0
  1100 ;;                       _RFM98_Config
  1101 ;;                           _SPIWrite
  1102 ;;                 _RFM98_LoRaClearIrq
  1103 ;;                            _SPIRead
  1104 ;; ---------------------------------------------------------------------------------
  1105 ;; (2) _RFM98_LoRaRxPacket                                   4     4      0    1493
  1106 ;;                                              9 COMMON     1     1      0
  1107 ;;                                              0 BANK0      3     3      0
  1108 ;;             _RFM98_LoRaRxWaitStable
  1109 ;;                            _SPIRead
  1110 ;;                           _SPIWrite
  1111 ;;                       _SPIBurstRead
  1112 ;;                 _RFM98_LoRaClearIrq
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (2) _RFM98_LoRaEntryRx                                    1     1      0    1894
  1115 ;;                                              3 BANK0      1     1      0
  1116 ;;                       _RFM98_Config
  1117 ;;                           _SPIWrite
  1118 ;;                 _RFM98_LoRaClearIrq
  1119 ;;                            _SPIRead
  1120 ;; ---------------------------------------------------------------------------------
  1121 ;; (2) _WorkModeSelect                                       3     3      0    1170
  1122 ;;                                              0 BANK0      3     3      0
  1123 ;;                            _Clr_LCD
  1124 ;;                             _BeepOn
  1125 ;;             _SaveRFParameterToFlash
  1126 ;; ---------------------------------------------------------------------------------
  1127 ;; (2) _ModemSelect                                          3     3      0     762
  1128 ;;                                              0 BANK0      3     3      0
  1129 ;;                             _BeepOn
  1130 ;;                _InitSystemParameter
  1131 ;;             _SaveRFParameterToFlash
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; (2) _RFParameterSelect                                    5     5      0     762
  1134 ;;                                              0 BANK0      5     5      0
  1135 ;;                             _BeepOn
  1136 ;;             _SaveRFParameterToFlash
  1137 ;; ---------------------------------------------------------------------------------
  1138 ;; (3) _RFM98_TestConfig                                     3     3      0     924
  1139 ;;                                              8 COMMON     2     2      0
  1140 ;;                                              0 BANK0      1     1      0
  1141 ;;                        _RFM98_Sleep
  1142 ;;                             ___bmul
  1143 ;;                           _SPIWrite
  1144 ;;                      _RFM98_Standby
  1145 ;; ---------------------------------------------------------------------------------
  1146 ;; (3) _RFM98_FSKTxWaitStable                                2     2      0     275
  1147 ;;                                              6 COMMON     2     2      0
  1148 ;;                            _SPIRead
  1149 ;; ---------------------------------------------------------------------------------
  1150 ;; (3) _RFM98_FSKRxWaitStable                                2     2      0     275
  1151 ;;                                              6 COMMON     2     2      0
  1152 ;;                            _SPIRead
  1153 ;; ---------------------------------------------------------------------------------
  1154 ;; (2) _RFM98_ReadRSSI                                       1     1      0     349
  1155 ;;                                              6 COMMON     1     1      0
  1156 ;;                            _SPIRead
  1157 ;; ---------------------------------------------------------------------------------
  1158 ;; (3) _RFM98_LoRaTxWaitStable                               1     1      0     309
  1159 ;;                                              6 COMMON     1     1      0
  1160 ;;                            _SPIRead
  1161 ;; ---------------------------------------------------------------------------------
  1162 ;; (2) _RFM98_LoRaReadRSSI                                   2     2      0     315
  1163 ;;                                              6 COMMON     2     2      0
  1164 ;;                            _SPIRead
  1165 ;; ---------------------------------------------------------------------------------
  1166 ;; (3) _RFM98_LoRaRxWaitStable                               1     1      0     275
  1167 ;;                                              6 COMMON     1     1      0
  1168 ;;                            _SPIRead
  1169 ;; ---------------------------------------------------------------------------------
  1170 ;; (3) _RFM98_Config                                         5     5      0    1375
  1171 ;;                                              8 COMMON     2     2      0
  1172 ;;                                              0 BANK0      3     3      0
  1173 ;;                        _RFM98_Sleep
  1174 ;;                    _RFM98_EntryLoRa
  1175 ;;                             ___bmul
  1176 ;;                           _SPIWrite
  1177 ;;                            _SPIRead
  1178 ;;                      _RFM98_Standby
  1179 ;; ---------------------------------------------------------------------------------
  1180 ;; (1) _PowerOnMusic                                         0     0      0    3246
  1181 ;;                             _BeepOn
  1182 ;;                     _LCD_DisplayAll
  1183 ;;                        _LCD_Display
  1184 ;;                            _Clr_LCD
  1185 ;; ---------------------------------------------------------------------------------
  1186 ;; (2) _DisplayRFParameter                                   6     6      0    5227
  1187 ;;                                              9 BANK0      6     6      0
  1188 ;;                _SendStringToDispBuf
  1189 ;;                             _BeepOn
  1190 ;;                _SendNumberToDispBuf
  1191 ;;                            ___lwdiv
  1192 ;; ---------------------------------------------------------------------------------
  1193 ;; (3) _SaveRFParameterToFlash                               1     1      0     322
  1194 ;;                                              9 COMMON     1     1      0
  1195 ;;                         _FlashErase
  1196 ;;                         _FlashWrite
  1197 ;; ---------------------------------------------------------------------------------
  1198 ;; (1) _LCD_Init                                             0     0      0     519
  1199 ;;                    _CK1622_WriteCmd
  1200 ;;                            _Clr_LCD
  1201 ;; ---------------------------------------------------------------------------------
  1202 ;; (1) _PowerUpDelay                                         0     0      0      99
  1203 ;;                           _Delay_ms
  1204 ;; ---------------------------------------------------------------------------------
  1205 ;; (3) _RFM98_FskClearFIFO                                   0     0      0     105
  1206 ;;                           _SPIWrite
  1207 ;; ---------------------------------------------------------------------------------
  1208 ;; (3) _BurstWrite                                           7     4      3     294
  1209 ;;                                              4 COMMON     5     2      3
  1210 ;;                                              0 BANK0      2     2      0
  1211 ;;                         _SPICmd8bit
  1212 ;; ---------------------------------------------------------------------------------
  1213 ;; (3) _SPIBurstRead                                         5     3      2     402
  1214 ;;                                              4 COMMON     5     3      2
  1215 ;;                         _SPICmd8bit
  1216 ;;                        _SPIRead8bit
  1217 ;; ---------------------------------------------------------------------------------
  1218 ;; (4) _SPIRead                                              2     2      0     275
  1219 ;;                                              4 COMMON     2     2      0
  1220 ;;                         _SPICmd8bit
  1221 ;;                        _SPIRead8bit
  1222 ;; ---------------------------------------------------------------------------------
  1223 ;; (3) _RFM98_LoRaClearIrq                                   0     0      0     105
  1224 ;;                           _SPIWrite
  1225 ;; ---------------------------------------------------------------------------------
  1226 ;; (4) _RFM98_EntryLoRa                                      0     0      0     105
  1227 ;;                           _SPIWrite
  1228 ;; ---------------------------------------------------------------------------------
  1229 ;; (4) _RFM98_Sleep                                          0     0      0     105
  1230 ;;                           _SPIWrite
  1231 ;; ---------------------------------------------------------------------------------
  1232 ;; (4) _RFM98_Standby                                        0     0      0     105
  1233 ;;                           _SPIWrite
  1234 ;; ---------------------------------------------------------------------------------
  1235 ;; (1) _ModuleSelectModeEntryCheck                           0     0      0     161
  1236 ;;                          _FlashRead
  1237 ;;                _InitSystemParameter
  1238 ;; ---------------------------------------------------------------------------------
  1239 ;; (2) _KeyScan                                              2     2      0     179
  1240 ;;                                              3 COMMON     2     2      0
  1241 ;;                            _KeyRead
  1242 ;; ---------------------------------------------------------------------------------
  1243 ;; (2) _LCD_Display                                          1     1      0    2454
  1244 ;;                                              7 COMMON     1     1      0
  1245 ;;               _SendSegDataToDispBuf
  1246 ;;                       _FlashDisplay
  1247 ;;                   _CK1622_WriteByte
  1248 ;; ---------------------------------------------------------------------------------
  1249 ;; (3) _SendNumberToDispBuf                                  5     3      2    3353
  1250 ;;                                              4 BANK0      5     3      2
  1251 ;;                            ___lwmod
  1252 ;;                            ___lwdiv
  1253 ;;                     _AsciiToDisplay
  1254 ;; ---------------------------------------------------------------------------------
  1255 ;; (3) _SendStringToDispBuf                                 11     9      2    1241
  1256 ;;                                              4 COMMON     6     4      2
  1257 ;;                                              0 BANK0      5     5      0
  1258 ;;                     _AsciiToDisplay
  1259 ;; ---------------------------------------------------------------------------------
  1260 ;; (3) _Clr_LCD                                              2     2      0     377
  1261 ;;                                              7 COMMON     2     2      0
  1262 ;;                   _CK1622_WriteByte
  1263 ;; ---------------------------------------------------------------------------------
  1264 ;; (4) _FlashWrite                                           7     2      5     192
  1265 ;;                                              2 COMMON     7     2      5
  1266 ;;                        _FlashUnlock
  1267 ;; ---------------------------------------------------------------------------------
  1268 ;; (4) _FlashErase                                           4     0      4      31
  1269 ;;                                              2 COMMON     4     0      4
  1270 ;;                        _FlashUnlock
  1271 ;; ---------------------------------------------------------------------------------
  1272 ;; (4) ___lwmod                                              5     1      4     232
  1273 ;;                                              9 COMMON     1     1      0
  1274 ;;                                              0 BANK0      4     0      4
  1275 ;;                            ___lwdiv (ARG)
  1276 ;; ---------------------------------------------------------------------------------
  1277 ;; (3) ___lwdiv                                              7     3      4     241
  1278 ;;                                              2 COMMON     7     3      4
  1279 ;; ---------------------------------------------------------------------------------
  1280 ;; (4) ___bmul                                               3     2      1     108
  1281 ;;                                              2 COMMON     3     2      1
  1282 ;; ---------------------------------------------------------------------------------
  1283 ;; (1) _Uart_init                                            0     0      0       0
  1284 ;; ---------------------------------------------------------------------------------
  1285 ;; (1) _timer2_init                                          0     0      0       0
  1286 ;; ---------------------------------------------------------------------------------
  1287 ;; (1) _timer1_init                                          0     0      0       0
  1288 ;; ---------------------------------------------------------------------------------
  1289 ;; (1) _InitPort                                             0     0      0       0
  1290 ;; ---------------------------------------------------------------------------------
  1291 ;; (1) _InitSfr                                              0     0      0       0
  1292 ;; ---------------------------------------------------------------------------------
  1293 ;; (5) _SPIRead8bit                                          2     2      0     108
  1294 ;;                                              2 COMMON     2     2      0
  1295 ;; ---------------------------------------------------------------------------------
  1296 ;; (5) _SPICmd8bit                                           2     2      0     102
  1297 ;;                                              2 COMMON     2     2      0
  1298 ;; ---------------------------------------------------------------------------------
  1299 ;; (3) _SPIWrite                                             3     1      2     105
  1300 ;;                                              5 COMMON     3     1      2
  1301 ;;                             ___bmul (ARG)
  1302 ;; ---------------------------------------------------------------------------------
  1303 ;; (1) _BeepOff                                              0     0      0       0
  1304 ;; ---------------------------------------------------------------------------------
  1305 ;; (2) _BeepOn                                               8     6      2     316
  1306 ;;                                              2 COMMON     8     6      2
  1307 ;; ---------------------------------------------------------------------------------
  1308 ;; (3) _InitSystemParameter                                  2     2      0       0
  1309 ;;                                              2 COMMON     2     2      0
  1310 ;; ---------------------------------------------------------------------------------
  1311 ;; (1) _RxLED_Deal                                           0     0      0       0
  1312 ;; ---------------------------------------------------------------------------------
  1313 ;; (1) _TxLED_Deal                                           0     0      0       0
  1314 ;; ---------------------------------------------------------------------------------
  1315 ;; (3) _KeyRead                                              1     1      0      46
  1316 ;;                                              2 COMMON     1     1      0
  1317 ;; ---------------------------------------------------------------------------------
  1318 ;; (2) _Delay_ms                                            10     6      4      99
  1319 ;;                                              2 COMMON     8     4      4
  1320 ;;                                              0 BANK0      2     2      0
  1321 ;; ---------------------------------------------------------------------------------
  1322 ;; (2) _LCD_DisplayAll                                       1     1      0      99
  1323 ;;                                              2 COMMON     1     1      0
  1324 ;; ---------------------------------------------------------------------------------
  1325 ;; (3) _FlashDisplay                                         2     2      0    1950
  1326 ;;                                              2 COMMON     2     2      0
  1327 ;; ---------------------------------------------------------------------------------
  1328 ;; (3) _SendSegDataToDispBuf                                 0     0      0       0
  1329 ;; ---------------------------------------------------------------------------------
  1330 ;; (4) _AsciiToDisplay                                       2     2      0     387
  1331 ;;                                              2 COMMON     2     2      0
  1332 ;; ---------------------------------------------------------------------------------
  1333 ;; (2) _CK1622_WriteCmd                                      4     4      0     142
  1334 ;;                                              2 COMMON     4     4      0
  1335 ;; ---------------------------------------------------------------------------------
  1336 ;; (3) _CK1622_WriteByte                                     5     4      1     241
  1337 ;;                                              2 COMMON     5     4      1
  1338 ;; ---------------------------------------------------------------------------------
  1339 ;; (5) _FlashUnlock                                          0     0      0       0
  1340 ;; ---------------------------------------------------------------------------------
  1341 ;; (2) _FlashRead                                            7     2      5     161
  1342 ;;                                              2 COMMON     7     2      5
  1343 ;; ---------------------------------------------------------------------------------
  1344 ;; Estimated maximum stack depth 5
  1345 ;; ---------------------------------------------------------------------------------
  1346 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1347 ;; ---------------------------------------------------------------------------------
  1348 ;; (6) _ISR_timer                                            2     2      0       0
  1349 ;;                                              0 COMMON     2     2      0
  1350 ;;                          i1_BeepOff
  1351 ;; ---------------------------------------------------------------------------------
  1352 ;; (7) i1_BeepOff                                            0     0      0       0
  1353 ;; ---------------------------------------------------------------------------------
  1354 ;; Estimated maximum stack depth 7
  1355 ;; ---------------------------------------------------------------------------------
  1356 ;; Call Graph Graphs:
  1357 ;; _main (ROOT)
  1358 ;;   _InitSfr
  1359 ;;   _PowerUpDelay
  1360 ;;     _Delay_ms
  1361 ;;   _InitPort
  1362 ;;   _timer1_init
  1363 ;;   _timer2_init
  1364 ;;   _LCD_Init
  1365 ;;     _CK1622_WriteCmd
  1366 ;;     _Clr_LCD
  1367 ;;       _CK1622_WriteByte
  1368 ;;   _BeepOff
  1369 ;;   _ModuleSelectModeEntryCheck
  1370 ;;     _FlashRead
  1371 ;;     _InitSystemParameter
  1372 ;;   _Uart_init
  1373 ;;   _PowerOnMusic
  1374 ;;     _BeepOn
  1375 ;;     _LCD_DisplayAll
  1376 ;;     _LCD_Display
  1377 ;;       _SendSegDataToDispBuf
  1378 ;;       _FlashDisplay
  1379 ;;       _CK1622_WriteByte
  1380 ;;     _Clr_LCD
  1381 ;;       _CK1622_WriteByte
  1382 ;;   _MenuConfig
  1383 ;;     _KeyScan
  1384 ;;       _KeyRead
  1385 ;;     _RFParameterSelect
  1386 ;;       _BeepOn
  1387 ;;       _SaveRFParameterToFlash
  1388 ;;         _FlashErase
  1389 ;;           _FlashUnlock
  1390 ;;         _FlashWrite
  1391 ;;           _FlashUnlock
  1392 ;;     _ModemSelect
  1393 ;;       _BeepOn
  1394 ;;       _InitSystemParameter
  1395 ;;       _SaveRFParameterToFlash
  1396 ;;         _FlashErase
  1397 ;;           _FlashUnlock
  1398 ;;         _FlashWrite
  1399 ;;           _FlashUnlock
  1400 ;;     _WorkModeSelect
  1401 ;;       _Clr_LCD
  1402 ;;         _CK1622_WriteByte
  1403 ;;       _BeepOn
  1404 ;;       _SaveRFParameterToFlash
  1405 ;;         _FlashErase
  1406 ;;           _FlashUnlock
  1407 ;;         _FlashWrite
  1408 ;;           _FlashUnlock
  1409 ;;     _DisplayRFParameter
  1410 ;;       _SendStringToDispBuf
  1411 ;;         _AsciiToDisplay
  1412 ;;       _BeepOn
  1413 ;;       _SendNumberToDispBuf
  1414 ;;         ___lwmod
  1415 ;;           ___lwdiv (ARG)
  1416 ;;         ___lwdiv
  1417 ;;         _AsciiToDisplay
  1418 ;;       ___lwdiv
  1419 ;;     _LCD_Display
  1420 ;;       _SendSegDataToDispBuf
  1421 ;;       _FlashDisplay
  1422 ;;       _CK1622_WriteByte
  1423 ;;   _RFM98_Running
  1424 ;;     _RFM98_LoRaEntryTx
  1425 ;;       _RFM98_Config
  1426 ;;         _RFM98_Sleep
  1427 ;;           _SPIWrite
  1428 ;;             ___bmul (ARG)
  1429 ;;         _RFM98_EntryLoRa
  1430 ;;           _SPIWrite
  1431 ;;             ___bmul (ARG)
  1432 ;;         ___bmul
  1433 ;;         _SPIWrite
  1434 ;;           ___bmul (ARG)
  1435 ;;         _SPIRead
  1436 ;;           _SPICmd8bit
  1437 ;;           _SPIRead8bit
  1438 ;;         _RFM98_Standby
  1439 ;;           _SPIWrite
  1440 ;;             ___bmul (ARG)
  1441 ;;       _SPIWrite
  1442 ;;         ___bmul (ARG)
  1443 ;;       _RFM98_LoRaClearIrq
  1444 ;;         _SPIWrite
  1445 ;;           ___bmul (ARG)
  1446 ;;       _SPIRead
  1447 ;;         _SPICmd8bit
  1448 ;;         _SPIRead8bit
  1449 ;;     _RFM98_LoRaTxPacket
  1450 ;;       _RFM98_LoRaTxWaitStable
  1451 ;;         _SPIRead
  1452 ;;           _SPICmd8bit
  1453 ;;           _SPIRead8bit
  1454 ;;       _BurstWrite
  1455 ;;         _SPICmd8bit
  1456 ;;       _SPIWrite
  1457 ;;         ___bmul (ARG)
  1458 ;;       _SPIRead
  1459 ;;         _SPICmd8bit
  1460 ;;         _SPIRead8bit
  1461 ;;       _RFM98_LoRaClearIrq
  1462 ;;         _SPIWrite
  1463 ;;           ___bmul (ARG)
  1464 ;;       _RFM98_Standby
  1465 ;;         _SPIWrite
  1466 ;;           ___bmul (ARG)
  1467 ;;     _RFM98_LoRaEntryRx
  1468 ;;       _RFM98_Config
  1469 ;;         _RFM98_Sleep
  1470 ;;           _SPIWrite
  1471 ;;             ___bmul (ARG)
  1472 ;;         _RFM98_EntryLoRa
  1473 ;;           _SPIWrite
  1474 ;;             ___bmul (ARG)
  1475 ;;         ___bmul
  1476 ;;         _SPIWrite
  1477 ;;           ___bmul (ARG)
  1478 ;;         _SPIRead
  1479 ;;           _SPICmd8bit
  1480 ;;           _SPIRead8bit
  1481 ;;         _RFM98_Standby
  1482 ;;           _SPIWrite
  1483 ;;             ___bmul (ARG)
  1484 ;;       _SPIWrite
  1485 ;;         ___bmul (ARG)
  1486 ;;       _RFM98_LoRaClearIrq
  1487 ;;         _SPIWrite
  1488 ;;           ___bmul (ARG)
  1489 ;;       _SPIRead
  1490 ;;         _SPICmd8bit
  1491 ;;         _SPIRead8bit
  1492 ;;     _RFM98_LoRaRxPacket
  1493 ;;       _RFM98_LoRaRxWaitStable
  1494 ;;         _SPIRead
  1495 ;;           _SPICmd8bit
  1496 ;;           _SPIRead8bit
  1497 ;;       _SPIRead
  1498 ;;         _SPICmd8bit
  1499 ;;         _SPIRead8bit
  1500 ;;       _SPIWrite
  1501 ;;         ___bmul (ARG)
  1502 ;;       _SPIBurstRead
  1503 ;;         _SPICmd8bit
  1504 ;;         _SPIRead8bit
  1505 ;;       _RFM98_LoRaClearIrq
  1506 ;;         _SPIWrite
  1507 ;;           ___bmul (ARG)
  1508 ;;     _BeepOn
  1509 ;;     _RFM98_LoRaReadRSSI
  1510 ;;       _SPIRead
  1511 ;;         _SPICmd8bit
  1512 ;;         _SPIRead8bit
  1513 ;;     _RFM98_FskEntryTx
  1514 ;;       _RFM98_Config
  1515 ;;         _RFM98_Sleep
  1516 ;;           _SPIWrite
  1517 ;;             ___bmul (ARG)
  1518 ;;         _RFM98_EntryLoRa
  1519 ;;           _SPIWrite
  1520 ;;             ___bmul (ARG)
  1521 ;;         ___bmul
  1522 ;;         _SPIWrite
  1523 ;;           ___bmul (ARG)
  1524 ;;         _SPIRead
  1525 ;;           _SPICmd8bit
  1526 ;;           _SPIRead8bit
  1527 ;;         _RFM98_Standby
  1528 ;;           _SPIWrite
  1529 ;;             ___bmul (ARG)
  1530 ;;       _SPIWrite
  1531 ;;         ___bmul (ARG)
  1532 ;;     _RFM98_FskTxPacket
  1533 ;;       _RFM98_FSKTxWaitStable
  1534 ;;         _SPIRead
  1535 ;;           _SPICmd8bit
  1536 ;;           _SPIRead8bit
  1537 ;;       _BurstWrite
  1538 ;;         _SPICmd8bit
  1539 ;;       _RFM98_Standby
  1540 ;;         _SPIWrite
  1541 ;;           ___bmul (ARG)
  1542 ;;       _SPIWrite
  1543 ;;         ___bmul (ARG)
  1544 ;;     _RFM98_FskEntryRx
  1545 ;;       _RFM98_Config
  1546 ;;         _RFM98_Sleep
  1547 ;;           _SPIWrite
  1548 ;;             ___bmul (ARG)
  1549 ;;         _RFM98_EntryLoRa
  1550 ;;           _SPIWrite
  1551 ;;             ___bmul (ARG)
  1552 ;;         ___bmul
  1553 ;;         _SPIWrite
  1554 ;;           ___bmul (ARG)
  1555 ;;         _SPIRead
  1556 ;;           _SPICmd8bit
  1557 ;;           _SPIRead8bit
  1558 ;;         _RFM98_Standby
  1559 ;;           _SPIWrite
  1560 ;;             ___bmul (ARG)
  1561 ;;       _SPIWrite
  1562 ;;         ___bmul (ARG)
  1563 ;;     _RFM98_FskRxPacket
  1564 ;;       _RFM98_FSKRxWaitStable
  1565 ;;         _SPIRead
  1566 ;;           _SPICmd8bit
  1567 ;;           _SPIRead8bit
  1568 ;;       _SPIBurstRead
  1569 ;;         _SPICmd8bit
  1570 ;;         _SPIRead8bit
  1571 ;;       _RFM98_FskClearFIFO
  1572 ;;         _SPIWrite
  1573 ;;           ___bmul (ARG)
  1574 ;;     _RFM98_ReadRSSI
  1575 ;;       _SPIRead
  1576 ;;         _SPICmd8bit
  1577 ;;         _SPIRead8bit
  1578 ;;     _RFM98_Standby
  1579 ;;       _SPIWrite
  1580 ;;         ___bmul (ARG)
  1581 ;;     _RFM98_Sleep
  1582 ;;       _SPIWrite
  1583 ;;         ___bmul (ARG)
  1584 ;;     _RFM98_EntryTestTx
  1585 ;;       _RFM98_TestConfig
  1586 ;;         _RFM98_Sleep
  1587 ;;           _SPIWrite
  1588 ;;             ___bmul (ARG)
  1589 ;;         ___bmul
  1590 ;;         _SPIWrite
  1591 ;;           ___bmul (ARG)
  1592 ;;         _RFM98_Standby
  1593 ;;           _SPIWrite
  1594 ;;             ___bmul (ARG)
  1595 ;;       _SPIWrite
  1596 ;;         ___bmul (ARG)
  1597 ;;     _RFM98_TestTx
  1598 ;;       _RFM98_FSKTxWaitStable
  1599 ;;         _SPIRead
  1600 ;;           _SPICmd8bit
  1601 ;;           _SPIRead8bit
  1602 ;;     _RFM98_EntryTestRx
  1603 ;;       _RFM98_TestConfig
  1604 ;;         _RFM98_Sleep
  1605 ;;           _SPIWrite
  1606 ;;             ___bmul (ARG)
  1607 ;;         ___bmul
  1608 ;;         _SPIWrite
  1609 ;;           ___bmul (ARG)
  1610 ;;         _RFM98_Standby
  1611 ;;           _SPIWrite
  1612 ;;             ___bmul (ARG)
  1613 ;;       _SPIWrite
  1614 ;;         ___bmul (ARG)
  1615 ;;     _RFM98_TestRx
  1616 ;;       _RFM98_FSKRxWaitStable
  1617 ;;         _SPIRead
  1618 ;;           _SPICmd8bit
  1619 ;;           _SPIRead8bit
  1620 ;;   _TxLED_Deal
  1621 ;;   _RxLED_Deal
  1622 ;;
  1623 ;; _ISR_timer (ROOT)
  1624 ;;   i1_BeepOff
  1625 ;;
  1626 ;; Address spaces:
  1627 ;;Name               Size   Autos  Total    Cost      Usage
  1628 ;;BIGRAM             3F0      0       0       0        0.0%
  1629 ;;NULL                 0      0       0       0        0.0%
  1630 ;;CODE                 0      0       0       0        0.0%
  1631 ;;BITCOMMON            E      0       0       1        0.0%
  1632 ;;BITSFR0              0      0       0       1        0.0%
  1633 ;;SFR0                 0      0       0       1        0.0%
  1634 ;;COMMON               E      A       C       2       85.7%
  1635 ;;BITSFR1              0      0       0       2        0.0%
  1636 ;;SFR1                 0      0       0       2        0.0%
  1637 ;;BITSFR2              0      0       0       3        0.0%
  1638 ;;SFR2                 0      0       0       3        0.0%
  1639 ;;STACK                0      0       9       3        0.0%
  1640 ;;BITBANK0            50      0       0       4        0.0%
  1641 ;;BITSFR3              0      0       0       4        0.0%
  1642 ;;SFR3                 0      0       0       4        0.0%
  1643 ;;BANK0               50     10      50       5      100.0%
  1644 ;;BITSFR4              0      0       0       5        0.0%
  1645 ;;SFR4                 0      0       0       5        0.0%
  1646 ;;BITBANK1            50      0       0       6        0.0%
  1647 ;;BITSFR5              0      0       0       6        0.0%
  1648 ;;SFR5                 0      0       0       6        0.0%
  1649 ;;BANK1               50      2      46       7       87.5%
  1650 ;;BITSFR6              0      0       0       7        0.0%
  1651 ;;SFR6                 0      0       0       7        0.0%
  1652 ;;BITBANK2            50      0       0       8        0.0%
  1653 ;;BITSFR7              0      0       0       8        0.0%
  1654 ;;SFR7                 0      0       0       8        0.0%
  1655 ;;BANK2               50      0      20       9       40.0%
  1656 ;;BITSFR8              0      0       0       9        0.0%
  1657 ;;SFR8                 0      0       0       9        0.0%
  1658 ;;BITBANK3            50      0       0      10        0.0%
  1659 ;;BITSFR9              0      0       0      10        0.0%
  1660 ;;SFR9                 0      0       0      10        0.0%
  1661 ;;BANK3               50      0      3C      11       75.0%
  1662 ;;BITSFR10             0      0       0      11        0.0%
  1663 ;;SFR10                0      0       0      11        0.0%
  1664 ;;BITBANK4            50      0       0      12        0.0%
  1665 ;;BITSFR11             0      0       0      12        0.0%
  1666 ;;SFR11                0      0       0      12        0.0%
  1667 ;;BANK4               50      0       0      13        0.0%
  1668 ;;BITSFR12             0      0       0      13        0.0%
  1669 ;;SFR12                0      0       0      13        0.0%
  1670 ;;BITBANK5            50      0       0      14        0.0%
  1671 ;;BITSFR13             0      0       0      14        0.0%
  1672 ;;SFR13                0      0       0      14        0.0%
  1673 ;;BANK5               50      0       0      15        0.0%
  1674 ;;BITSFR14             0      0       0      15        0.0%
  1675 ;;SFR14                0      0       0      15        0.0%
  1676 ;;BITBANK6            50      0       0      16        0.0%
  1677 ;;BITSFR15             0      0       0      16        0.0%
  1678 ;;SFR15                0      0       0      16        0.0%
  1679 ;;BANK6               50      0       0      17        0.0%
  1680 ;;BITSFR16             0      0       0      17        0.0%
  1681 ;;SFR16                0      0       0      17        0.0%
  1682 ;;BITBANK7            50      0       0      18        0.0%
  1683 ;;BITSFR17             0      0       0      18        0.0%
  1684 ;;SFR17                0      0       0      18        0.0%
  1685 ;;BANK7               50      0       0      19        0.0%
  1686 ;;BITSFR18             0      0       0      19        0.0%
  1687 ;;SFR18                0      0       0      19        0.0%
  1688 ;;BITSFR19             0      0       0      20        0.0%
  1689 ;;SFR19                0      0       0      20        0.0%
  1690 ;;ABS                  0      0      FE      20        0.0%
  1691 ;;BITBANK8            50      0       0      21        0.0%
  1692 ;;BITSFR20             0      0       0      21        0.0%
  1693 ;;SFR20                0      0       0      21        0.0%
  1694 ;;BANK8               50      0       0      22        0.0%
  1695 ;;BITSFR21             0      0       0      22        0.0%
  1696 ;;SFR21                0      0       0      22        0.0%
  1697 ;;BITBANK9            50      0       0      23        0.0%
  1698 ;;BITSFR22             0      0       0      23        0.0%
  1699 ;;SFR22                0      0       0      23        0.0%
  1700 ;;BANK9               50      0       0      24        0.0%
  1701 ;;BITSFR23             0      0       0      24        0.0%
  1702 ;;SFR23                0      0       0      24        0.0%
  1703 ;;BITBANK10           50      0       0      25        0.0%
  1704 ;;BITSFR24             0      0       0      25        0.0%
  1705 ;;SFR24                0      0       0      25        0.0%
  1706 ;;BANK10              50      0       0      26        0.0%
  1707 ;;BITSFR25             0      0       0      26        0.0%
  1708 ;;SFR25                0      0       0      26        0.0%
  1709 ;;BITBANK11           50      0       0      27        0.0%
  1710 ;;BITSFR26             0      0       0      27        0.0%
  1711 ;;SFR26                0      0       0      27        0.0%
  1712 ;;BANK11              50      0       0      28        0.0%
  1713 ;;BITSFR27             0      0       0      28        0.0%
  1714 ;;SFR27                0      0       0      28        0.0%
  1715 ;;BITBANK12           30      0       0      29        0.0%
  1716 ;;BITSFR28             0      0       0      29        0.0%
  1717 ;;SFR28                0      0       0      29        0.0%
  1718 ;;BANK12              30      0       0      30        0.0%
  1719 ;;BITSFR29             0      0       0      30        0.0%
  1720 ;;SFR29                0      0       0      30        0.0%
  1721 ;;BITSFR30             0      0       0      31        0.0%
  1722 ;;SFR30                0      0       0      31        0.0%
  1723 ;;DATA                 0      0     107      31        0.0%
  1724 ;;BITSFR31             0      0       0      32        0.0%
  1725 ;;SFR31                0      0       0      32        0.0%
  1726                           
  1727                           
  1728 ;; *************** function _main *****************
  1729 ;; Defined at:
  1730 ;;		line 28 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\main.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;  RxFlag          1    1[BANK1 ] unsigned char 
  1735 ;;  TxFlag          1    0[BANK1 ] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;		None               void
  1738 ;; Registers used:
  1739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 17F/0
  1742 ;;		On exit  : 1F/0
  1743 ;;		Unchanged: FFE00/0
  1744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1746 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1748 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;Total ram usage:        2 bytes
  1750 ;; Hardware stack levels required when called:    7
  1751 ;; This function calls:
  1752 ;;		_InitSfr
  1753 ;;		_PowerUpDelay
  1754 ;;		_InitPort
  1755 ;;		_timer1_init
  1756 ;;		_timer2_init
  1757 ;;		_LCD_Init
  1758 ;;		_BeepOff
  1759 ;;		_ModuleSelectModeEntryCheck
  1760 ;;		_Uart_init
  1761 ;;		_PowerOnMusic
  1762 ;;		_MenuConfig
  1763 ;;		_RFM98_Running
  1764 ;;		_TxLED_Deal
  1765 ;;		_RxLED_Deal
  1766 ;; This function is called by:
  1767 ;;		Startup code after reset
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770  00BD                     _main:	
  1771                           
  1772                           ;main.c: 29: u8 TxFlag=0;
  1773                           
  1774                           ; Regs used in _main: [wreg-status,0+pclath+cstack]
  1775  00BD  0021               	movlb	1	; select bank1
  1776  00BE  01E4               	clrf	main@TxFlag^(0+128)
  1777                           
  1778                           ;main.c: 30: u8 RxFlag=0;
  1779  00BF  01E5               	clrf	main@RxFlag^(0+128)
  1780                           
  1781                           ;main.c: 32: InitSfr();
  1782  00C0  2189  3180         	fcall	_InitSfr
  1783                           
  1784                           ;main.c: 33: PowerUpDelay();
  1785  00C2  2252  3180         	fcall	_PowerUpDelay
  1786                           
  1787                           ;main.c: 34: InitPort();
  1788  00C4  21A2  3180         	fcall	_InitPort
  1789                           
  1790                           ;main.c: 35: timer1_init();
  1791  00C6  21D6  3180         	fcall	_timer1_init
  1792                           
  1793                           ;main.c: 36: timer2_init();
  1794  00C8  21E1  3180         	fcall	_timer2_init
  1795                           
  1796                           ;main.c: 37: LCD_Init();
  1797  00CA  2258  3180         	fcall	_LCD_Init
  1798                           
  1799                           ;main.c: 38: BeepOff();
  1800  00CC  2181  3180         	fcall	_BeepOff
  1801                           
  1802                           ;main.c: 39: ModuleSelectModeEntryCheck();
  1803  00CE  21FC  3180         	fcall	_ModuleSelectModeEntryCheck
  1804                           
  1805                           ;main.c: 40: Uart_init();
  1806  00D0  21EB  3180         	fcall	_Uart_init
  1807                           
  1808                           ;main.c: 41: PowerOnMusic();
  1809  00D2  2296  3180         	fcall	_PowerOnMusic
  1810  00D4                     l17027:	
  1811                           
  1812                           ;main.c: 44: {
  1813                           ;main.c: 45: MenuConfig();
  1814  00D4  26D9  3180         	fcall	_MenuConfig
  1815                           
  1816                           ;main.c: 46: if(gb_ModuleWorkEnableFlag)
  1817  00D6  0020               	movlb	0	; select bank0
  1818  00D7  0853               	movf	_gb_ModuleWorkEnableFlag,w
  1819  00D8  1903               	btfsc	3,2
  1820  00D9  2918               	goto	l17063
  1821                           
  1822                           ;main.c: 47: {
  1823                           ;main.c: 48: RFM98_Running(gb_SystemMode,gb_ModuleWorkMode,gb_ParameterChangeFlag,&TxFla
      +                          g,&RxFlag,&gb_RF_RSSI);
  1824  00DA  0854               	movf	_gb_ModuleWorkMode,w
  1825  00DB  00E6               	movwf	?_RFM98_Running
  1826  00DC  0855               	movf	_gb_ParameterChangeFlag,w
  1827  00DD  00E7               	movwf	?_RFM98_Running+1
  1828  00DE  30E4               	movlw	main@TxFlag& (0+255)
  1829  00DF  00E8               	movwf	?_RFM98_Running+2
  1830  00E0  30E5               	movlw	main@RxFlag& (0+255)
  1831  00E1  00E9               	movwf	?_RFM98_Running+3
  1832  00E2  305F               	movlw	_gb_RF_RSSI& (0+255)
  1833  00E3  00EA               	movwf	?_RFM98_Running+4
  1834  00E4  087B               	movf	_gb_SystemMode,w
  1835  00E5  3194  2474  3180   	fcall	_RFM98_Running
  1836                           
  1837                           ;main.c: 50: if(TxFlag==1)
  1838  00E8  0021               	movlb	1	; select bank1
  1839  00E9  0B64               	decfsz	main@TxFlag^(0+128),w
  1840  00EA  28F9               	goto	l17043
  1841                           
  1842                           ;main.c: 51: {
  1843                           ;main.c: 52: TxFlag=0;
  1844  00EB  01E4               	clrf	main@TxFlag^(0+128)
  1845                           
  1846                           ;main.c: 53: gw_SendDataCount++;
  1847  00EC  0020               	movlb	0	; select bank0
  1848  00ED  0ABE               	incf	_gw_SendDataCount,f
  1849  00EE  1903               	skipnz
  1850  00EF  0ABF               	incf	_gw_SendDataCount+1,f
  1851                           
  1852                           ;main.c: 54: if(gw_SendDataCount>9999){gw_SendDataCount=0;}
  1853  00F0  3027               	movlw	39
  1854  00F1  023F               	subwf	_gw_SendDataCount+1,w
  1855  00F2  3010               	movlw	16
  1856  00F3  1903               	skipnz
  1857  00F4  023E               	subwf	_gw_SendDataCount,w
  1858  00F5  1C03               	skipc
  1859  00F6  28F9               	goto	l17043
  1860  00F7  01BE               	clrf	_gw_SendDataCount
  1861  00F8  01BF               	clrf	_gw_SendDataCount+1
  1862  00F9                     l17043:	
  1863                           
  1864                           ;main.c: 55: }
  1865                           ;main.c: 56: if(RxFlag==1)
  1866  00F9  0021               	movlb	1	; select bank1
  1867  00FA  0B65               	decfsz	main@RxFlag^(0+128),w
  1868  00FB  290A               	goto	l17053
  1869                           
  1870                           ;main.c: 57: {
  1871                           ;main.c: 58: RxFlag=0;
  1872  00FC  01E5               	clrf	main@RxFlag^(0+128)
  1873                           
  1874                           ;main.c: 59: gw_ReceiveDataCount++;
  1875  00FD  0020               	movlb	0	; select bank0
  1876  00FE  0ABC               	incf	_gw_ReceiveDataCount,f
  1877  00FF  1903               	skipnz
  1878  0100  0ABD               	incf	_gw_ReceiveDataCount+1,f
  1879                           
  1880                           ;main.c: 60: if(gw_ReceiveDataCount>9999){gw_ReceiveDataCount=0;}
  1881  0101  3027               	movlw	39
  1882  0102  023D               	subwf	_gw_ReceiveDataCount+1,w
  1883  0103  3010               	movlw	16
  1884  0104  1903               	skipnz
  1885  0105  023C               	subwf	_gw_ReceiveDataCount,w
  1886  0106  1C03               	skipc
  1887  0107  290A               	goto	l17053
  1888  0108  01BC               	clrf	_gw_ReceiveDataCount
  1889  0109  01BD               	clrf	_gw_ReceiveDataCount+1
  1890  010A                     l17053:	
  1891                           
  1892                           ;main.c: 61: }
  1893                           ;main.c: 64: if(gb_ParameterChangeFlag==1){gb_ParameterChangeFlag=0;}
  1894  010A  0020               	movlb	0	; select bank0
  1895  010B  0B55               	decfsz	_gb_ParameterChangeFlag,w
  1896  010C  290E               	goto	l17057
  1897  010D  01D5               	clrf	_gb_ParameterChangeFlag
  1898  010E                     l17057:	
  1899                           
  1900                           ;main.c: 65: if(gb_ModuleWorkMode!=0 && gb_ModuleWorkMode!=1 && gb_ModuleWorkMode!=2)
  1901  010E  0854               	movf	_gb_ModuleWorkMode,w
  1902  010F  1903               	btfsc	3,2
  1903  0110  291A               	goto	l17067
  1904  0111  0354               	decf	_gb_ModuleWorkMode,w
  1905  0112  1903               	skipnz
  1906  0113  291A               	goto	l17067
  1907  0114  0854               	movf	_gb_ModuleWorkMode,w
  1908  0115  3A02               	xorlw	2
  1909  0116  1903               	skipnz
  1910  0117  291A               	goto	l17067
  1911  0118                     l17063:	
  1912                           
  1913                           ;main.c: 66: {
  1914                           ;main.c: 67: gb_StatusTx=0;
  1915  0118  01D9               	clrf	_gb_StatusTx
  1916                           
  1917                           ;main.c: 68: gb_StatusRx=0;
  1918  0119  01D8               	clrf	_gb_StatusRx
  1919  011A                     l17067:	
  1920                           
  1921                           ;main.c: 75: }
  1922                           ;main.c: 76: if(gb_ErrorFlag!=1)
  1923  011A  034C               	decf	_gb_ErrorFlag,w
  1924  011B  1903               	skipnz
  1925  011C  28D4               	goto	l17027
  1926                           
  1927                           ;main.c: 77: {
  1928                           ;main.c: 78: TxLED_Deal();
  1929  011D  2122  3180         	fcall	_TxLED_Deal
  1930                           
  1931                           ;main.c: 79: RxLED_Deal();
  1932  011F  2178  3180         	fcall	_RxLED_Deal
  1933  0121  28D4               	goto	l17027
  1934  0122                     __end_of_main:	
  1935  0122                     __ptext2211:	
  1936 ;; =============== function _RxLED_Deal ends ============
  1937                           
  1938                           
  1939 ;; *************** function _TxLED_Deal *****************
  1940 ;; Defined at:
  1941 ;;		line 155 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;		None
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;		None
  1946 ;; Return value:  Size  Location     Type
  1947 ;;		None               void
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1950 ;; Tracked objects:
  1951 ;;		On entry : 1F/0
  1952 ;;		On exit  : 1F/0
  1953 ;;		Unchanged: FFE00/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1959 ;;Total ram usage:        0 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    2
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_main
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968  0122                     _TxLED_Deal:	
  1969                           
  1970                           ;DK_PIC16_App.c: 156: if(gb_StatusTx==1)
  1971                           
  1972                           ; Regs used in _TxLED_Deal: [wreg-fsr0h+status,2+status,0]
  1973  0122  0B59               	decfsz	_gb_StatusTx,w
  1974  0123  296C               	goto	l14835
  1975                           
  1976                           ;DK_PIC16_App.c: 157: {
  1977                           ;DK_PIC16_App.c: 158: if(gw_TxLedTimer==0)
  1978  0124  0841               	movf	_gw_TxLedTimer+1,w
  1979  0125  0440               	iorwf	_gw_TxLedTimer,w
  1980  0126  1D03               	skipz
  1981  0127  0008               	return
  1982                           
  1983                           ;DK_PIC16_App.c: 159: {
  1984                           ;DK_PIC16_App.c: 160: gw_TxLedTimer=300;
  1985  0128  302C               	movlw	44
  1986  0129  00C0               	movwf	_gw_TxLedTimer
  1987  012A  3001               	movlw	1
  1988  012B  00C1               	movwf	_gw_TxLedTimer+1
  1989  012C  3007               	movlw	7
  1990                           
  1991                           ;DK_PIC16_App.c: 161: gb_TxLedCount++;
  1992  012D  0ADC               	incf	_gb_TxLedCount,f
  1993                           
  1994                           ;DK_PIC16_App.c: 162: if(gb_TxLedCount>6)
  1995  012E  025C               	subwf	_gb_TxLedCount,w
  1996  012F  1C03               	skipc
  1997  0130  2957               	goto	l14833
  1998                           
  1999                           ;DK_PIC16_App.c: 163: {
  2000                           ;DK_PIC16_App.c: 164: gb_TxLedCount=0;
  2001  0131  01DC               	clrf	_gb_TxLedCount
  2002  0132  2957               	goto	l14833
  2003  0133                     l3821:	
  2004                           ;DK_PIC16_App.c: 168: {
  2005                           ;DK_PIC16_App.c: 169: case 1:
  2006                           
  2007                           
  2008                           ;DK_PIC16_App.c: 170: RD4 = 1; break;
  2009  0133  160F               	bsf	15,4
  2010  0134  0008               	return
  2011  0135                     l3823:	
  2012                           ;DK_PIC16_App.c: 171: case 2:
  2013                           
  2014                           
  2015                           ;DK_PIC16_App.c: 172: RD3 = RD5 = 1; break;
  2016  0135  168F               	bsf	15,5
  2017  0136  1E8F               	btfss	15,5
  2018  0137  293B               	goto	u8720
  2019  0138  0020               	movlb	0	; select bank0
  2020  0139  158F               	bsf	15,3
  2021  013A  0008               	return
  2022  013B                     u8720:	
  2023  013B  0020               	movlb	0	; select bank0
  2024  013C  118F               	bcf	15,3
  2025  013D  0008               	return
  2026  013E                     l3824:	
  2027                           ;DK_PIC16_App.c: 173: case 3:
  2028                           
  2029                           
  2030                           ;DK_PIC16_App.c: 174: RD1 = RD2 = RD6 = 1; break;
  2031  013E  170F               	bsf	15,6
  2032  013F  1F0F               	btfss	15,6
  2033  0140  2944               	goto	u8740
  2034  0141  0020               	movlb	0	; select bank0
  2035  0142  150F               	bsf	15,2
  2036  0143  2946               	goto	u8754
  2037  0144                     u8740:	
  2038  0144  0020               	movlb	0	; select bank0
  2039  0145  110F               	bcf	15,2
  2040  0146                     u8754:	
  2041  0146  1D0F               	btfss	15,2
  2042  0147  294B               	goto	u8750
  2043  0148  0020               	movlb	0	; select bank0
  2044  0149  148F               	bsf	15,1
  2045  014A  0008               	return
  2046  014B                     u8750:	
  2047  014B  0020               	movlb	0	; select bank0
  2048  014C  108F               	bcf	15,1
  2049  014D  0008               	return
  2050  014E                     l3825:	
  2051                           ;DK_PIC16_App.c: 175: case 4:
  2052                           
  2053                           
  2054                           ;DK_PIC16_App.c: 176: RD4 = 0; break;
  2055  014E  120F               	bcf	15,4
  2056  014F  0008               	return
  2057  0150                     l3826:	
  2058                           ;DK_PIC16_App.c: 177: case 5:
  2059                           
  2060                           
  2061                           ;DK_PIC16_App.c: 178: RD3 = RD5 = 0; break;
  2062  0150  128F               	bcf	15,5
  2063  0151  118F               	bcf	15,3
  2064  0152  0008               	return
  2065  0153                     l3827:	
  2066                           ;DK_PIC16_App.c: 179: case 6:
  2067                           
  2068                           
  2069                           ;DK_PIC16_App.c: 180: RD1 = RD2 = RD6 = 0; break;
  2070  0153  130F               	bcf	15,6
  2071  0154  110F               	bcf	15,2
  2072  0155  108F               	bcf	15,1
  2073  0156  0008               	return
  2074  0157                     l14833:	
  2075  0157  085C               	movf	_gb_TxLedCount,w
  2076                           
  2077                           ; Switch size 1, requested type "space"
  2078                           ; Number of cases is 6, Range of values is 1 to 6
  2079                           ; switch strategies available:
  2080                           ; Name         Instructions Cycles
  2081                           ; simple_byte           19    10 (average)
  2082                           ; direct_byte           21     9 (fixed)
  2083                           ; jumptable            263     9 (fixed)
  2084                           ;	Chosen strategy is simple_byte
  2085  0158  3A01               	xorlw	1	; case 1
  2086  0159  1903               	skipnz
  2087  015A  2933               	goto	l3821
  2088  015B  3A03               	xorlw	3	; case 2
  2089  015C  1903               	skipnz
  2090  015D  2935               	goto	l3823
  2091  015E  3A01               	xorlw	1	; case 3
  2092  015F  1903               	skipnz
  2093  0160  293E               	goto	l3824
  2094  0161  3A07               	xorlw	7	; case 4
  2095  0162  1903               	skipnz
  2096  0163  294E               	goto	l3825
  2097  0164  3A01               	xorlw	1	; case 5
  2098  0165  1903               	skipnz
  2099  0166  2950               	goto	l3826
  2100  0167  3A03               	xorlw	3	; case 6
  2101  0168  1903               	skipnz
  2102  0169  2953               	goto	l3827
  2103  016A  296B               	goto	l3818
  2104  016B                     l3818:	
  2105                           
  2106                           ;DK_PIC16_App.c: 184: }
  2107                           ;DK_PIC16_App.c: 185: }
  2108  016B  0008               	return
  2109  016C                     l14835:	
  2110                           
  2111                           ;DK_PIC16_App.c: 186: else
  2112                           ;DK_PIC16_App.c: 187: {
  2113                           ;DK_PIC16_App.c: 188: if(gb_SystemMode!=0x03)
  2114  016C  087B               	movf	_gb_SystemMode,w
  2115  016D  3A03               	xorlw	3
  2116  016E  1903               	skipnz
  2117  016F  0008               	return
  2118                           
  2119                           ;DK_PIC16_App.c: 189: {
  2120                           ;DK_PIC16_App.c: 190: RD4=RD3=RD5=RD1=RD2=RD6=0;
  2121  0170  130F               	bcf	15,6
  2122  0171  110F               	bcf	15,2
  2123  0172  108F               	bcf	15,1
  2124  0173  128F               	bcf	15,5
  2125  0174  118F               	bcf	15,3
  2126  0175  120F               	bcf	15,4
  2127                           
  2128                           ;DK_PIC16_App.c: 191: gb_TxLedCount=0;
  2129  0176  01DC               	clrf	_gb_TxLedCount
  2130  0177  0008               	return
  2131  0178                     __end_of_TxLED_Deal:	
  2132  0178                     __ptext2210:	
  2133 ;; =============== function _InitSystemParameter ends ============
  2134                           
  2135                           
  2136 ;; *************** function _RxLED_Deal *****************
  2137 ;; Defined at:
  2138 ;;		line 203 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;		None               void
  2145 ;; Registers used:
  2146 ;;		wreg
  2147 ;; Tracked objects:
  2148 ;;		On entry : 1F/0
  2149 ;;		On exit  : 1F/0
  2150 ;;		Unchanged: FFFE0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    2
  2159 ;; This function calls:
  2160 ;;		Nothing
  2161 ;; This function is called by:
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165  0178                     _RxLED_Deal:	
  2166                           
  2167                           ;DK_PIC16_App.c: 204: if(gb_StatusRx==1)
  2168                           
  2169                           ; Regs used in _RxLED_Deal: [wreg]
  2170  0178  0B58               	decfsz	_gb_StatusRx,w
  2171  0179  297C               	goto	l14845
  2172                           
  2173                           ;DK_PIC16_App.c: 205: {
  2174                           ;DK_PIC16_App.c: 206: RD7=1;
  2175  017A  178F               	bsf	15,7
  2176                           
  2177                           ;DK_PIC16_App.c: 207: }
  2178  017B  0008               	return
  2179  017C                     l14845:	
  2180                           
  2181                           ;DK_PIC16_App.c: 208: else if(gb_SystemMode!=0x03)
  2182  017C  087B               	movf	_gb_SystemMode,w
  2183  017D  3A03               	xorlw	3
  2184  017E  1D03               	btfss	3,2
  2185                           
  2186                           ;DK_PIC16_App.c: 209: {
  2187                           ;DK_PIC16_App.c: 210: RD7=0;
  2188  017F  138F               	bcf	15,7
  2189  0180  0008               	return
  2190  0181                     __end_of_RxLED_Deal:	
  2191  0181                     __ptext2207:	
  2192 ;; =============== function _SPIWrite ends ============
  2193                           
  2194                           
  2195 ;; *************** function _BeepOff *****************
  2196 ;; Defined at:
  2197 ;;		line 964 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;		None
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		status,2
  2206 ;; Tracked objects:
  2207 ;;		On entry : 17F/1
  2208 ;;		On exit  : 17F/0
  2209 ;;		Unchanged: FFE80/0
  2210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2215 ;;Total ram usage:        0 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    2
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_main
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224  0181                     _BeepOff:	
  2225                           
  2226                           ;DK_PIC16_App.c: 965: TMR1ON = 0;
  2227                           
  2228                           ; Regs used in _BeepOff: [status,2]
  2229  0181  0020               	movlb	0	; select bank0
  2230  0182  1018               	bcf	24,0
  2231                           
  2232                           ;DK_PIC16_App.c: 966: gb_BeepOnFlag = 0;
  2233  0183  01C6               	clrf	_gb_BeepOnFlag
  2234                           
  2235                           ;DK_PIC16_App.c: 967: gb_BeepOnCount=0;
  2236  0184  01C5               	clrf	_gb_BeepOnCount
  2237                           
  2238                           ;DK_PIC16_App.c: 968: gw_BeepTimer=0;
  2239  0185  01B6               	clrf	_gw_BeepTimer
  2240  0186  01B7               	clrf	_gw_BeepTimer+1
  2241                           
  2242                           ;DK_PIC16_App.c: 969: RC2=0;
  2243  0187  110E               	bcf	14,2
  2244  0188  0008               	return
  2245  0189                     __end_of_BeepOff:	
  2246  0189                     __ptext2203:	
  2247 ;; =============== function _InitPort ends ============
  2248                           
  2249                           
  2250 ;; *************** function _InitSfr *****************
  2251 ;; Defined at:
  2252 ;;		line 127 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\main.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;		None               void
  2259 ;; Registers used:
  2260 ;;		wreg, status,2
  2261 ;; Tracked objects:
  2262 ;;		On entry : 17F/1
  2263 ;;		On exit  : 17F/1
  2264 ;;		Unchanged: FFE80/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    2
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279  0189                     _InitSfr:	
  2280                           
  2281                           ;main.c: 128: OSCCON = 0x78;
  2282                           
  2283                           ; Regs used in _InitSfr: [wreg+status,2]
  2284  0189  3078               	movlw	120
  2285  018A  0099               	movwf	25	;volatile
  2286                           
  2287                           ;main.c: 129: OPTION_REG = 0x06;
  2288  018B  3006               	movlw	6
  2289  018C  0095               	movwf	21	;volatile
  2290                           
  2291                           ;main.c: 130: WDTCON = 0x02;
  2292  018D  3002               	movlw	2
  2293  018E  0097               	movwf	23	;volatile
  2294                           
  2295                           ;main.c: 131: PCON = 0x00;
  2296  018F  0196               	clrf	22	;volatile
  2297                           
  2298                           ;main.c: 133: FVRCON = 0;
  2299  0190  0022               	movlb	2	; select bank2
  2300  0191  0197               	clrf	23	;volatile
  2301                           
  2302                           ;main.c: 134: APFCON = 0;
  2303  0192  019D               	clrf	29	;volatile
  2304                           
  2305                           ;main.c: 135: BORCON = 0;
  2306  0193  0196               	clrf	22	;volatile
  2307                           
  2308                           ;main.c: 136: ANSELA = 0;
  2309  0194  0023               	movlb	3	; select bank3
  2310  0195  018C               	clrf	12	;volatile
  2311                           
  2312                           ;main.c: 137: ANSELB = 0;
  2313  0196  018D               	clrf	13	;volatile
  2314                           
  2315                           ;main.c: 138: ANSELC = 0;
  2316  0197  018E               	clrf	14	;volatile
  2317                           
  2318                           ;main.c: 139: ANSELD = 0;
  2319  0198  018F               	clrf	15	;volatile
  2320                           
  2321                           ;main.c: 140: ANSELE = 0;
  2322  0199  0190               	clrf	16	;volatile
  2323                           
  2324                           ;main.c: 142: INTCON = 0;
  2325  019A  018B               	clrf	11	;volatile
  2326                           
  2327                           ;main.c: 143: PIR1 = 0;
  2328  019B  0020               	movlb	0	; select bank0
  2329  019C  0191               	clrf	17	;volatile
  2330                           
  2331                           ;main.c: 144: PIR2 = 0;
  2332  019D  0192               	clrf	18	;volatile
  2333                           
  2334                           ;main.c: 145: ADCON0 = 0;
  2335  019E  0021               	movlb	1	; select bank1
  2336  019F  019D               	clrf	29	;volatile
  2337                           
  2338                           ;main.c: 147: (GIE = 0);
  2339  01A0  138B               	bcf	11,7
  2340  01A1  0008               	return
  2341  01A2                     __end_of_InitSfr:	
  2342  01A2                     __ptext2202:	
  2343 ;; =============== function _timer1_init ends ============
  2344                           
  2345                           
  2346 ;; *************** function _InitPort *****************
  2347 ;; Defined at:
  2348 ;;		line 91 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\main.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;		None               void
  2355 ;; Registers used:
  2356 ;;		wreg, status,2
  2357 ;; Tracked objects:
  2358 ;;		On entry : 17E/1
  2359 ;;		On exit  : 17F/3
  2360 ;;		Unchanged: FFE80/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_main
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375  01A2                     _InitPort:	
  2376                           
  2377                           ;main.c: 92: PORTA = 0x01;
  2378                           
  2379                           ; Regs used in _InitPort: [wreg+status,2]
  2380  01A2  3001               	movlw	1
  2381  01A3  0020               	movlb	0	; select bank0
  2382  01A4  008C               	movwf	12	;volatile
  2383                           
  2384                           ;main.c: 93: LATA = 0x01;
  2385  01A5  0022               	movlb	2	; select bank2
  2386  01A6  008C               	movwf	12	;volatile
  2387                           
  2388                           ;main.c: 94: TRISA = 0x10;
  2389  01A7  3010               	movlw	16
  2390  01A8  0021               	movlb	1	; select bank1
  2391  01A9  008C               	movwf	12	;volatile
  2392                           
  2393                           ;main.c: 95: ANSELA= 0x00;
  2394  01AA  0023               	movlb	3	; select bank3
  2395  01AB  018C               	clrf	12	;volatile
  2396                           
  2397                           ;main.c: 97: PORTB = 0x00;
  2398  01AC  0020               	movlb	0	; select bank0
  2399  01AD  018D               	clrf	13	;volatile
  2400                           
  2401                           ;main.c: 98: LATB = 0x00;
  2402  01AE  0022               	movlb	2	; select bank2
  2403  01AF  018D               	clrf	13	;volatile
  2404                           
  2405                           ;main.c: 99: TRISB = 0x3F;
  2406  01B0  303F               	movlw	63
  2407  01B1  0021               	movlb	1	; select bank1
  2408  01B2  008D               	movwf	13	;volatile
  2409                           
  2410                           ;main.c: 100: WPUB = 0x0F;
  2411  01B3  300F               	movlw	15
  2412  01B4  0024               	movlb	4	; select bank4
  2413  01B5  008D               	movwf	13	;volatile
  2414                           
  2415                           ;main.c: 101: ANSELB= 0x00;
  2416  01B6  0023               	movlb	3	; select bank3
  2417  01B7  018D               	clrf	13	;volatile
  2418                           
  2419                           ;main.c: 103: PORTC = 0x10;
  2420  01B8  3010               	movlw	16
  2421  01B9  0020               	movlb	0	; select bank0
  2422  01BA  008E               	movwf	14	;volatile
  2423                           
  2424                           ;main.c: 104: LATC = 0x10;
  2425  01BB  0022               	movlb	2	; select bank2
  2426  01BC  008E               	movwf	14	;volatile
  2427                           
  2428                           ;main.c: 105: TRISC = 0xA0;
  2429  01BD  30A0               	movlw	160
  2430  01BE  0021               	movlb	1	; select bank1
  2431  01BF  008E               	movwf	14	;volatile
  2432                           
  2433                           ;main.c: 106: ANSELC= 0x00;
  2434  01C0  0023               	movlb	3	; select bank3
  2435  01C1  018E               	clrf	14	;volatile
  2436                           
  2437                           ;main.c: 108: PORTD = 0x00;
  2438  01C2  0020               	movlb	0	; select bank0
  2439  01C3  018F               	clrf	15	;volatile
  2440                           
  2441                           ;main.c: 109: LATD = 0x00;
  2442  01C4  0022               	movlb	2	; select bank2
  2443  01C5  018F               	clrf	15	;volatile
  2444                           
  2445                           ;main.c: 110: TRISD = 0x00;
  2446  01C6  0021               	movlb	1	; select bank1
  2447  01C7  018F               	clrf	15	;volatile
  2448                           
  2449                           ;main.c: 111: ANSELD= 0x00;
  2450  01C8  0023               	movlb	3	; select bank3
  2451  01C9  018F               	clrf	15	;volatile
  2452                           
  2453                           ;main.c: 113: PORTE = 0x04;
  2454  01CA  3004               	movlw	4
  2455  01CB  0020               	movlb	0	; select bank0
  2456  01CC  0090               	movwf	16	;volatile
  2457                           
  2458                           ;main.c: 114: LATE = 0x04;
  2459  01CD  0022               	movlb	2	; select bank2
  2460  01CE  0090               	movwf	16	;volatile
  2461                           
  2462                           ;main.c: 115: TRISE = 0x00;
  2463  01CF  0021               	movlb	1	; select bank1
  2464  01D0  0190               	clrf	16	;volatile
  2465                           
  2466                           ;main.c: 116: WPUE = 0x00;
  2467  01D1  0024               	movlb	4	; select bank4
  2468  01D2  0190               	clrf	16	;volatile
  2469                           
  2470                           ;main.c: 117: ANSELE= 0x00;
  2471  01D3  0023               	movlb	3	; select bank3
  2472  01D4  0190               	clrf	16	;volatile
  2473  01D5  0008               	return
  2474  01D6                     __end_of_InitPort:	
  2475  01D6                     __ptext2201:	
  2476 ;; =============== function _timer2_init ends ============
  2477                           
  2478                           
  2479 ;; *************** function _timer1_init *****************
  2480 ;; Defined at:
  2481 ;;		line 157 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\main.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;		None               void
  2488 ;; Registers used:
  2489 ;;		wreg, status,2
  2490 ;; Tracked objects:
  2491 ;;		On entry : 17F/3
  2492 ;;		On exit  : 17F/1
  2493 ;;		Unchanged: FFE80/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    2
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_main
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508  01D6                     _timer1_init:	
  2509                           
  2510                           ;main.c: 158: INTCON = 0xc0;
  2511                           
  2512                           ; Regs used in _timer1_init: [wreg+status,2]
  2513  01D6  30C0               	movlw	192
  2514  01D7  008B               	movwf	11	;volatile
  2515                           
  2516                           ;main.c: 159: T1CON = 0x4d;
  2517  01D8  304D               	movlw	77
  2518  01D9  0020               	movlb	0	; select bank0
  2519  01DA  0098               	movwf	24	;volatile
  2520                           
  2521                           ;main.c: 161: TMR1H = 0x00;
  2522  01DB  0197               	clrf	23	;volatile
  2523                           
  2524                           ;main.c: 162: TMR1L = 0x00;
  2525  01DC  0196               	clrf	22	;volatile
  2526                           
  2527                           ;main.c: 163: TMR1ON = 0;
  2528  01DD  1018               	bcf	24,0
  2529                           
  2530                           ;main.c: 164: TMR1IE = 1;
  2531  01DE  0021               	movlb	1	; select bank1
  2532  01DF  1411               	bsf	17,0
  2533  01E0  0008               	return
  2534  01E1                     __end_of_timer1_init:	
  2535  01E1                     __ptext2200:	
  2536 ;; =============== function _Uart_init ends ============
  2537                           
  2538                           
  2539 ;; *************** function _timer2_init *****************
  2540 ;; Defined at:
  2541 ;;		line 174 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\main.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;		None               void
  2548 ;; Registers used:
  2549 ;;		wreg
  2550 ;; Tracked objects:
  2551 ;;		On entry : 17F/1
  2552 ;;		On exit  : 17F/1
  2553 ;;		Unchanged: FFE80/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    2
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568  01E1                     _timer2_init:	
  2569                           
  2570                           ;main.c: 175: INTCON = 0xc0;
  2571                           
  2572                           ; Regs used in _timer2_init: [wreg]
  2573  01E1  30C0               	movlw	192
  2574  01E2  008B               	movwf	11	;volatile
  2575                           
  2576                           ;main.c: 176: T2CON = 0x1d;
  2577  01E3  301D               	movlw	29
  2578  01E4  0020               	movlb	0	; select bank0
  2579  01E5  009C               	movwf	28	;volatile
  2580                           
  2581                           ;main.c: 177: PR2 = 250;
  2582  01E6  30FA               	movlw	250
  2583  01E7  009B               	movwf	27	;volatile
  2584                           
  2585                           ;main.c: 178: TMR2IE = 1;
  2586  01E8  0021               	movlb	1	; select bank1
  2587  01E9  1491               	bsf	17,1
  2588  01EA  0008               	return
  2589  01EB                     __end_of_timer2_init:	
  2590  01EB                     __ptext2199:	
  2591 ;; =============== function ___bmul ends ============
  2592                           
  2593                           
  2594 ;; *************** function _Uart_init *****************
  2595 ;; Defined at:
  2596 ;;		line 188 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\main.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;		None
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;		None               void
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 1F/0
  2607 ;;		On exit  : 1F/1
  2608 ;;		Unchanged: FFFE0/0
  2609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2614 ;;Total ram usage:        0 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    2
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623  01EB                     _Uart_init:	
  2624                           
  2625                           ;main.c: 189: TRISC7 = 1;
  2626                           
  2627                           ; Regs used in _Uart_init: [wreg+status,2+status,0]
  2628  01EB  0021               	movlb	1	; select bank1
  2629  01EC  3019               	movlw	25
  2630  01ED  178E               	bsf	14,7
  2631                           
  2632                           ;main.c: 190: TRISC6 = 1;
  2633  01EE  170E               	bsf	14,6
  2634                           
  2635                           ;main.c: 191: SPBRGL = 0x19;
  2636  01EF  0023               	movlb	3	; select bank3
  2637  01F0  009B               	movwf	27	;volatile
  2638                           
  2639                           ;main.c: 193: SPBRGH = 0x00;
  2640  01F1  019C               	clrf	28	;volatile
  2641                           
  2642                           ;main.c: 194: BAUDCON = 0x00;
  2643  01F2  019F               	clrf	31	;volatile
  2644                           
  2645                           ;main.c: 195: RCSTA = RCSTA|0x90;
  2646  01F3  3090               	movlw	144
  2647  01F4  049D               	iorwf	29,f	;volatile
  2648                           
  2649                           ;main.c: 196: TXSTA = TXSTA|0x20;
  2650  01F5  169E               	bsf	30,5	;volatile
  2651                           
  2652                           ;main.c: 197: RCIE = 1;
  2653  01F6  0021               	movlb	1	; select bank1
  2654  01F7  30C0               	movlw	192
  2655  01F8  1691               	bsf	17,5
  2656                           
  2657                           ;main.c: 198: INTCON = 0xC0;
  2658  01F9  008B               	movwf	11	;volatile
  2659                           
  2660                           ;main.c: 199: TXIE=0;
  2661  01FA  1211               	bcf	17,4
  2662  01FB  0008               	return
  2663  01FC                     __end_of_Uart_init:	
  2664  01FC                     __ptext2188:	
  2665 ;; =============== function _RFM98_Standby ends ============
  2666                           
  2667                           
  2668 ;; *************** function _ModuleSelectModeEntryCheck *****************
  2669 ;; Defined at:
  2670 ;;		line 525 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;		None
  2675 ;; Return value:  Size  Location     Type
  2676 ;;		None               void
  2677 ;; Registers used:
  2678 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 17F/0
  2681 ;;		On exit  : 1F/0
  2682 ;;		Unchanged: FFE00/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2688 ;;Total ram usage:        0 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    3
  2691 ;; This function calls:
  2692 ;;		_FlashRead
  2693 ;;		_InitSystemParameter
  2694 ;; This function is called by:
  2695 ;;		_main
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698  01FC                     _ModuleSelectModeEntryCheck:	
  2699  01FC  3038               	movlw	56
  2700                           
  2701                           ;DK_PIC16_App.c: 526: gb_FirstPowerUpFlag=1;
  2702                           
  2703                           ; Regs used in _ModuleSelectModeEntryCheck: [wreg-status,0+pclath+cstack]
  2704  01FD  01CE               	clrf	_gb_FirstPowerUpFlag
  2705  01FE  0ACE               	incf	_gb_FirstPowerUpFlag,f
  2706                           
  2707                           ;DK_PIC16_App.c: 527: FlashRead(0x3820, gb_RxData);
  2708  01FF  01F5               	clrf	?_FlashRead+3
  2709  0200  01F4               	clrf	?_FlashRead+2
  2710  0201  00F3               	movwf	?_FlashRead+1
  2711  0202  3020               	movlw	32
  2712  0203  00F2               	movwf	?_FlashRead
  2713  0204  3020               	movlw	_gb_RxData& (0+255)
  2714  0205  00F6               	movwf	?_FlashRead+4
  2715  0206  2235  3180         	fcall	_FlashRead
  2716                           
  2717                           ;DK_PIC16_App.c: 529: if(gb_RxData[0]==0x5A)
  2718  0208  0022               	movlb	2	; select bank2
  2719  0209  0820               	movf	_gb_RxData^(0+256),w
  2720  020A  3A5A               	xorlw	90
  2721  020B  1D03               	skipz
  2722  020C  2A28               	goto	l15467
  2723                           
  2724                           ;DK_PIC16_App.c: 530: {
  2725                           ;DK_PIC16_App.c: 531: gb_FreqBuf_Addr=gb_RxData[1];
  2726  020D  0821               	movf	(_gb_RxData^(0+256)+1),w
  2727  020E  0020               	movlb	0	; select bank0
  2728  020F  00CF               	movwf	_gb_FreqBuf_Addr
  2729                           
  2730                           ;DK_PIC16_App.c: 532: gb_RateBuf_Addr=gb_RxData[2];
  2731  0210  0022               	movlb	2	; select bank2
  2732  0211  0822               	movf	(_gb_RxData^(0+256)+2),w
  2733  0212  0020               	movlb	0	; select bank0
  2734  0213  00D7               	movwf	_gb_RateBuf_Addr
  2735                           
  2736                           ;DK_PIC16_App.c: 533: gb_PowerBuf_Addr=gb_RxData[3];
  2737  0214  0022               	movlb	2	; select bank2
  2738  0215  0823               	movf	(_gb_RxData^(0+256)+3),w
  2739  0216  0020               	movlb	0	; select bank0
  2740  0217  00D6               	movwf	_gb_PowerBuf_Addr
  2741                           
  2742                           ;DK_PIC16_App.c: 534: gb_FdevBuf_Addr=gb_RxData[4];
  2743  0218  0022               	movlb	2	; select bank2
  2744  0219  0824               	movf	(_gb_RxData^(0+256)+4),w
  2745  021A  0020               	movlb	0	; select bank0
  2746  021B  00CD               	movwf	_gb_FdevBuf_Addr
  2747                           
  2748                           ;DK_PIC16_App.c: 535: gb_BandBuf_Addr=gb_RxData[5];
  2749  021C  0022               	movlb	2	; select bank2
  2750  021D  0825               	movf	(_gb_RxData^(0+256)+5),w
  2751  021E  0020               	movlb	0	; select bank0
  2752  021F  00C4               	movwf	_gb_BandBuf_Addr
  2753                           
  2754                           ;DK_PIC16_App.c: 536: gb_Modem_Addr_Backup=gb_Modem_Addr=gb_RxData[6];
  2755  0220  0022               	movlb	2	; select bank2
  2756  0221  0826               	movf	(_gb_RxData^(0+256)+6),w
  2757  0222  00FA               	movwf	_gb_Modem_Addr
  2758  0223  0020               	movlb	0	; select bank0
  2759  0224  00D2               	movwf	_gb_Modem_Addr_Backup
  2760                           
  2761                           ;DK_PIC16_App.c: 537: gb_SystemMode=gb_RxData[8];
  2762  0225  0022               	movlb	2	; select bank2
  2763  0226  0828               	movf	(_gb_RxData^(0+256)+8),w
  2764  0227  2A32               	goto	L29
  2765  0228                     l15467:	
  2766                           ;DK_PIC16_App.c: 538: }
  2767                           
  2768                           
  2769                           ;DK_PIC16_App.c: 539: else
  2770                           ;DK_PIC16_App.c: 540: {
  2771                           ;DK_PIC16_App.c: 541: gb_FreqBuf_Addr=0;
  2772  0228  0020               	movlb	0	; select bank0
  2773  0229  3004               	movlw	4
  2774  022A  01CF               	clrf	_gb_FreqBuf_Addr
  2775                           
  2776                           ;DK_PIC16_App.c: 542: gb_RateBuf_Addr=1;
  2777  022B  01D7               	clrf	_gb_RateBuf_Addr
  2778  022C  0AD7               	incf	_gb_RateBuf_Addr,f
  2779                           
  2780                           ;DK_PIC16_App.c: 543: gb_PowerBuf_Addr=0;
  2781  022D  01D6               	clrf	_gb_PowerBuf_Addr
  2782                           
  2783                           ;DK_PIC16_App.c: 544: gb_FdevBuf_Addr=0;
  2784  022E  01CD               	clrf	_gb_FdevBuf_Addr
  2785                           
  2786                           ;DK_PIC16_App.c: 545: gb_BandBuf_Addr=0;
  2787  022F  01C4               	clrf	_gb_BandBuf_Addr
  2788                           
  2789                           ;DK_PIC16_App.c: 546: gb_Modem_Addr_Backup=gb_Modem_Addr=0;
  2790  0230  01FA               	clrf	_gb_Modem_Addr
  2791  0231  01D2               	clrf	_gb_Modem_Addr_Backup
  2792  0232                     L29:	
  2793                           ;DK_PIC16_App.c: 548: gb_SystemMode=0x04;
  2794                           
  2795  0232  00FB               	movwf	_gb_SystemMode
  2796                           
  2797                           ;DK_PIC16_App.c: 549: }
  2798                           ;DK_PIC16_App.c: 551: InitSystemParameter();
  2799  0233  3192  2A35         	ljmp	l14849
  2800  0235                     __end_of_ModuleSelectModeEntryCheck:	
  2801  0235                     __ptext2221:	
  2802 ;; =============== function _FlashUnlock ends ============
  2803                           
  2804                           
  2805 ;; *************** function _FlashRead *****************
  2806 ;; Defined at:
  2807 ;;		line 23 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\DK_Flash.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  FlashAdr        4    2[COMMON] unsigned long 
  2810 ;;  array           1    6[COMMON] PTR unsigned char 
  2811 ;;		 -> gb_RxData(32), 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  i               1    8[COMMON] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;		None               void
  2816 ;; Registers used:
  2817 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 17F/0
  2820 ;;		On exit  : 1F/3
  2821 ;;		Unchanged: FFE00/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2823 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2826 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2827 ;;Total ram usage:        7 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    2
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_ModuleSelectModeEntryCheck
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836  0235                     _FlashRead:	
  2837                           
  2838                           ;DK_Flash.c: 24: u8 i;
  2839                           ;DK_Flash.c: 26: CFGS = 0;
  2840                           
  2841                           ; Regs used in _FlashRead: [wreg+fsr1l-status,0]
  2842  0235  0023               	movlb	3	; select bank3
  2843  0236  1315               	bcf	21,6
  2844                           
  2845                           ;DK_Flash.c: 27: PMADR = FlashAdr;
  2846  0237  0873               	movf	FlashRead@FlashAdr+1,w
  2847  0238  0092               	movwf	18	;volatile
  2848  0239  0872               	movf	FlashRead@FlashAdr,w
  2849  023A  0091               	movwf	17	;volatile
  2850                           
  2851                           ;DK_Flash.c: 29: for(i=0; i<32; i++)
  2852  023B  01F8               	clrf	FlashRead@i
  2853  023C                     l1143:	
  2854                           
  2855                           ;DK_Flash.c: 30: {
  2856                           ;DK_Flash.c: 31: RD = 1;
  2857  023C  1415               	bsf	21,0
  2858  023D  0000               	nop	;#
  2859  023E  0000               	nop	;#
  2860                           
  2861                           ;DK_Flash.c: 34: array[i] = (u8)(PMDAT&0x00FF);
  2862  023F  0878               	movf	FlashRead@i,w
  2863  0240  0776               	addwf	FlashRead@array,w
  2864  0241  00F7               	movwf	??_FlashRead
  2865  0242  0086               	movwf	6
  2866  0243  3001               	movlw	1	; select bank2/3
  2867  0244  0087               	movwf	7
  2868  0245  0023               	movlb	3	; select bank3
  2869  0246  0813               	movf	19,w	;volatile
  2870  0247  0081               	movwf	1
  2871                           
  2872                           ;DK_Flash.c: 35: PMADR++;
  2873  0248  0A91               	incf	17,f	;volatile
  2874  0249  1903               	skipnz
  2875  024A  0A92               	incf	18,f	;volatile
  2876  024B  3020               	movlw	32
  2877  024C  0AF8               	incf	FlashRead@i,f
  2878  024D  0278               	subwf	FlashRead@i,w
  2879  024E  1C03               	skipc
  2880  024F  2A3C               	goto	l1143
  2881                           
  2882                           ;DK_Flash.c: 36: }
  2883                           ;DK_Flash.c: 37: RD = 0;
  2884  0250  1015               	bcf	21,0
  2885  0251  0008               	return
  2886  0252                     __end_of_FlashRead:	
  2887  0252                     __ptext2179:	
  2888 ;; =============== function _LCD_Init ends ============
  2889                           
  2890                           
  2891 ;; *************** function _PowerUpDelay *****************
  2892 ;; Defined at:
  2893 ;;		line 279 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\main.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;		None               void
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0, pclath, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 17F/1
  2904 ;;		On exit  : 17E/0
  2905 ;;		Unchanged: FFE80/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2911 ;;Total ram usage:        0 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    3
  2914 ;; This function calls:
  2915 ;;		_Delay_ms
  2916 ;; This function is called by:
  2917 ;;		_main
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920  0252                     _PowerUpDelay:	
  2921                           
  2922                           ;main.c: 280: Delay_ms(200);
  2923                           
  2924                           ; Regs used in _PowerUpDelay: [wreg+status,2+status,0+pclath+cstack]
  2925  0252  30C8               	movlw	200
  2926  0253  00F2               	movwf	?_Delay_ms
  2927  0254  01F3               	clrf	?_Delay_ms+1
  2928  0255  01F4               	clrf	?_Delay_ms+2
  2929  0256  01F5               	clrf	?_Delay_ms+3
  2930  0257  2F25               	ljmp	l14801
  2931  0258                     __end_of_PowerUpDelay:	
  2932  0258                     __ptext2178:	
  2933 ;; =============== function _SaveRFParameterToFlash ends ============
  2934                           
  2935                           
  2936 ;; *************** function _LCD_Init *****************
  2937 ;; Defined at:
  2938 ;;		line 160 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_LCD.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;		None               void
  2945 ;; Registers used:
  2946 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 17F/1
  2949 ;;		On exit  : 17F/1
  2950 ;;		Unchanged: FFE80/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    4
  2959 ;; This function calls:
  2960 ;;		_CK1622_WriteCmd
  2961 ;;		_Clr_LCD
  2962 ;; This function is called by:
  2963 ;;		_main
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966  0258                     _LCD_Init:	
  2967                           
  2968                           ;DK_LCD.c: 161: CK1622_WriteCmd(0x01);
  2969                           
  2970                           ; Regs used in _LCD_Init: [wreg-status,0+pclath+cstack]
  2971  0258  3001               	movlw	1
  2972  0259  2277  3180         	fcall	_CK1622_WriteCmd
  2973                           
  2974                           ;DK_LCD.c: 162: CK1622_WriteCmd(0x03);
  2975  025B  3003               	movlw	3
  2976  025C  2277  3180         	fcall	_CK1622_WriteCmd
  2977                           
  2978                           ;DK_LCD.c: 163: CK1622_WriteCmd(0xE3);
  2979  025E  30E3               	movlw	227
  2980  025F  2277  3180         	fcall	_CK1622_WriteCmd
  2981                           
  2982                           ;DK_LCD.c: 164: CK1622_WriteCmd(0x05);
  2983  0261  3005               	movlw	5
  2984  0262  2277  3180         	fcall	_CK1622_WriteCmd
  2985                           
  2986                           ;DK_LCD.c: 165: CK1622_WriteCmd(0x18);
  2987  0264  3018               	movlw	24
  2988  0265  2277  3180         	fcall	_CK1622_WriteCmd
  2989                           
  2990                           ;DK_LCD.c: 166: CK1622_WriteCmd(0x80);
  2991  0267  3080               	movlw	128
  2992  0268  2277  3180         	fcall	_CK1622_WriteCmd
  2993                           
  2994                           ;DK_LCD.c: 167: CK1622_WriteCmd(0x08);
  2995  026A  3008               	movlw	8
  2996  026B  2277  3180         	fcall	_CK1622_WriteCmd
  2997                           
  2998                           ;DK_LCD.c: 168: CK1622_WriteCmd(0x0D);
  2999  026D  300D               	movlw	13
  3000  026E  2277  3180         	fcall	_CK1622_WriteCmd
  3001                           
  3002                           ;DK_LCD.c: 169: CK1622_WriteCmd(0x06);
  3003  0270  3006               	movlw	6
  3004  0271  2277  3180         	fcall	_CK1622_WriteCmd
  3005                           
  3006                           ;DK_LCD.c: 170: CK1622_WriteCmd(0xA0);
  3007  0273  30A0               	movlw	160
  3008  0274  2277  3180         	fcall	_CK1622_WriteCmd
  3009                           
  3010                           ;DK_LCD.c: 172: Clr_LCD();
  3011  0276  2AC3               	ljmp	l15193
  3012  0277                     __end_of_LCD_Init:	
  3013  0277                     __ptext2218:	
  3014 ;; =============== function _AsciiToDisplay ends ============
  3015                           
  3016                           
  3017 ;; *************** function _CK1622_WriteCmd *****************
  3018 ;; Defined at:
  3019 ;;		line 114 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_LCD.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  cmd             1    wreg     unsigned char 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  cmd             1    2[COMMON] unsigned char 
  3024 ;;  temp            2    3[COMMON] unsigned int 
  3025 ;;  i               1    5[COMMON] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;		None               void
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0
  3030 ;; Tracked objects:
  3031 ;;		On entry : 17F/1
  3032 ;;		On exit  : 17F/1
  3033 ;;		Unchanged: FFE80/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3036 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3039 ;;Total ram usage:        4 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    2
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_LCD_Init
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048  0277                     _CK1622_WriteCmd:	
  3049                           
  3050                           ; Regs used in _CK1622_WriteCmd: [wreg+status,2+status,0]
  3051                           ;CK1622_WriteCmd@cmd stored from wreg
  3052  0277  00F2               	movwf	CK1622_WriteCmd@cmd
  3053                           
  3054                           ;DK_LCD.c: 115: u8 i;
  3055                           ;DK_LCD.c: 116: u16 temp=cmd;
  3056  0278  00F3               	movwf	CK1622_WriteCmd@temp
  3057  0279  01F4               	clrf	CK1622_WriteCmd@temp+1
  3058                           
  3059                           ;DK_LCD.c: 117: TRISE2=0,RE2=0;
  3060  027A  1110               	bcf	16,2
  3061  027B  0020               	movlb	0	; select bank0
  3062  027C  1110               	bcf	16,2
  3063                           
  3064                           ;DK_LCD.c: 118: TRISE1=1;
  3065  027D  0021               	movlb	1	; select bank1
  3066  027E  300C               	movlw	12
  3067  027F  1490               	bsf	16,1
  3068                           
  3069                           ;DK_LCD.c: 119: temp|=0x400;
  3070  0280  1574               	bsf	CK1622_WriteCmd@temp+1,2
  3071                           
  3072                           ;DK_LCD.c: 120: temp<<=1;
  3073  0281  35F3               	lslf	CK1622_WriteCmd@temp,f
  3074  0282  0DF4               	rlf	CK1622_WriteCmd@temp+1,f
  3075                           
  3076                           ;DK_LCD.c: 122: for(i=12; i!=0; i--)
  3077  0283  00F5               	movwf	CK1622_WriteCmd@i
  3078  0284                     l2338:	
  3079                           
  3080                           ;DK_LCD.c: 123: {
  3081                           ;DK_LCD.c: 124: TRISE0=0,RE0=0;
  3082  0284  1010               	bcf	16,0
  3083  0285  0020               	movlb	0	; select bank0
  3084  0286  1010               	bcf	16,0
  3085                           
  3086                           ;DK_LCD.c: 125: if(temp&0x800)
  3087  0287  1DF4               	btfss	CK1622_WriteCmd@temp+1,3
  3088  0288  2A8C               	goto	l2340
  3089                           
  3090                           ;DK_LCD.c: 126: TRISA5=1;
  3091  0289  0021               	movlb	1	; select bank1
  3092  028A  168C               	bsf	12,5
  3093  028B  2A8E               	goto	l2341
  3094  028C                     l2340:	
  3095                           
  3096                           ;DK_LCD.c: 127: else
  3097                           ;DK_LCD.c: 128: TRISA5=0,RA5=0;
  3098  028C  27BF  3180         	fcall	PL63	;call to abstracted procedure
  3099  028E                     l2341:	
  3100                           
  3101                           ;DK_LCD.c: 129: TRISE0=1;
  3102  028E  0021               	movlb	1	; select bank1
  3103  028F  1410               	bsf	16,0
  3104                           
  3105                           ;DK_LCD.c: 130: temp <<= 1;
  3106  0290  35F3               	lslf	CK1622_WriteCmd@temp,f
  3107  0291  0DF4               	rlf	CK1622_WriteCmd@temp+1,f
  3108  0292  0BF5               	decfsz	CK1622_WriteCmd@i,f
  3109  0293  2A84               	goto	l2338
  3110                           
  3111                           ;DK_LCD.c: 131: }
  3112                           ;DK_LCD.c: 132: TRISE0=0,RE0=0;
  3113  0294  1010               	bcf	16,0
  3114                           
  3115                           ;DK_LCD.c: 133: TRISA5=1;
  3116                           
  3117                           ;DK_LCD.c: 134: TRISE2=1;
  3118  0295  2FB2               	ljmp	PL53	;call to abstracted procedure
  3119  0296                     __end_of_CK1622_WriteCmd:	
  3120  0296                     __ptext2175:	
  3121 ;; =============== function _RFM98_Config ends ============
  3122                           
  3123                           
  3124 ;; *************** function _PowerOnMusic *****************
  3125 ;; Defined at:
  3126 ;;		line 979 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;		None
  3131 ;; Return value:  Size  Location     Type
  3132 ;;		None               void
  3133 ;; Registers used:
  3134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 1F/1
  3137 ;;		On exit  : 1F/1
  3138 ;;		Unchanged: FFFE0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3144 ;;Total ram usage:        0 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    4
  3147 ;; This function calls:
  3148 ;;		_BeepOn
  3149 ;;		_LCD_DisplayAll
  3150 ;;		_LCD_Display
  3151 ;;		_Clr_LCD
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156  0296                     _PowerOnMusic:	
  3157                           
  3158                           ;DK_PIC16_App.c: 980: BeepOn((u16*)MusicTab_PowerOn);
  3159                           
  3160                           ; Regs used in _PowerOnMusic: [wreg-status,0+pclath+cstack]
  3161  0296  3096               	movlw	low (_MusicTab_PowerOn| (0+32768))
  3162  0297  00F2               	movwf	?_BeepOn
  3163  0298  3098               	movlw	high (_MusicTab_PowerOn| (0+32768))
  3164  0299  00F3               	movwf	?_BeepOn+1
  3165  029A  2621  3180         	fcall	_BeepOn
  3166                           
  3167                           ;DK_PIC16_App.c: 981: LCD_DisplayAll();
  3168  029C  22B6  3180         	fcall	_LCD_DisplayAll
  3169                           
  3170                           ;DK_PIC16_App.c: 982: _DispSeg.u32Bits.Bit8=1;_DispSeg.u32Bits.Bit9=1;_DispSeg.u32Bits.B
      +                          it14=1;
  3171  029E  1421               	bsf	__DispSeg+1,0
  3172  029F  14A1               	bsf	__DispSeg+1,1
  3173  02A0  1721               	bsf	__DispSeg+1,6
  3174  02A1                     l15833:	
  3175                           
  3176                           ;DK_PIC16_App.c: 984: {
  3177                           ;DK_PIC16_App.c: 985: if((gw_BeepTimer==0)&&(gw_ToneBuf[gb_BeepOnCount+1]==0))
  3178  02A1  0020               	movlb	0	; select bank0
  3179  02A2  0837               	movf	_gw_BeepTimer+1,w
  3180  02A3  0436               	iorwf	_gw_BeepTimer,w
  3181  02A4  1D03               	skipz
  3182  02A5  2AAF               	goto	l15839
  3183  02A6  3545               	lslf	_gb_BeepOnCount,w
  3184  02A7  3EA2               	addlw	(_gw_ToneBuf+2)& (0+255)
  3185  02A8  0086               	movwf	6
  3186  02A9  3001               	movlw	1	; select bank3/4
  3187  02AA  0087               	movwf	7
  3188  02AB  0016               	moviw fsr1++
  3189  02AC  0401               	iorwf	1,w
  3190  02AD  1903               	btfsc	3,2
  3191  02AE  2AB2               	goto	l4095
  3192  02AF                     l15839:	
  3193                           
  3194                           ;DK_PIC16_App.c: 987: LCD_Display();
  3195  02AF  230D  3180         	fcall	_LCD_Display
  3196  02B1  2AA1               	goto	l15833
  3197  02B2                     l4095:	
  3198                           
  3199                           ;DK_PIC16_App.c: 988: }
  3200                           ;DK_PIC16_App.c: 989: _DispSeg.u32Bits.Bit8=0;_DispSeg.u32Bits.Bit9=0;_DispSeg.u32Bits.B
      +                          it14=0;
  3201  02B2  1021               	bcf	__DispSeg+1,0
  3202  02B3  10A1               	bcf	__DispSeg+1,1
  3203  02B4  1321               	bcf	__DispSeg+1,6
  3204                           
  3205                           ;DK_PIC16_App.c: 990: Clr_LCD();
  3206  02B5  2AC3               	ljmp	l15193
  3207  02B6                     __end_of_PowerOnMusic:	
  3208  02B6                     __ptext2214:	
  3209 ;; =============== function _Delay_ms ends ============
  3210                           
  3211                           
  3212 ;; *************** function _LCD_DisplayAll *****************
  3213 ;; Defined at:
  3214 ;;		line 526 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_LCD.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  i               1    2[COMMON] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;		None               void
  3221 ;; Registers used:
  3222 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 1F/0
  3225 ;;		On exit  : 1F/0
  3226 ;;		Unchanged: FFFE0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3231 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3232 ;;Total ram usage:        1 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    2
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_PowerOnMusic
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241  02B6                     _LCD_DisplayAll:	
  3242                           
  3243                           ;DK_LCD.c: 527: u8 i;
  3244                           ;DK_LCD.c: 528: for(i=0;i<32;i++)
  3245                           
  3246                           ; Regs used in _LCD_DisplayAll: [wreg+fsr1l-status,0]
  3247  02B6  01F2               	clrf	LCD_DisplayAll@i
  3248  02B7                     l14783:	
  3249                           
  3250                           ;DK_LCD.c: 529: DispBuf[i]=0xff;
  3251  02B7  0872               	movf	LCD_DisplayAll@i,w
  3252  02B8  3EA0               	addlw	_DispBuf& (0+255)
  3253  02B9  0086               	movwf	6
  3254  02BA  30FF               	movlw	255
  3255  02BB  0187               	clrf	7
  3256  02BC  0081               	movwf	1
  3257  02BD  3020               	movlw	32
  3258  02BE  0AF2               	incf	LCD_DisplayAll@i,f
  3259  02BF  0272               	subwf	LCD_DisplayAll@i,w
  3260  02C0  1803               	btfsc	3,0
  3261  02C1  0008               	return
  3262  02C2  2AB7               	goto	l14783
  3263  02C3                     __end_of_LCD_DisplayAll:	
  3264  02C3                     __ptext2193:	
  3265 ;; =============== function _SendStringToDispBuf ends ============
  3266                           
  3267                           
  3268 ;; *************** function _Clr_LCD *****************
  3269 ;; Defined at:
  3270 ;;		line 144 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_LCD.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  i               1    8[COMMON] unsigned char 
  3275 ;;  j               1    7[COMMON] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;		None               void
  3278 ;; Registers used:
  3279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 1E/0
  3282 ;;		On exit  : 1F/1
  3283 ;;		Unchanged: FFFE0/0
  3284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3289 ;;Total ram usage:        2 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    3
  3292 ;; This function calls:
  3293 ;;		_CK1622_WriteByte
  3294 ;; This function is called by:
  3295 ;;		_LCD_Init
  3296 ;;		_WorkModeSelect
  3297 ;;		_PowerOnMusic
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300  02C3                     _Clr_LCD:	
  3301  02C3                     l15193:	
  3302                           ; Regs used in _Clr_LCD: [wreg-status,0+pclath+cstack]
  3303                           
  3304                           
  3305                           ;DK_LCD.c: 145: u8 i,j=0;
  3306  02C3  01F7               	clrf	Clr_LCD@j
  3307                           
  3308                           ;DK_LCD.c: 146: for(i=0;i<64;i+=2)
  3309  02C4  01F8               	clrf	Clr_LCD@i
  3310  02C5                     l15199:	
  3311                           
  3312                           ;DK_LCD.c: 147: {
  3313                           ;DK_LCD.c: 148: CK1622_WriteByte(i,0x00);
  3314  02C5  01F2               	clrf	?_CK1622_WriteByte
  3315  02C6  0878               	movf	Clr_LCD@i,w
  3316  02C7  22DB  3180         	fcall	_CK1622_WriteByte
  3317                           
  3318                           ;DK_LCD.c: 149: DispBuf[j++]=LCDDigTable[36];
  3319  02C9  0877               	movf	Clr_LCD@j,w
  3320  02CA  3EA0               	addlw	_DispBuf& (0+255)
  3321  02CB  0086               	movwf	6
  3322  02CC  3025               	movlw	low ((_LCDDigTable| (0+32768)+36))
  3323  02CD  0187               	clrf	7
  3324  02CE  0084               	movwf	4
  3325  02CF  3098               	movlw	high ((_LCDDigTable| (0+32768)+36))
  3326  02D0  0085               	movwf	5
  3327  02D1  0800               	movf	0,w	;code access
  3328  02D2  0081               	movwf	1
  3329  02D3  3040               	movlw	64
  3330  02D4  0AF7               	incf	Clr_LCD@j,f
  3331  02D5  0AF8               	incf	Clr_LCD@i,f
  3332  02D6  0AF8               	incf	Clr_LCD@i,f
  3333  02D7  0278               	subwf	Clr_LCD@i,w
  3334  02D8  1803               	btfsc	3,0
  3335  02D9  0008               	return
  3336  02DA  2AC5               	goto	l15199
  3337  02DB                     __end_of_Clr_LCD:	
  3338  02DB                     __ptext2219:	
  3339 ;; =============== function _CK1622_WriteCmd ends ============
  3340                           
  3341                           
  3342 ;; *************** function _CK1622_WriteByte *****************
  3343 ;; Defined at:
  3344 ;;		line 30 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\DK_LCD.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  addr            1    wreg     unsigned char 
  3347 ;;  dat             1    2[COMMON] unsigned char 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;  addr            1    3[COMMON] unsigned char 
  3350 ;;  temp            2    4[COMMON] unsigned int 
  3351 ;;  i               1    6[COMMON] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;		None               void
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0
  3356 ;; Tracked objects:
  3357 ;;		On entry : 1E/0
  3358 ;;		On exit  : 1F/1
  3359 ;;		Unchanged: FFFE0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3361 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3362 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3364 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3365 ;;Total ram usage:        5 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:    2
  3368 ;; This function calls:
  3369 ;;		Nothing
  3370 ;; This function is called by:
  3371 ;;		_Clr_LCD
  3372 ;;		_LCD_Display
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375  02DB                     _CK1622_WriteByte:	
  3376                           
  3377                           ; Regs used in _CK1622_WriteByte: [wreg+status,2+status,0]
  3378                           ;CK1622_WriteByte@addr stored from wreg
  3379  02DB  00F3               	movwf	CK1622_WriteByte@addr
  3380                           
  3381                           ;DK_LCD.c: 31: u8 i;
  3382                           ;DK_LCD.c: 32: u16 temp=addr;
  3383  02DC  00F4               	movwf	CK1622_WriteByte@temp
  3384  02DD  01F5               	clrf	CK1622_WriteByte@temp+1
  3385                           
  3386                           ;DK_LCD.c: 33: TRISE2=0,RE2=0;
  3387  02DE  0021               	movlb	1	; select bank1
  3388  02DF  1110               	bcf	16,2
  3389  02E0  0020               	movlb	0	; select bank0
  3390  02E1  1110               	bcf	16,2
  3391                           
  3392                           ;DK_LCD.c: 34: TRISE1=1;
  3393  02E2  0021               	movlb	1	; select bank1
  3394  02E3  3040               	movlw	64
  3395  02E4  1490               	bsf	16,1
  3396                           
  3397                           ;DK_LCD.c: 35: temp|=0x140;
  3398  02E5  04F4               	iorwf	CK1622_WriteByte@temp,f
  3399  02E6  3001               	movlw	1
  3400  02E7  04F5               	iorwf	CK1622_WriteByte@temp+1,f
  3401                           
  3402                           ;DK_LCD.c: 37: for(i=9; i!=0; i--)
  3403  02E8  3009               	movlw	9
  3404  02E9  00F6               	movwf	CK1622_WriteByte@i
  3405  02EA                     l2313:	
  3406                           
  3407                           ;DK_LCD.c: 38: {
  3408                           ;DK_LCD.c: 39: TRISE0=0,RE0=0;
  3409  02EA  1010               	bcf	16,0
  3410  02EB  0020               	movlb	0	; select bank0
  3411  02EC  1010               	bcf	16,0
  3412                           
  3413                           ;DK_LCD.c: 40: if(temp&0x100)
  3414  02ED  1C75               	btfss	CK1622_WriteByte@temp+1,0
  3415  02EE  2AF2               	goto	l2315
  3416                           
  3417                           ;DK_LCD.c: 41: TRISA5=1;
  3418  02EF  0021               	movlb	1	; select bank1
  3419  02F0  168C               	bsf	12,5
  3420  02F1  2AF4               	goto	l2316
  3421  02F2                     l2315:	
  3422                           
  3423                           ;DK_LCD.c: 42: else
  3424                           ;DK_LCD.c: 43: TRISA5=0,RA5=0;
  3425  02F2  27BF  3180         	fcall	PL63	;call to abstracted procedure
  3426  02F4                     l2316:	
  3427                           
  3428                           ;DK_LCD.c: 44: TRISE0=1;
  3429  02F4  0021               	movlb	1	; select bank1
  3430  02F5  1410               	bsf	16,0
  3431                           
  3432                           ;DK_LCD.c: 45: temp <<= 1;
  3433  02F6  35F4               	lslf	CK1622_WriteByte@temp,f
  3434  02F7  0DF5               	rlf	CK1622_WriteByte@temp+1,f
  3435  02F8  0BF6               	decfsz	CK1622_WriteByte@i,f
  3436  02F9  2AEA               	goto	l2313
  3437                           
  3438                           ;DK_LCD.c: 46: }
  3439                           ;DK_LCD.c: 47: for(i=8; i!=0; i--)
  3440  02FA  3008               	movlw	8
  3441  02FB  00F6               	movwf	CK1622_WriteByte@i
  3442  02FC                     l2317:	
  3443                           
  3444                           ;DK_LCD.c: 48: {
  3445                           ;DK_LCD.c: 49: TRISE0=0,RE0=0;
  3446  02FC  1010               	bcf	16,0
  3447  02FD  0020               	movlb	0	; select bank0
  3448  02FE  1010               	bcf	16,0
  3449                           
  3450                           ;DK_LCD.c: 50: if(dat&0x01)
  3451  02FF  1C72               	btfss	CK1622_WriteByte@dat,0
  3452  0300  2B04               	goto	l2319
  3453                           
  3454                           ;DK_LCD.c: 51: TRISA5=1;
  3455  0301  0021               	movlb	1	; select bank1
  3456  0302  168C               	bsf	12,5
  3457  0303  2B06               	goto	l2320
  3458  0304                     l2319:	
  3459                           
  3460                           ;DK_LCD.c: 52: else
  3461                           ;DK_LCD.c: 53: TRISA5=0,RA5=0;
  3462  0304  27BF  3180         	fcall	PL63	;call to abstracted procedure
  3463  0306                     l2320:	
  3464                           
  3465                           ;DK_LCD.c: 54: TRISE0=1;
  3466  0306  0021               	movlb	1	; select bank1
  3467  0307  1410               	bsf	16,0
  3468                           
  3469                           ;DK_LCD.c: 55: dat >>= 1;
  3470  0308  36F2               	lsrf	CK1622_WriteByte@dat,f
  3471  0309  0BF6               	decfsz	CK1622_WriteByte@i,f
  3472  030A  2AFC               	goto	l2317
  3473                           
  3474                           ;DK_LCD.c: 56: }
  3475                           ;DK_LCD.c: 57: TRISE0=0,RE0=0;
  3476  030B  1010               	bcf	16,0
  3477                           
  3478                           ;DK_LCD.c: 58: TRISA5=1;
  3479                           
  3480                           ;DK_LCD.c: 59: TRISE2=1;
  3481  030C  2FB2               	ljmp	PL53	;call to abstracted procedure
  3482  030D                     __end_of_CK1622_WriteByte:	
  3483  030D                     __ptext2190:	
  3484 ;; =============== function _KeyScan ends ============
  3485                           
  3486                           
  3487 ;; *************** function _LCD_Display *****************
  3488 ;; Defined at:
  3489 ;;		line 507 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_LCD.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  i               1    7[COMMON] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;		None               void
  3496 ;; Registers used:
  3497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 1F/0
  3500 ;;		On exit  : 1F/1
  3501 ;;		Unchanged: FFFE0/0
  3502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3507 ;;Total ram usage:        1 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    3
  3510 ;; This function calls:
  3511 ;;		_SendSegDataToDispBuf
  3512 ;;		_FlashDisplay
  3513 ;;		_CK1622_WriteByte
  3514 ;; This function is called by:
  3515 ;;		_MenuConfig
  3516 ;;		_PowerOnMusic
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519  030D                     _LCD_Display:	
  3520  030D                     l15401:	
  3521                           ; Regs used in _LCD_Display: [wreg-status,0+pclath+cstack]
  3522                           
  3523                           
  3524                           ;DK_LCD.c: 509: SendSegDataToDispBuf();
  3525  030D  2333  3180         	fcall	_SendSegDataToDispBuf
  3526                           
  3527                           ;DK_LCD.c: 510: for(i=0;i<32;i++){DispBufCache[i]=DispBuf[i];}
  3528  030F  01F7               	clrf	LCD_Display@i
  3529  0310                     l15409:	
  3530  0310  0877               	movf	LCD_Display@i,w
  3531  0311  3EC0               	addlw	_DispBufCache& (0+255)
  3532  0312  0086               	movwf	6
  3533  0313  0187               	clrf	7
  3534  0314  0877               	movf	LCD_Display@i,w
  3535  0315  3EA0               	addlw	_DispBuf& (0+255)
  3536  0316  0084               	movwf	4
  3537  0317  0185               	clrf	5
  3538  0318  0800               	movf	0,w
  3539  0319  0081               	movwf	1
  3540  031A  3020               	movlw	32
  3541  031B  0AF7               	incf	LCD_Display@i,f
  3542  031C  0277               	subwf	LCD_Display@i,w
  3543  031D  1C03               	skipc
  3544  031E  2B10               	goto	l15409
  3545                           
  3546                           ;DK_LCD.c: 511: FlashDisplay();
  3547  031F  3192  22F0  3180   	fcall	_FlashDisplay
  3548                           
  3549                           ;DK_LCD.c: 513: for(i=0;i<60;i+=2)
  3550  0322  01F7               	clrf	LCD_Display@i
  3551  0323                     l15423:	
  3552                           
  3553                           ;DK_LCD.c: 514: {
  3554                           ;DK_LCD.c: 515: CK1622_WriteByte(i,DispBufCache[i/2]);
  3555  0323  3677               	lsrf	LCD_Display@i,w
  3556  0324  3EC0               	addlw	_DispBufCache& (0+255)
  3557  0325  0086               	movwf	6
  3558  0326  0187               	clrf	7
  3559  0327  0801               	movf	1,w
  3560  0328  00F2               	movwf	?_CK1622_WriteByte
  3561  0329  0877               	movf	LCD_Display@i,w
  3562  032A  22DB  3180         	fcall	_CK1622_WriteByte
  3563  032C  303C               	movlw	60
  3564  032D  0AF7               	incf	LCD_Display@i,f
  3565  032E  0AF7               	incf	LCD_Display@i,f
  3566  032F  0277               	subwf	LCD_Display@i,w
  3567  0330  1803               	btfsc	3,0
  3568  0331  0008               	return
  3569  0332  2B23               	goto	l15423
  3570  0333                     __end_of_LCD_Display:	
  3571  0333                     __ptext2216:	
  3572 ;; =============== function _FlashDisplay ends ============
  3573                           
  3574                           
  3575 ;; *************** function _SendSegDataToDispBuf *****************
  3576 ;; Defined at:
  3577 ;;		line 346 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_LCD.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;		None               void
  3584 ;; Registers used:
  3585 ;;		None
  3586 ;; Tracked objects:
  3587 ;;		On entry : 1F/0
  3588 ;;		On exit  : 1E/0
  3589 ;;		Unchanged: FFFE0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    2
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_LCD_Display
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604  0333                     _SendSegDataToDispBuf:	
  3605                           
  3606                           ;DK_LCD.c: 347: if(_DispSeg.u32Bits.Bit0){DispBuf[0]|=0x80;}
  3607                           
  3608                           ; Regs used in _SendSegDataToDispBuf: []
  3609  0333  1C20               	btfss	__DispSeg,0
  3610  0334  2B37               	goto	l2419
  3611  0335  0021               	movlb	1	; select bank1
  3612  0336  17A0               	bsf	_DispBuf^(0+128),7
  3613  0337                     l2419:	
  3614                           
  3615                           ;DK_LCD.c: 348: if(_DispSeg.u32Bits.Bit1){DispBuf[29]|=0x80;}
  3616  0337  0020               	movlb	0	; select bank0
  3617  0338  1CA0               	btfss	__DispSeg,1
  3618  0339  2B3C               	goto	l2420
  3619  033A  0021               	movlb	1	; select bank1
  3620  033B  17BD               	bsf	(_DispBuf^(0+128)+29),7
  3621  033C                     l2420:	
  3622                           
  3623                           ;DK_LCD.c: 349: if(_DispSeg.u32Bits.Bit2){DispBuf[28]|=0x80;}
  3624  033C  0020               	movlb	0	; select bank0
  3625  033D  1D20               	btfss	__DispSeg,2
  3626  033E  2B41               	goto	l2421
  3627  033F  0021               	movlb	1	; select bank1
  3628  0340  17BC               	bsf	(_DispBuf^(0+128)+28),7
  3629  0341                     l2421:	
  3630                           
  3631                           ;DK_LCD.c: 350: if(_DispSeg.u32Bits.Bit3){DispBuf[27]|=0x80;}
  3632  0341  0020               	movlb	0	; select bank0
  3633  0342  1DA0               	btfss	__DispSeg,3
  3634  0343  2B46               	goto	l2422
  3635  0344  0021               	movlb	1	; select bank1
  3636  0345  17BB               	bsf	(_DispBuf^(0+128)+27),7
  3637  0346                     l2422:	
  3638                           
  3639                           ;DK_LCD.c: 351: if(_DispSeg.u32Bits.Bit4){DispBuf[26]|=0x80;}
  3640  0346  0020               	movlb	0	; select bank0
  3641  0347  1E20               	btfss	__DispSeg,4
  3642  0348  2B4B               	goto	l2423
  3643  0349  0021               	movlb	1	; select bank1
  3644  034A  17BA               	bsf	(_DispBuf^(0+128)+26),7
  3645  034B                     l2423:	
  3646                           
  3647                           ;DK_LCD.c: 352: if(_DispSeg.u32Bits.Bit5){DispBuf[25]|=0x80;}
  3648  034B  0020               	movlb	0	; select bank0
  3649  034C  1EA0               	btfss	__DispSeg,5
  3650  034D  2B50               	goto	l2424
  3651  034E  0021               	movlb	1	; select bank1
  3652  034F  17B9               	bsf	(_DispBuf^(0+128)+25),7
  3653  0350                     l2424:	
  3654                           
  3655                           ;DK_LCD.c: 353: if(_DispSeg.u32Bits.Bit6){DispBuf[24]|=0x80;}
  3656  0350  0020               	movlb	0	; select bank0
  3657  0351  1F20               	btfss	__DispSeg,6
  3658  0352  2B55               	goto	l2425
  3659  0353  0021               	movlb	1	; select bank1
  3660  0354  17B8               	bsf	(_DispBuf^(0+128)+24),7
  3661  0355                     l2425:	
  3662                           
  3663                           ;DK_LCD.c: 354: if(_DispSeg.u32Bits.Bit7){DispBuf[20]|=0x80;}
  3664  0355  0020               	movlb	0	; select bank0
  3665  0356  1FA0               	btfss	__DispSeg,7
  3666  0357  2B5A               	goto	l2426
  3667  0358  0021               	movlb	1	; select bank1
  3668  0359  17B4               	bsf	(_DispBuf^(0+128)+20),7
  3669  035A                     l2426:	
  3670                           
  3671                           ;DK_LCD.c: 355: if(_DispSeg.u32Bits.Bit8){DispBuf[19]|=0x80;} else{DispBuf[19]&=0x7F;}
  3672  035A  0020               	movlb	0	; select bank0
  3673  035B  1C21               	btfss	__DispSeg+1,0
  3674  035C  2B60               	goto	l2427
  3675  035D  0021               	movlb	1	; select bank1
  3676  035E  17B3               	bsf	(_DispBuf^(0+128)+19),7
  3677  035F  2B62               	goto	l2428
  3678  0360                     l2427:	
  3679  0360  0021               	movlb	1	; select bank1
  3680  0361  13B3               	bcf	(_DispBuf^(0+128)+19),7
  3681  0362                     l2428:	
  3682                           
  3683                           ;DK_LCD.c: 356: if(_DispSeg.u32Bits.Bit9){DispBuf[19]|=0x01;} else{DispBuf[19]&=0xFE;}
  3684  0362  0020               	movlb	0	; select bank0
  3685  0363  1CA1               	btfss	__DispSeg+1,1
  3686  0364  2B68               	goto	l2429
  3687  0365  0021               	movlb	1	; select bank1
  3688  0366  1433               	bsf	(_DispBuf^(0+128)+19),0
  3689  0367  2B6A               	goto	l2430
  3690  0368                     l2429:	
  3691  0368  0021               	movlb	1	; select bank1
  3692  0369  1033               	bcf	(_DispBuf^(0+128)+19),0
  3693  036A                     l2430:	
  3694                           
  3695                           ;DK_LCD.c: 357: if(_DispSeg.u32Bits.Bit10){DispBuf[16]|=0x80;}
  3696  036A  0020               	movlb	0	; select bank0
  3697  036B  1D21               	btfss	__DispSeg+1,2
  3698  036C  2B6F               	goto	l2431
  3699  036D  0021               	movlb	1	; select bank1
  3700  036E  17B0               	bsf	(_DispBuf^(0+128)+16),7
  3701  036F                     l2431:	
  3702                           
  3703                           ;DK_LCD.c: 358: if(_DispSeg.u32Bits.Bit11){DispBuf[23]|=0x80;}
  3704  036F  0020               	movlb	0	; select bank0
  3705  0370  1DA1               	btfss	__DispSeg+1,3
  3706  0371  2B74               	goto	l2432
  3707  0372  0021               	movlb	1	; select bank1
  3708  0373  17B7               	bsf	(_DispBuf^(0+128)+23),7
  3709  0374                     l2432:	
  3710                           
  3711                           ;DK_LCD.c: 359: if(_DispSeg.u32Bits.Bit12){DispBuf[22]|=0x80;}
  3712  0374  0020               	movlb	0	; select bank0
  3713  0375  1E21               	btfss	__DispSeg+1,4
  3714  0376  2B79               	goto	l2433
  3715  0377  0021               	movlb	1	; select bank1
  3716  0378  17B6               	bsf	(_DispBuf^(0+128)+22),7
  3717  0379                     l2433:	
  3718                           
  3719                           ;DK_LCD.c: 360: if(_DispSeg.u32Bits.Bit13){DispBuf[21]|=0x80;}
  3720  0379  0020               	movlb	0	; select bank0
  3721  037A  1EA1               	btfss	__DispSeg+1,5
  3722  037B  2B7E               	goto	l2434
  3723  037C  0021               	movlb	1	; select bank1
  3724  037D  17B5               	bsf	(_DispBuf^(0+128)+21),7
  3725  037E                     l2434:	
  3726                           
  3727                           ;DK_LCD.c: 361: if(_DispSeg.u32Bits.Bit14){DispBuf[19]|=0x02;} else{DispBuf[19]&=0xFD;}
  3728  037E  0020               	movlb	0	; select bank0
  3729  037F  1F21               	btfss	__DispSeg+1,6
  3730  0380  2B84               	goto	l2435
  3731  0381  0021               	movlb	1	; select bank1
  3732  0382  14B3               	bsf	(_DispBuf^(0+128)+19),1
  3733  0383  2B86               	goto	l2436
  3734  0384                     l2435:	
  3735  0384  0021               	movlb	1	; select bank1
  3736  0385  10B3               	bcf	(_DispBuf^(0+128)+19),1
  3737  0386                     l2436:	
  3738                           
  3739                           ;DK_LCD.c: 362: if(_DispSeg.u32Bits.Bit15){DispBuf[13]|=0x80;}
  3740  0386  0020               	movlb	0	; select bank0
  3741  0387  1FA1               	btfss	__DispSeg+1,7
  3742  0388  2B8B               	goto	l2437
  3743  0389  0021               	movlb	1	; select bank1
  3744  038A  17AD               	bsf	(_DispBuf^(0+128)+13),7
  3745  038B                     l2437:	
  3746                           
  3747                           ;DK_LCD.c: 363: if(_DispSeg.u32Bits.Bit16){DispBuf[4]|=0x80;}
  3748  038B  0020               	movlb	0	; select bank0
  3749  038C  1C22               	btfss	__DispSeg+2,0
  3750  038D  2B90               	goto	l2438
  3751  038E  0021               	movlb	1	; select bank1
  3752  038F  17A4               	bsf	(_DispBuf^(0+128)+4),7
  3753  0390                     l2438:	
  3754                           
  3755                           ;DK_LCD.c: 364: if(_DispSeg.u32Bits.Bit17){DispBuf[7]|=0x80;}
  3756  0390  0020               	movlb	0	; select bank0
  3757  0391  1CA2               	btfss	__DispSeg+2,1
  3758  0392  2B95               	goto	l2439
  3759  0393  0021               	movlb	1	; select bank1
  3760  0394  17A7               	bsf	(_DispBuf^(0+128)+7),7
  3761  0395                     l2439:	
  3762                           
  3763                           ;DK_LCD.c: 365: if(_DispSeg.u32Bits.Bit18){DispBuf[10]|=0x80;}
  3764  0395  0020               	movlb	0	; select bank0
  3765  0396  1D22               	btfss	__DispSeg+2,2
  3766  0397  2B9A               	goto	l2440
  3767  0398  0021               	movlb	1	; select bank1
  3768  0399  17AA               	bsf	(_DispBuf^(0+128)+10),7
  3769  039A                     l2440:	
  3770                           
  3771                           ;DK_LCD.c: 366: if(_DispSeg.u32Bits.Bit19){DispBuf[12]|=0x80;}
  3772  039A  0020               	movlb	0	; select bank0
  3773  039B  1DA2               	btfss	__DispSeg+2,3
  3774  039C  2B9F               	goto	l2441
  3775  039D  0021               	movlb	1	; select bank1
  3776  039E  17AC               	bsf	(_DispBuf^(0+128)+12),7
  3777  039F                     l2441:	
  3778                           
  3779                           ;DK_LCD.c: 367: if(_DispSeg.u32Bits.Bit20){DispBuf[1]|=0x80;}
  3780  039F  0020               	movlb	0	; select bank0
  3781  03A0  1E22               	btfss	__DispSeg+2,4
  3782  03A1  2BA4               	goto	l2442
  3783  03A2  0021               	movlb	1	; select bank1
  3784  03A3  17A1               	bsf	(_DispBuf^(0+128)+1),7
  3785  03A4                     l2442:	
  3786                           
  3787                           ;DK_LCD.c: 368: if(_DispSeg.u32Bits.Bit21){DispBuf[18]|=0x80;}
  3788  03A4  0020               	movlb	0	; select bank0
  3789  03A5  1EA2               	btfss	__DispSeg+2,5
  3790  03A6  2BA9               	goto	l2443
  3791  03A7  0021               	movlb	1	; select bank1
  3792  03A8  17B2               	bsf	(_DispBuf^(0+128)+18),7
  3793  03A9                     l2443:	
  3794                           
  3795                           ;DK_LCD.c: 369: if(_DispSeg.u32Bits.Bit22){DispBuf[2]|=0x80;}
  3796  03A9  0020               	movlb	0	; select bank0
  3797  03AA  1F22               	btfss	__DispSeg+2,6
  3798  03AB  2BAE               	goto	l2444
  3799  03AC  0021               	movlb	1	; select bank1
  3800  03AD  17A2               	bsf	(_DispBuf^(0+128)+2),7
  3801  03AE                     l2444:	
  3802                           
  3803                           ;DK_LCD.c: 370: if(_DispSeg.u32Bits.Bit23){DispBuf[11]|=0x80;}
  3804  03AE  0020               	movlb	0	; select bank0
  3805  03AF  1FA2               	btfss	__DispSeg+2,7
  3806  03B0  2BB3               	goto	l2445
  3807  03B1  0021               	movlb	1	; select bank1
  3808  03B2  17AB               	bsf	(_DispBuf^(0+128)+11),7
  3809  03B3                     l2445:	
  3810                           
  3811                           ;DK_LCD.c: 371: if(_DispSeg.u32Bits.Bit24){DispBuf[6]|=0x80;}
  3812  03B3  0020               	movlb	0	; select bank0
  3813  03B4  1C23               	btfss	__DispSeg+3,0
  3814  03B5  2BB8               	goto	l2446
  3815  03B6  0021               	movlb	1	; select bank1
  3816  03B7  17A6               	bsf	(_DispBuf^(0+128)+6),7
  3817  03B8                     l2446:	
  3818                           
  3819                           ;DK_LCD.c: 372: if(_DispSeg.u32Bits.Bit25){DispBuf[9]|=0x80;}
  3820  03B8  0020               	movlb	0	; select bank0
  3821  03B9  1CA3               	btfss	__DispSeg+3,1
  3822  03BA  2BBD               	goto	l2447
  3823  03BB  0021               	movlb	1	; select bank1
  3824  03BC  17A9               	bsf	(_DispBuf^(0+128)+9),7
  3825  03BD                     l2447:	
  3826                           
  3827                           ;DK_LCD.c: 373: if(_DispSeg.u32Bits.Bit26){DispBuf[15]|=0x80;}
  3828  03BD  0020               	movlb	0	; select bank0
  3829  03BE  1D23               	btfss	__DispSeg+3,2
  3830  03BF  0008               	return
  3831  03C0  0021               	movlb	1	; select bank1
  3832  03C1  17AF               	bsf	(_DispBuf^(0+128)+15),7
  3833  03C2  0008               	return
  3834  03C3                     __end_of_SendSegDataToDispBuf:	
  3835  03C3                     __ptext2166:	
  3836 ;; =============== function _ModemSelect ends ============
  3837                           
  3838                           
  3839 ;; *************** function _RFParameterSelect *****************
  3840 ;; Defined at:
  3841 ;;		line 561 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  KeyValue        1    wreg     unsigned char 
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;  KeyValue        1    4[BANK0 ] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;		None               void
  3848 ;; Registers used:
  3849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 1F/0
  3852 ;;		On exit  : 1C/0
  3853 ;;		Unchanged: FFE00/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3857 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3858 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3859 ;;Total ram usage:        5 bytes
  3860 ;; Hardware stack levels used:    1
  3861 ;; Hardware stack levels required when called:    5
  3862 ;; This function calls:
  3863 ;;		_BeepOn
  3864 ;;		_SaveRFParameterToFlash
  3865 ;; This function is called by:
  3866 ;;		_MenuConfig
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869  03C3                     _RFParameterSelect:	
  3870                           
  3871                           ; Regs used in _RFParameterSelect: [wreg-status,0+pclath+cstack]
  3872                           ;RFParameterSelect@KeyValue stored from wreg
  3873  03C3  00E4               	movwf	RFParameterSelect@KeyValue
  3874                           
  3875                           ;DK_PIC16_App.c: 562: if(KeyValue==0x01)
  3876  03C4  0B64               	decfsz	RFParameterSelect@KeyValue,w
  3877  03C5  2BF4               	goto	l16113
  3878                           
  3879                           ;DK_PIC16_App.c: 563: {
  3880                           ;DK_PIC16_App.c: 564: BeepOn((u16*)MusicTab_KeySet);
  3881  03C6  3026               	movlw	low (_MusicTab_KeySet| (0+32768))
  3882  03C7  00F2               	movwf	?_BeepOn
  3883  03C8  3099               	movlw	high (_MusicTab_KeySet| (0+32768))
  3884  03C9  00F3               	movwf	?_BeepOn+1
  3885  03CA  2621  3180         	fcall	_BeepOn
  3886                           
  3887                           ;DK_PIC16_App.c: 566: gb_SysMode_Set++;
  3888  03CC  0ADA               	incf	_gb_SysMode_Set,f
  3889                           
  3890                           ;DK_PIC16_App.c: 567: if(RF_ModemBuf[gb_Modem_Addr]==0x12)
  3891  03CD  082D               	movf	_RF_ModemBuf+1,w
  3892  03CE  00E1               	movwf	??_RFParameterSelect+1
  3893  03CF  082C               	movf	_RF_ModemBuf,w
  3894  03D0  00E0               	movwf	??_RFParameterSelect
  3895  03D1  087A               	movf	_gb_Modem_Addr,w
  3896  03D2  2756  3180         	fcall	PL17	;call to abstracted procedure
  3897  03D4  0800               	movf	0,w	;code access
  3898  03D5  3A12               	xorlw	18
  3899  03D6  1D03               	skipz
  3900  03D7  2BE5               	goto	l16103
  3901                           
  3902                           ;DK_PIC16_App.c: 568: {
  3903                           ;DK_PIC16_App.c: 569: if(gb_SysMode_Set==0x54){gb_SysMode_Set=0x55;}
  3904  03D8  085A               	movf	_gb_SysMode_Set,w
  3905  03D9  3A54               	xorlw	84
  3906  03DA  1D03               	skipz
  3907  03DB  2BDE               	goto	l3935
  3908  03DC  3055               	movlw	85
  3909  03DD  00DA               	movwf	_gb_SysMode_Set
  3910  03DE                     l3935:	
  3911                           
  3912                           ;DK_PIC16_App.c: 570: if(gb_SysMode_Set>0x55){gb_SysMode_Set=0x51;}
  3913  03DE  3056               	movlw	86
  3914  03DF  025A               	subwf	_gb_SysMode_Set,w
  3915  03E0  1C03               	skipc
  3916  03E1  0008               	return
  3917  03E2  3051               	movlw	81
  3918  03E3  00DA               	movwf	_gb_SysMode_Set
  3919  03E4  0008               	return
  3920  03E5                     l16103:	
  3921                           
  3922                           ;DK_PIC16_App.c: 572: else
  3923                           ;DK_PIC16_App.c: 573: {
  3924                           ;DK_PIC16_App.c: 574: if(gb_SysMode_Set>0x53){gb_SysMode_Set=0x51;}
  3925  03E5  3054               	movlw	84
  3926  03E6  025A               	subwf	_gb_SysMode_Set,w
  3927  03E7  1C03               	skipc
  3928  03E8  2BEB               	goto	l16107
  3929  03E9  3051               	movlw	81
  3930  03EA  00DA               	movwf	_gb_SysMode_Set
  3931  03EB                     l16107:	
  3932                           
  3933                           ;DK_PIC16_App.c: 575: if(RF_FdevBuf[0]==0 && gb_SysMode_Set==0x52){gb_SysMode_Set++;}
  3934  03EB  2748  3180         	fcall	PL14	;call to abstracted procedure
  3935  03ED  1D03               	skipz
  3936  03EE  0008               	return
  3937  03EF  085A               	movf	_gb_SysMode_Set,w
  3938  03F0  3A52               	xorlw	82
  3939  03F1  1903               	btfsc	3,2
  3940  03F2  0ADA               	incf	_gb_SysMode_Set,f
  3941  03F3  0008               	return
  3942  03F4                     l16113:	
  3943                           
  3944                           ;DK_PIC16_App.c: 578: else if(KeyValue==0x04)
  3945  03F4  0864               	movf	RFParameterSelect@KeyValue,w
  3946  03F5  3A04               	xorlw	4
  3947  03F6  1D03               	skipz
  3948  03F7  2C3F               	goto	l16157
  3949                           
  3950                           ;DK_PIC16_App.c: 579: {
  3951                           ;DK_PIC16_App.c: 580: BeepOn((u16*)MusicTab_KeyMove);
  3952  03F8  3042               	movlw	low (_MusicTab_KeyMove| (0+32768))
  3953  03F9  00F2               	movwf	?_BeepOn
  3954  03FA  3099               	movlw	high (_MusicTab_KeyMove| (0+32768))
  3955  03FB  00F3               	movwf	?_BeepOn+1
  3956  03FC  2621  3180         	fcall	_BeepOn
  3957                           
  3958                           ;DK_PIC16_App.c: 582: switch(gb_SysMode_Set)
  3959  03FE  2C31               	goto	l16155
  3960  03FF                     l16117:	
  3961                           
  3962                           ;DK_PIC16_App.c: 585: if(gb_FreqBuf_Addr){gb_FreqBuf_Addr--;}
  3963  03FF  084F               	movf	_gb_FreqBuf_Addr,w
  3964  0400  1903               	btfsc	3,2
  3965  0401  2C04               	goto	l16121
  3966  0402                     l16119:	
  3967  0402  03CF               	decf	_gb_FreqBuf_Addr,f
  3968  0403  0008               	return
  3969  0404                     l16121:	
  3970                           
  3971                           ;DK_PIC16_App.c: 589: {
  3972                           ;DK_PIC16_App.c: 590: gb_FreqBuf_Addr++;
  3973                           
  3974                           ;DK_PIC16_App.c: 591: if(RF_FreqBuf[gb_FreqBuf_Addr]==0)
  3975  0404  2789  3180         	fcall	PL26	;call to abstracted procedure
  3976  0406  2756  3180         	fcall	PL17	;call to abstracted procedure
  3977  0408  27AC  3180         	fcall	PL49	;call to abstracted procedure
  3978  040A  1903               	btfsc	3,2
  3979  040B  2C02               	goto	l16119
  3980  040C  2C04               	goto	l16121
  3981  040D                     l16127:	
  3982                           
  3983                           ;DK_PIC16_App.c: 600: gb_PowerBuf_Addr++;
  3984                           
  3985                           ;DK_PIC16_App.c: 601: if(RF_PowerBuf[gb_PowerBuf_Addr]==0){gb_PowerBuf_Addr=0;}
  3986  040D  2790  3180         	fcall	PL32	;call to abstracted procedure
  3987  040F  2756               	fcall	PL17	;call to abstracted procedure
  3988  0410  0800               	movf	0,w	;code access
  3989  0411  3800               	iorlw	0
  3990  0412  1903               	btfsc	3,2
  3991  0413  01D6               	clrf	_gb_PowerBuf_Addr
  3992  0414  0008               	return
  3993  0415                     l16133:	
  3994                           
  3995                           ;DK_PIC16_App.c: 604: if(gb_RateBuf_Addr){gb_RateBuf_Addr--;}
  3996  0415  0857               	movf	_gb_RateBuf_Addr,w
  3997  0416  1903               	btfsc	3,2
  3998  0417  2C1A               	goto	l16137
  3999  0418                     l16135:	
  4000  0418  03D7               	decf	_gb_RateBuf_Addr,f
  4001  0419  0008               	return
  4002  041A                     l16137:	
  4003                           
  4004                           ;DK_PIC16_App.c: 608: {
  4005                           ;DK_PIC16_App.c: 609: gb_RateBuf_Addr++;
  4006                           
  4007                           ;DK_PIC16_App.c: 610: if(RF_RateBuf[gb_RateBuf_Addr]==0)
  4008  041A  2797  3180         	fcall	PL34	;call to abstracted procedure
  4009  041C  2756  3180         	fcall	PL17	;call to abstracted procedure
  4010  041E  0800               	movf	0,w	;code access
  4011  041F  3800               	iorlw	0
  4012  0420  1903               	btfsc	3,2
  4013  0421  2C18               	goto	l16135
  4014  0422  2C1A               	goto	l16137
  4015  0423                     l16143:	
  4016                           
  4017                           ;DK_PIC16_App.c: 619: if(gb_BandBuf_Addr){gb_BandBuf_Addr--;}
  4018  0423  0844               	movf	_gb_BandBuf_Addr,w
  4019  0424  1903               	btfsc	3,2
  4020  0425  2C28               	goto	l16147
  4021  0426                     l16145:	
  4022  0426  03C4               	decf	_gb_BandBuf_Addr,f
  4023  0427  0008               	return
  4024  0428                     l16147:	
  4025                           
  4026                           ;DK_PIC16_App.c: 623: {
  4027                           ;DK_PIC16_App.c: 624: gb_BandBuf_Addr++;
  4028                           
  4029                           ;DK_PIC16_App.c: 625: if(RF_LoRaBandWidthBuf[gb_BandBuf_Addr]==0)
  4030  0428  2782  3180         	fcall	PL25	;call to abstracted procedure
  4031  042A  2756  3180         	fcall	PL17	;call to abstracted procedure
  4032  042C  27AC  3180         	fcall	PL49	;call to abstracted procedure
  4033  042E  1903               	btfsc	3,2
  4034  042F  2C26               	goto	l16145
  4035  0430  2C28               	goto	l16147
  4036  0431                     l16155:	
  4037  0431  085A               	movf	_gb_SysMode_Set,w
  4038                           
  4039                           ; Switch size 1, requested type "space"
  4040                           ; Number of cases is 4, Range of values is 81 to 85
  4041                           ; switch strategies available:
  4042                           ; Name         Instructions Cycles
  4043                           ; simple_byte           13     7 (average)
  4044                           ; direct_byte           19     9 (fixed)
  4045                           ; jumptable            263     9 (fixed)
  4046                           ;	Chosen strategy is simple_byte
  4047  0432  3A51               	xorlw	81	; case 81
  4048  0433  1903               	skipnz
  4049  0434  2BFF               	goto	l16117
  4050  0435  3A03               	xorlw	3	; case 82
  4051  0436  1903               	skipnz
  4052  0437  2C0D               	goto	l16127
  4053  0438  3A01               	xorlw	1	; case 83
  4054  0439  1903               	skipnz
  4055  043A  2C15               	goto	l16133
  4056  043B  3A06               	xorlw	6	; case 85
  4057  043C  1903               	skipnz
  4058  043D  2C23               	goto	l16143
  4059  043E  2C8B               	goto	l3986
  4060  043F                     l16157:	
  4061                           
  4062                           ;DK_PIC16_App.c: 635: else if(KeyValue==0x08)
  4063  043F  0864               	movf	RFParameterSelect@KeyValue,w
  4064  0440  3A08               	xorlw	8
  4065  0441  1D03               	skipz
  4066  0442  2C7E               	goto	l16193
  4067                           
  4068                           ;DK_PIC16_App.c: 636: {
  4069                           ;DK_PIC16_App.c: 637: BeepOn((u16*)MusicTab_KeyMove);
  4070  0443  3042               	movlw	low (_MusicTab_KeyMove| (0+32768))
  4071  0444  00F2               	movwf	?_BeepOn
  4072  0445  3099               	movlw	high (_MusicTab_KeyMove| (0+32768))
  4073  0446  00F3               	movwf	?_BeepOn+1
  4074  0447  2621  3180         	fcall	_BeepOn
  4075                           
  4076                           ;DK_PIC16_App.c: 639: switch(gb_SysMode_Set)
  4077  0449  2C70               	goto	l16191
  4078  044A                     l16161:	
  4079                           
  4080                           ;DK_PIC16_App.c: 642: gb_FreqBuf_Addr++;
  4081                           
  4082                           ;DK_PIC16_App.c: 643: if(RF_FreqBuf[gb_FreqBuf_Addr]==0){gb_FreqBuf_Addr=0;}
  4083  044A  2789  3180         	fcall	PL26	;call to abstracted procedure
  4084  044C  2756  3180         	fcall	PL17	;call to abstracted procedure
  4085  044E  27AC               	fcall	PL49	;call to abstracted procedure
  4086  044F  1903               	btfsc	3,2
  4087  0450  01CF               	clrf	_gb_FreqBuf_Addr
  4088  0451  0008               	return
  4089  0452                     l16167:	
  4090                           
  4091                           ;DK_PIC16_App.c: 646: if(gb_PowerBuf_Addr){gb_PowerBuf_Addr--;}
  4092  0452  0856               	movf	_gb_PowerBuf_Addr,w
  4093  0453  1903               	btfsc	3,2
  4094  0454  2C57               	goto	l16171
  4095  0455                     l16169:	
  4096  0455  03D6               	decf	_gb_PowerBuf_Addr,f
  4097  0456  0008               	return
  4098  0457                     l16171:	
  4099                           
  4100                           ;DK_PIC16_App.c: 650: {
  4101                           ;DK_PIC16_App.c: 651: gb_PowerBuf_Addr++;
  4102                           
  4103                           ;DK_PIC16_App.c: 652: if(RF_PowerBuf[gb_PowerBuf_Addr]==0)
  4104  0457  2790  3180         	fcall	PL32	;call to abstracted procedure
  4105  0459  2756  3180         	fcall	PL17	;call to abstracted procedure
  4106  045B  0800               	movf	0,w	;code access
  4107  045C  3800               	iorlw	0
  4108  045D  1903               	btfsc	3,2
  4109  045E  2C55               	goto	l16169
  4110  045F  2C57               	goto	l16171
  4111  0460                     l16177:	
  4112                           
  4113                           ;DK_PIC16_App.c: 661: gb_RateBuf_Addr++;
  4114                           
  4115                           ;DK_PIC16_App.c: 662: if(RF_RateBuf[gb_RateBuf_Addr]==0){gb_RateBuf_Addr=0;}
  4116  0460  2797  3180         	fcall	PL34	;call to abstracted procedure
  4117  0462  2756               	fcall	PL17	;call to abstracted procedure
  4118  0463  0800               	movf	0,w	;code access
  4119  0464  3800               	iorlw	0
  4120  0465  1903               	btfsc	3,2
  4121  0466  01D7               	clrf	_gb_RateBuf_Addr
  4122  0467  0008               	return
  4123  0468                     l16183:	
  4124                           
  4125                           ;DK_PIC16_App.c: 665: gb_BandBuf_Addr++;
  4126                           
  4127                           ;DK_PIC16_App.c: 666: if(RF_LoRaBandWidthBuf[gb_BandBuf_Addr]==0){gb_BandBuf_Addr=0;}
  4128  0468  2782  3180         	fcall	PL25	;call to abstracted procedure
  4129  046A  2756  3180         	fcall	PL17	;call to abstracted procedure
  4130  046C  27AC               	fcall	PL49	;call to abstracted procedure
  4131  046D  1903               	btfsc	3,2
  4132  046E  01C4               	clrf	_gb_BandBuf_Addr
  4133  046F  0008               	return
  4134  0470                     l16191:	
  4135  0470  085A               	movf	_gb_SysMode_Set,w
  4136                           
  4137                           ; Switch size 1, requested type "space"
  4138                           ; Number of cases is 4, Range of values is 81 to 85
  4139                           ; switch strategies available:
  4140                           ; Name         Instructions Cycles
  4141                           ; simple_byte           13     7 (average)
  4142                           ; direct_byte           19     9 (fixed)
  4143                           ; jumptable            263     9 (fixed)
  4144                           ;	Chosen strategy is simple_byte
  4145  0471  3A51               	xorlw	81	; case 81
  4146  0472  1903               	skipnz
  4147  0473  2C4A               	goto	l16161
  4148  0474  3A03               	xorlw	3	; case 82
  4149  0475  1903               	skipnz
  4150  0476  2C52               	goto	l16167
  4151  0477  3A01               	xorlw	1	; case 83
  4152  0478  1903               	skipnz
  4153  0479  2C60               	goto	l16177
  4154  047A  3A06               	xorlw	6	; case 85
  4155  047B  1903               	skipnz
  4156  047C  2C68               	goto	l16183
  4157  047D  2C8B               	goto	l3986
  4158  047E                     l16193:	
  4159                           
  4160                           ;DK_PIC16_App.c: 670: else if(KeyValue==0x02)
  4161  047E  0864               	movf	RFParameterSelect@KeyValue,w
  4162  047F  3A02               	xorlw	2
  4163  0480  1D03               	skipz
  4164  0481  0008               	return
  4165                           
  4166                           ;DK_PIC16_App.c: 671: {
  4167                           ;DK_PIC16_App.c: 672: BeepOn((u16*)MusicTab_KeyOK);
  4168  0482  301A               	movlw	low (_MusicTab_KeyOK| (0+32768))
  4169  0483  00F2               	movwf	?_BeepOn
  4170  0484  3099               	movlw	high (_MusicTab_KeyOK| (0+32768))
  4171  0485  00F3               	movwf	?_BeepOn+1
  4172  0486  2621  3180         	fcall	_BeepOn
  4173                           
  4174                           ;DK_PIC16_App.c: 674: gb_SystemMode=0x24;
  4175  0488  3024               	movlw	36
  4176  0489  00FB               	movwf	_gb_SystemMode
  4177                           
  4178                           ;DK_PIC16_App.c: 675: SaveRFParameterToFlash();
  4179  048A  265F               	fcall	_SaveRFParameterToFlash
  4180  048B                     l3986:	
  4181  048B  0008               	return
  4182  048C                     __end_of_RFParameterSelect:	
  4183  048C                     __ptext2164:	
  4184 ;; =============== function _RFM98_LoRaEntryRx ends ============
  4185                           
  4186                           
  4187 ;; *************** function _WorkModeSelect *****************
  4188 ;; Defined at:
  4189 ;;		line 757 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  KeyValue        1    wreg     unsigned char 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  KeyValue        1    2[BANK0 ] unsigned char 
  4194 ;; Return value:  Size  Location     Type
  4195 ;;		None               void
  4196 ;; Registers used:
  4197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4198 ;; Tracked objects:
  4199 ;;		On entry : 1F/0
  4200 ;;		On exit  : 1C/0
  4201 ;;		Unchanged: FFE00/0
  4202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4205 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4206 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4207 ;;Total ram usage:        3 bytes
  4208 ;; Hardware stack levels used:    1
  4209 ;; Hardware stack levels required when called:    5
  4210 ;; This function calls:
  4211 ;;		_Clr_LCD
  4212 ;;		_BeepOn
  4213 ;;		_SaveRFParameterToFlash
  4214 ;; This function is called by:
  4215 ;;		_MenuConfig
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218  048C                     _WorkModeSelect:	
  4219                           
  4220                           ; Regs used in _WorkModeSelect: [wreg-status,0+pclath+cstack]
  4221                           ;WorkModeSelect@KeyValue stored from wreg
  4222  048C  00E2               	movwf	WorkModeSelect@KeyValue
  4223                           
  4224                           ;DK_PIC16_App.c: 758: if(KeyValue==0x01)
  4225  048D  0B62               	decfsz	WorkModeSelect@KeyValue,w
  4226  048E  2CBA               	goto	l16283
  4227  048F  3002               	movlw	2
  4228                           
  4229                           ;DK_PIC16_App.c: 759: {
  4230                           ;DK_PIC16_App.c: 760: gb_ErrorFlag=0;
  4231  0490  01CC               	clrf	_gb_ErrorFlag
  4232                           
  4233                           ;DK_PIC16_App.c: 761: gb_ParameterChangeFlag=2;
  4234  0491  00D5               	movwf	_gb_ParameterChangeFlag
  4235                           
  4236                           ;DK_PIC16_App.c: 762: gb_ModuleWorkMode=3;
  4237  0492  3003               	movlw	3
  4238  0493  00D4               	movwf	_gb_ModuleWorkMode
  4239                           
  4240                           ;DK_PIC16_App.c: 764: if(gb_SystemMode!=0x24)
  4241  0494  087B               	movf	_gb_SystemMode,w
  4242  0495  3A24               	xorlw	36
  4243  0496  1903               	skipnz
  4244  0497  2C9B               	goto	l16269
  4245                           
  4246                           ;DK_PIC16_App.c: 765: {
  4247                           ;DK_PIC16_App.c: 766: gb_SystemMode=0x24;
  4248  0498  3024               	movlw	36
  4249  0499  00FB               	movwf	_gb_SystemMode
  4250                           
  4251                           ;DK_PIC16_App.c: 767: }
  4252  049A  2CAC               	goto	l16277
  4253  049B                     l16269:	
  4254                           
  4255                           ;DK_PIC16_App.c: 768: else
  4256                           ;DK_PIC16_App.c: 769: {
  4257                           ;DK_PIC16_App.c: 770: if(RF_ModemBuf[1]!=0)
  4258  049B  27A6  3180         	fcall	PL37	;call to abstracted procedure
  4259  049D  279E  3180         	fcall	PL36	;call to abstracted procedure
  4260  049F  1903               	skipnz
  4261  04A0  2CA6               	goto	l16275
  4262                           
  4263                           ;DK_PIC16_App.c: 771: {
  4264                           ;DK_PIC16_App.c: 772: gb_SystemMode=0x04;
  4265  04A1  3004               	movlw	4
  4266  04A2  00FB               	movwf	_gb_SystemMode
  4267                           
  4268                           ;DK_PIC16_App.c: 773: Clr_LCD();
  4269  04A3  22C3  3180         	fcall	_Clr_LCD
  4270                           
  4271                           ;DK_PIC16_App.c: 774: }
  4272  04A5  2CAC               	goto	l16277
  4273  04A6                     l16275:	
  4274                           
  4275                           ;DK_PIC16_App.c: 775: else
  4276                           ;DK_PIC16_App.c: 776: {
  4277                           ;DK_PIC16_App.c: 777: BeepOn((u16*)MusicTab_KeyErr);
  4278  04A6  303A               	movlw	low (_MusicTab_KeyErr| (0+32768))
  4279  04A7  00F2               	movwf	?_BeepOn
  4280  04A8  3099               	movlw	high (_MusicTab_KeyErr| (0+32768))
  4281  04A9  00F3               	movwf	?_BeepOn+1
  4282  04AA  2621  3180         	fcall	_BeepOn
  4283  04AC                     l16277:	
  4284                           
  4285                           ;DK_PIC16_App.c: 778: }
  4286                           ;DK_PIC16_App.c: 779: }
  4287                           ;DK_PIC16_App.c: 780: if(RF_ModemBuf[1]!=0)
  4288  04AC  0020               	movlb	0	; select bank0
  4289  04AD  27A6  3180         	fcall	PL37	;call to abstracted procedure
  4290  04AF  279E  3180         	fcall	PL36	;call to abstracted procedure
  4291  04B1  1903               	skipnz
  4292  04B2  0008               	return
  4293                           
  4294                           ;DK_PIC16_App.c: 781: {
  4295                           ;DK_PIC16_App.c: 782: BeepOn((u16*)MusicTab_KeySet);
  4296  04B3  3026               	movlw	low (_MusicTab_KeySet| (0+32768))
  4297  04B4  00F2               	movwf	?_BeepOn
  4298  04B5  3099               	movlw	high (_MusicTab_KeySet| (0+32768))
  4299  04B6  00F3               	movwf	?_BeepOn+1
  4300  04B7  2621  3180         	fcall	_BeepOn
  4301  04B9                     l16281:	
  4302                           
  4303                           ;DK_PIC16_App.c: 783: SaveRFParameterToFlash();
  4304  04B9  2E5F               	ljmp	l15531
  4305  04BA                     l16283:	
  4306                           
  4307                           ;DK_PIC16_App.c: 786: else if(KeyValue==0x04 && gb_ParameterChangeFlag==2)
  4308  04BA  0862               	movf	WorkModeSelect@KeyValue,w
  4309  04BB  3A04               	xorlw	4
  4310  04BC  1D03               	skipz
  4311  04BD  2D49               	goto	l16367
  4312  04BE  0855               	movf	_gb_ParameterChangeFlag,w
  4313  04BF  3A02               	xorlw	2
  4314  04C0  1D03               	skipz
  4315  04C1  2D49               	goto	l16367
  4316                           
  4317                           ;DK_PIC16_App.c: 787: {
  4318                           ;DK_PIC16_App.c: 788: BeepOn((u16*)MusicTab_KeyMove);
  4319  04C2  3042               	movlw	low (_MusicTab_KeyMove| (0+32768))
  4320  04C3  00F2               	movwf	?_BeepOn
  4321  04C4  3099               	movlw	high (_MusicTab_KeyMove| (0+32768))
  4322  04C5  00F3               	movwf	?_BeepOn+1
  4323  04C6  2621  3180         	fcall	_BeepOn
  4324                           
  4325                           ;DK_PIC16_App.c: 790: switch(RF_ModemBuf[gb_Modem_Addr])
  4326  04C8  2D3D               	goto	l16365
  4327  04C9                     l16289:	
  4328                           
  4329                           ;DK_PIC16_App.c: 793: if(gb_SystemMode==0x21){gb_SystemMode=0x26+1;}
  4330  04C9  087B               	movf	_gb_SystemMode,w
  4331  04CA  3A21               	xorlw	33
  4332  04CB  1D03               	skipz
  4333  04CC  2CCF               	goto	l16293
  4334  04CD  3027               	movlw	39
  4335  04CE  00FB               	movwf	_gb_SystemMode
  4336  04CF                     l16293:	
  4337                           
  4338                           ;DK_PIC16_App.c: 794: gb_SystemMode--;
  4339  04CF  03FB               	decf	_gb_SystemMode,f
  4340                           
  4341                           ;DK_PIC16_App.c: 795: if(RF_FdevBuf[0]==0 && gb_SystemMode==0x21){gb_SystemMode=0x26;}
  4342  04D0  2748  3180         	fcall	PL14	;call to abstracted procedure
  4343  04D2  1D03               	skipz
  4344  04D3  2CDA               	goto	l16301
  4345  04D4  087B               	movf	_gb_SystemMode,w
  4346  04D5  3A21               	xorlw	33
  4347  04D6  1D03               	skipz
  4348  04D7  2CDA               	goto	l16301
  4349  04D8  3026               	movlw	38
  4350  04D9  00FB               	movwf	_gb_SystemMode
  4351  04DA                     l16301:	
  4352                           
  4353                           ;DK_PIC16_App.c: 796: if(RF_FdevBuf[0]==0 && gb_SystemMode==0x25){gb_SystemMode=0x24;}
  4354  04DA  2748  3180         	fcall	PL14	;call to abstracted procedure
  4355  04DC  1D03               	skipz
  4356  04DD  2CE4               	goto	l16307
  4357  04DE  087B               	movf	_gb_SystemMode,w
  4358  04DF  3A25               	xorlw	37
  4359  04E0  1D03               	skipz
  4360  04E1  2CE4               	goto	l16307
  4361  04E2  3024               	movlw	36
  4362  04E3  00FB               	movwf	_gb_SystemMode
  4363  04E4                     l16307:	
  4364                           
  4365                           ;DK_PIC16_App.c: 797: if(RF_BandBuf[0]==0 && gb_SystemMode==0x22){gb_SystemMode=0x21;}
  4366  04E4  274F  3180         	fcall	PL15	;call to abstracted procedure
  4367  04E6  1D03               	skipz
  4368  04E7  2CEE               	goto	l16313
  4369  04E8  087B               	movf	_gb_SystemMode,w
  4370  04E9  3A22               	xorlw	34
  4371  04EA  1D03               	skipz
  4372  04EB  2CEE               	goto	l16313
  4373  04EC  3021               	movlw	33
  4374  04ED  00FB               	movwf	_gb_SystemMode
  4375  04EE                     l16313:	
  4376                           
  4377                           ;DK_PIC16_App.c: 798: if(RF_BandBuf[0]==0 && gb_SystemMode==0x26){gb_SystemMode=0x25;}
  4378  04EE  274F  3180         	fcall	PL15	;call to abstracted procedure
  4379  04F0  1D03               	skipz
  4380  04F1  0008               	return
  4381  04F2  087B               	movf	_gb_SystemMode,w
  4382  04F3  3A26               	xorlw	38
  4383  04F4  1D03               	skipz
  4384  04F5  0008               	return
  4385  04F6  3025               	movlw	37
  4386  04F7  00FB               	movwf	_gb_SystemMode
  4387  04F8  0008               	return
  4388  04F9                     l16319:	
  4389                           
  4390                           ;DK_PIC16_App.c: 801: if(gb_SystemMode==0x21){gb_SystemMode=0x29+1;}
  4391  04F9  087B               	movf	_gb_SystemMode,w
  4392  04FA  3A21               	xorlw	33
  4393  04FB  1D03               	skipz
  4394  04FC  2CFF               	goto	l16323
  4395  04FD  302A               	movlw	42
  4396  04FE  00FB               	movwf	_gb_SystemMode
  4397  04FF                     l16323:	
  4398                           
  4399                           ;DK_PIC16_App.c: 802: gb_SystemMode--;
  4400  04FF  03FB               	decf	_gb_SystemMode,f
  4401                           
  4402                           ;DK_PIC16_App.c: 803: if(gb_SystemMode==0x27){gb_SystemMode=0x24;}
  4403  0500  087B               	movf	_gb_SystemMode,w
  4404  0501  3A27               	xorlw	39
  4405  0502  1D03               	skipz
  4406  0503  2D06               	goto	l16329
  4407  0504  3024               	movlw	36
  4408  0505  00FB               	movwf	_gb_SystemMode
  4409  0506                     l16329:	
  4410                           
  4411                           ;DK_PIC16_App.c: 804: if(RF_FdevBuf[0]==0 && gb_SystemMode==0x21){gb_SystemMode=0x29;}
  4412  0506  2748  3180         	fcall	PL14	;call to abstracted procedure
  4413  0508  1D03               	skipz
  4414  0509  2D10               	goto	l16335
  4415  050A  087B               	movf	_gb_SystemMode,w
  4416  050B  3A21               	xorlw	33
  4417  050C  1D03               	skipz
  4418  050D  2D10               	goto	l16335
  4419  050E  3029               	movlw	41
  4420  050F  00FB               	movwf	_gb_SystemMode
  4421  0510                     l16335:	
  4422                           
  4423                           ;DK_PIC16_App.c: 805: if(RF_FdevBuf[0]==0 && gb_SystemMode==0x28){gb_SystemMode=0x24;}
  4424  0510  2748  3180         	fcall	PL14	;call to abstracted procedure
  4425  0512  1D03               	skipz
  4426  0513  2D1A               	goto	l16341
  4427  0514  087B               	movf	_gb_SystemMode,w
  4428  0515  3A28               	xorlw	40
  4429  0516  1D03               	skipz
  4430  0517  2D1A               	goto	l16341
  4431  0518  3024               	movlw	36
  4432  0519  00FB               	movwf	_gb_SystemMode
  4433  051A                     l16341:	
  4434                           
  4435                           ;DK_PIC16_App.c: 806: if(RF_BandBuf[0]==0 && gb_SystemMode==0x22){gb_SystemMode=0x21;}
  4436  051A  274F  3180         	fcall	PL15	;call to abstracted procedure
  4437  051C  1D03               	skipz
  4438  051D  2D24               	goto	l16347
  4439  051E  087B               	movf	_gb_SystemMode,w
  4440  051F  3A22               	xorlw	34
  4441  0520  1D03               	skipz
  4442  0521  2D24               	goto	l16347
  4443  0522  3021               	movlw	33
  4444  0523  00FB               	movwf	_gb_SystemMode
  4445  0524                     l16347:	
  4446                           
  4447                           ;DK_PIC16_App.c: 807: if(RF_BandBuf[0]==0 && gb_SystemMode==0x29){gb_SystemMode=0x28;}
  4448  0524  274F  3180         	fcall	PL15	;call to abstracted procedure
  4449  0526  1D03               	skipz
  4450  0527  0008               	return
  4451  0528  087B               	movf	_gb_SystemMode,w
  4452  0529  3A29               	xorlw	41
  4453  052A  1D03               	skipz
  4454  052B  0008               	return
  4455  052C  3028               	movlw	40
  4456  052D  00FB               	movwf	_gb_SystemMode
  4457  052E  0008               	return
  4458  052F                     l16353:	
  4459                           
  4460                           ;DK_PIC16_App.c: 810: if(gb_SystemMode==0x21){gb_SystemMode=0x2C+1;}
  4461  052F  087B               	movf	_gb_SystemMode,w
  4462  0530  3A21               	xorlw	33
  4463  0531  1D03               	skipz
  4464  0532  2D35               	goto	l16357
  4465  0533  302D               	movlw	45
  4466  0534  00FB               	movwf	_gb_SystemMode
  4467  0535                     l16357:	
  4468                           
  4469                           ;DK_PIC16_App.c: 811: gb_SystemMode--;
  4470  0535  03FB               	decf	_gb_SystemMode,f
  4471                           
  4472                           ;DK_PIC16_App.c: 812: if(gb_SystemMode==0x2A){gb_SystemMode=0x24;}
  4473  0536  087B               	movf	_gb_SystemMode,w
  4474  0537  3A2A               	xorlw	42
  4475  0538  1D03               	skipz
  4476  0539  0008               	return
  4477  053A  3024               	movlw	36
  4478  053B  00FB               	movwf	_gb_SystemMode
  4479  053C  0008               	return
  4480  053D                     l16365:	
  4481  053D  2775  3180         	fcall	PL19	;call to abstracted procedure
  4482                           
  4483                           ; Switch size 1, requested type "space"
  4484                           ; Number of cases is 3, Range of values is 16 to 18
  4485                           ; switch strategies available:
  4486                           ; Name         Instructions Cycles
  4487                           ; simple_byte           10     6 (average)
  4488                           ; direct_byte           15     9 (fixed)
  4489                           ; jumptable            263     9 (fixed)
  4490                           ;	Chosen strategy is simple_byte
  4491  053F  3A10               	xorlw	16	; case 16
  4492  0540  1903               	skipnz
  4493  0541  2CC9               	goto	l16289
  4494  0542  3A01               	xorlw	1	; case 17
  4495  0543  1903               	skipnz
  4496  0544  2CF9               	goto	l16319
  4497  0545  3A03               	xorlw	3	; case 18
  4498  0546  1903               	skipnz
  4499  0547  2D2F               	goto	l16353
  4500  0548  2E20               	goto	l4071
  4501  0549                     l16367:	
  4502                           
  4503                           ;DK_PIC16_App.c: 820: else if(KeyValue==0x08 && gb_ParameterChangeFlag==2)
  4504  0549  0862               	movf	WorkModeSelect@KeyValue,w
  4505  054A  3A08               	xorlw	8
  4506  054B  1D03               	skipz
  4507  054C  2DD2               	goto	l16443
  4508  054D  0855               	movf	_gb_ParameterChangeFlag,w
  4509  054E  3A02               	xorlw	2
  4510  054F  1D03               	skipz
  4511  0550  2DD2               	goto	l16443
  4512                           
  4513                           ;DK_PIC16_App.c: 821: {
  4514                           ;DK_PIC16_App.c: 822: BeepOn((u16*)MusicTab_KeyMove);
  4515  0551  3042               	movlw	low (_MusicTab_KeyMove| (0+32768))
  4516  0552  00F2               	movwf	?_BeepOn
  4517  0553  3099               	movlw	high (_MusicTab_KeyMove| (0+32768))
  4518  0554  00F3               	movwf	?_BeepOn+1
  4519  0555  2621  3180         	fcall	_BeepOn
  4520                           
  4521                           ;DK_PIC16_App.c: 824: gb_SystemMode++;
  4522  0557  0AFB               	incf	_gb_SystemMode,f
  4523                           
  4524                           ;DK_PIC16_App.c: 825: switch(RF_ModemBuf[gb_Modem_Addr])
  4525  0558  2DC6               	goto	l16441
  4526  0559                     l16375:	
  4527                           
  4528                           ;DK_PIC16_App.c: 828: if(gb_SystemMode>0x26){gb_SystemMode=0x21;}
  4529  0559  3027               	movlw	39
  4530  055A  027B               	subwf	_gb_SystemMode,w
  4531  055B  1C03               	skipc
  4532  055C  2D5F               	goto	l16379
  4533  055D  3021               	movlw	33
  4534  055E  00FB               	movwf	_gb_SystemMode
  4535  055F                     l16379:	
  4536                           
  4537                           ;DK_PIC16_App.c: 829: if(RF_FdevBuf[0]==0 && gb_SystemMode==0x21){gb_SystemMode=0x22;}
  4538  055F  2748  3180         	fcall	PL14	;call to abstracted procedure
  4539  0561  1D03               	skipz
  4540  0562  2D69               	goto	l16385
  4541  0563  087B               	movf	_gb_SystemMode,w
  4542  0564  3A21               	xorlw	33
  4543  0565  1D03               	skipz
  4544  0566  2D69               	goto	l16385
  4545  0567  3022               	movlw	34
  4546  0568  00FB               	movwf	_gb_SystemMode
  4547  0569                     l16385:	
  4548                           
  4549                           ;DK_PIC16_App.c: 830: if(RF_FdevBuf[0]==0 && gb_SystemMode==0x25){gb_SystemMode=0x26;}
  4550  0569  2748  3180         	fcall	PL14	;call to abstracted procedure
  4551  056B  1D03               	skipz
  4552  056C  2D73               	goto	l16391
  4553  056D  087B               	movf	_gb_SystemMode,w
  4554  056E  3A25               	xorlw	37
  4555  056F  1D03               	skipz
  4556  0570  2D73               	goto	l16391
  4557  0571  3026               	movlw	38
  4558  0572  00FB               	movwf	_gb_SystemMode
  4559  0573                     l16391:	
  4560                           
  4561                           ;DK_PIC16_App.c: 831: if(RF_BandBuf[0]==0 && gb_SystemMode==0x22){gb_SystemMode=0x23;}
  4562  0573  274F  3180         	fcall	PL15	;call to abstracted procedure
  4563  0575  1D03               	skipz
  4564  0576  2D7D               	goto	l16397
  4565  0577  087B               	movf	_gb_SystemMode,w
  4566  0578  3A22               	xorlw	34
  4567  0579  1D03               	skipz
  4568  057A  2D7D               	goto	l16397
  4569  057B  3023               	movlw	35
  4570  057C  00FB               	movwf	_gb_SystemMode
  4571  057D                     l16397:	
  4572                           
  4573                           ;DK_PIC16_App.c: 832: if(RF_BandBuf[0]==0 && gb_SystemMode==0x26){gb_SystemMode=0x21;}
  4574  057D  274F  3180         	fcall	PL15	;call to abstracted procedure
  4575  057F  1D03               	skipz
  4576  0580  0008               	return
  4577  0581  087B               	movf	_gb_SystemMode,w
  4578  0582  3A26               	xorlw	38
  4579  0583                     L6:	
  4580  0583  1D03               	skipz
  4581  0584  0008               	return
  4582  0585  3021               	movlw	33
  4583  0586  00FB               	movwf	_gb_SystemMode
  4584  0587  0008               	return
  4585  0588                     l16403:	
  4586                           
  4587                           ;DK_PIC16_App.c: 835: if(gb_SystemMode>0x29){gb_SystemMode=0x21;}
  4588  0588  302A               	movlw	42
  4589  0589  027B               	subwf	_gb_SystemMode,w
  4590  058A  1C03               	skipc
  4591  058B  2D8E               	goto	l4049
  4592  058C  3021               	movlw	33
  4593  058D  00FB               	movwf	_gb_SystemMode
  4594  058E                     l4049:	
  4595                           
  4596                           ;DK_PIC16_App.c: 836: if(gb_SystemMode==0x25){gb_SystemMode=0x28;}
  4597  058E  087B               	movf	_gb_SystemMode,w
  4598  058F  3A25               	xorlw	37
  4599  0590  1D03               	skipz
  4600  0591  2D94               	goto	l16409
  4601  0592  3028               	movlw	40
  4602  0593  00FB               	movwf	_gb_SystemMode
  4603  0594                     l16409:	
  4604                           
  4605                           ;DK_PIC16_App.c: 837: if(RF_FdevBuf[0]==0 && gb_SystemMode==0x21){gb_SystemMode=0x22;}
  4606  0594  2748  3180         	fcall	PL14	;call to abstracted procedure
  4607  0596  1D03               	skipz
  4608  0597  2D9E               	goto	l16415
  4609  0598  087B               	movf	_gb_SystemMode,w
  4610  0599  3A21               	xorlw	33
  4611  059A  1D03               	skipz
  4612  059B  2D9E               	goto	l16415
  4613  059C  3022               	movlw	34
  4614  059D  00FB               	movwf	_gb_SystemMode
  4615  059E                     l16415:	
  4616                           
  4617                           ;DK_PIC16_App.c: 838: if(RF_FdevBuf[0]==0 && gb_SystemMode==0x28){gb_SystemMode=0x29;}
  4618  059E  2748  3180         	fcall	PL14	;call to abstracted procedure
  4619  05A0  1D03               	skipz
  4620  05A1  2DA8               	goto	l16421
  4621  05A2  087B               	movf	_gb_SystemMode,w
  4622  05A3  3A28               	xorlw	40
  4623  05A4  1D03               	skipz
  4624  05A5  2DA8               	goto	l16421
  4625  05A6  3029               	movlw	41
  4626  05A7  00FB               	movwf	_gb_SystemMode
  4627  05A8                     l16421:	
  4628                           
  4629                           ;DK_PIC16_App.c: 839: if(RF_BandBuf[0]==0 && gb_SystemMode==0x22){gb_SystemMode=0x23;}
  4630  05A8  274F  3180         	fcall	PL15	;call to abstracted procedure
  4631  05AA  1D03               	skipz
  4632  05AB  2DB2               	goto	l16427
  4633  05AC  087B               	movf	_gb_SystemMode,w
  4634  05AD  3A22               	xorlw	34
  4635  05AE  1D03               	skipz
  4636  05AF  2DB2               	goto	l16427
  4637  05B0  3023               	movlw	35
  4638  05B1  00FB               	movwf	_gb_SystemMode
  4639  05B2                     l16427:	
  4640                           
  4641                           ;DK_PIC16_App.c: 840: if(RF_BandBuf[0]==0 && gb_SystemMode==0x29){gb_SystemMode=0x21;}
  4642  05B2  274F  3180         	fcall	PL15	;call to abstracted procedure
  4643  05B4  1D03               	skipz
  4644  05B5  0008               	return
  4645  05B6  087B               	movf	_gb_SystemMode,w
  4646  05B7  3A29               	xorlw	41
  4647  05B8  2D83               	goto	L6
  4648  05B9                     l16433:	
  4649                           
  4650                           ;DK_PIC16_App.c: 843: if(gb_SystemMode>0x2C){gb_SystemMode=0x21;}
  4651  05B9  302D               	movlw	45
  4652  05BA  027B               	subwf	_gb_SystemMode,w
  4653  05BB  1C03               	skipc
  4654  05BC  2DBF               	goto	l4056
  4655  05BD  3021               	movlw	33
  4656  05BE  00FB               	movwf	_gb_SystemMode
  4657  05BF                     l4056:	
  4658                           
  4659                           ;DK_PIC16_App.c: 844: if(gb_SystemMode==0x25){gb_SystemMode=0x2B;}
  4660  05BF  087B               	movf	_gb_SystemMode,w
  4661  05C0  3A25               	xorlw	37
  4662  05C1  1D03               	skipz
  4663  05C2  0008               	return
  4664  05C3  302B               	movlw	43
  4665  05C4  00FB               	movwf	_gb_SystemMode
  4666  05C5  0008               	return
  4667  05C6                     l16441:	
  4668  05C6  2775  3180         	fcall	PL19	;call to abstracted procedure
  4669                           
  4670                           ; Switch size 1, requested type "space"
  4671                           ; Number of cases is 3, Range of values is 16 to 18
  4672                           ; switch strategies available:
  4673                           ; Name         Instructions Cycles
  4674                           ; simple_byte           10     6 (average)
  4675                           ; direct_byte           15     9 (fixed)
  4676                           ; jumptable            263     9 (fixed)
  4677                           ;	Chosen strategy is simple_byte
  4678  05C8  3A10               	xorlw	16	; case 16
  4679  05C9  1903               	skipnz
  4680  05CA  2D59               	goto	l16375
  4681  05CB  3A01               	xorlw	1	; case 17
  4682  05CC  1903               	skipnz
  4683  05CD  2D88               	goto	l16403
  4684  05CE  3A03               	xorlw	3	; case 18
  4685  05CF  1903               	skipnz
  4686  05D0  2DB9               	goto	l16433
  4687  05D1  2E20               	goto	l4071
  4688  05D2                     l16443:	
  4689                           
  4690                           ;DK_PIC16_App.c: 852: else if(KeyValue==0x02 && gb_ParameterChangeFlag==2)
  4691  05D2  0862               	movf	WorkModeSelect@KeyValue,w
  4692  05D3  3A02               	xorlw	2
  4693  05D4  1D03               	skipz
  4694  05D5  2E18               	goto	l16479
  4695  05D6  0855               	movf	_gb_ParameterChangeFlag,w
  4696  05D7  3A02               	xorlw	2
  4697  05D8  1D03               	skipz
  4698  05D9  2E18               	goto	l16479
  4699                           
  4700                           ;DK_PIC16_App.c: 853: {
  4701                           ;DK_PIC16_App.c: 854: if(gb_SystemMode==0x24)
  4702  05DA  087B               	movf	_gb_SystemMode,w
  4703  05DB  3A24               	xorlw	36
  4704  05DC  1D03               	skipz
  4705  05DD  2DE9               	goto	l16455
  4706                           
  4707                           ;DK_PIC16_App.c: 855: {
  4708                           ;DK_PIC16_App.c: 856: BeepOn((u16*)MusicTab_KeySet);
  4709  05DE  3026               	movlw	low (_MusicTab_KeySet| (0+32768))
  4710  05DF  00F2               	movwf	?_BeepOn
  4711  05E0  3099               	movlw	high (_MusicTab_KeySet| (0+32768))
  4712  05E1  00F3               	movwf	?_BeepOn+1
  4713  05E2  2621  3180         	fcall	_BeepOn
  4714                           
  4715                           ;DK_PIC16_App.c: 857: gb_SystemMode=0x02;
  4716  05E4  3002               	movlw	2
  4717  05E5  00FB               	movwf	_gb_SystemMode
  4718                           
  4719                           ;DK_PIC16_App.c: 858: gb_SysMode_Set=0x51;
  4720  05E6  3051               	movlw	81
  4721  05E7  00DA               	movwf	_gb_SysMode_Set
  4722                           
  4723                           ;DK_PIC16_App.c: 859: }
  4724  05E8  2CB9               	goto	l16281
  4725  05E9                     l16455:	
  4726                           
  4727                           ;DK_PIC16_App.c: 860: else
  4728                           ;DK_PIC16_App.c: 861: {
  4729                           ;DK_PIC16_App.c: 862: BeepOn((u16*)MusicTab_KeyOver);
  4730  05E9  30BA               	movlw	low (_MusicTab_KeyOver| (0+32768))
  4731  05EA  00F2               	movwf	?_BeepOn
  4732  05EB  3098               	movlw	high (_MusicTab_KeyOver| (0+32768))
  4733  05EC  00F3               	movwf	?_BeepOn+1
  4734  05ED  2621  3180         	fcall	_BeepOn
  4735                           
  4736                           ;DK_PIC16_App.c: 864: switch(RF_ModemBuf[gb_Modem_Addr])
  4737  05EF  2DF8               	goto	l16463
  4738  05F0                     l16457:	
  4739                           
  4740                           ;DK_PIC16_App.c: 867: gb_ModuleWorkMode=0;
  4741  05F0  01D4               	clrf	_gb_ModuleWorkMode
  4742                           
  4743                           ;DK_PIC16_App.c: 868: break;
  4744  05F1  2E04               	goto	l16465
  4745  05F2                     l4065:	
  4746                           ;DK_PIC16_App.c: 869: case 0x11:
  4747                           
  4748                           
  4749                           ;DK_PIC16_App.c: 870: gb_ModuleWorkMode=1;
  4750  05F2  01D4               	clrf	_gb_ModuleWorkMode
  4751  05F3  0AD4               	incf	_gb_ModuleWorkMode,f
  4752                           
  4753                           ;DK_PIC16_App.c: 871: break;
  4754  05F4  2E04               	goto	l16465
  4755  05F5                     l16459:	
  4756                           
  4757                           ;DK_PIC16_App.c: 873: gb_ModuleWorkMode=2;
  4758  05F5  3002               	movlw	2
  4759  05F6  00D4               	movwf	_gb_ModuleWorkMode
  4760                           
  4761                           ;DK_PIC16_App.c: 874: break;
  4762  05F7  2E04               	goto	l16465
  4763  05F8                     l16463:	
  4764  05F8  2775  3180         	fcall	PL19	;call to abstracted procedure
  4765                           
  4766                           ; Switch size 1, requested type "space"
  4767                           ; Number of cases is 3, Range of values is 16 to 18
  4768                           ; switch strategies available:
  4769                           ; Name         Instructions Cycles
  4770                           ; simple_byte           10     6 (average)
  4771                           ; direct_byte           15     9 (fixed)
  4772                           ; jumptable            263     9 (fixed)
  4773                           ;	Chosen strategy is simple_byte
  4774  05FA  3A10               	xorlw	16	; case 16
  4775  05FB  1903               	skipnz
  4776  05FC  2DF0               	goto	l16457
  4777  05FD  3A01               	xorlw	1	; case 17
  4778  05FE  1903               	skipnz
  4779  05FF  2DF2               	goto	l4065
  4780  0600  3A03               	xorlw	3	; case 18
  4781  0601  1903               	skipnz
  4782  0602  2DF5               	goto	l16459
  4783  0603  2E04               	goto	l16465
  4784  0604                     l16465:	
  4785                           
  4786                           ;DK_PIC16_App.c: 877: if(gb_SystemMode==0x23){gb_ModuleWorkMode=4;}
  4787  0604  087B               	movf	_gb_SystemMode,w
  4788  0605  3A23               	xorlw	35
  4789  0606  1D03               	skipz
  4790  0607  2E0A               	goto	l16469
  4791  0608  3004               	movlw	4
  4792  0609  00D4               	movwf	_gb_ModuleWorkMode
  4793  060A                     l16469:	
  4794                           
  4795                           ;DK_PIC16_App.c: 880: gb_DispFlashFlag=0;
  4796  060A  01CA               	clrf	_gb_DispFlashFlag
  4797                           
  4798                           ;DK_PIC16_App.c: 881: if(gb_ParameterChangeFlag==2){gb_ParameterChangeFlag=1;}
  4799  060B  0855               	movf	_gb_ParameterChangeFlag,w
  4800  060C  3A02               	xorlw	2
  4801  060D  1D03               	skipz
  4802  060E  2E11               	goto	l4068
  4803  060F  01D5               	clrf	_gb_ParameterChangeFlag
  4804  0610  0AD5               	incf	_gb_ParameterChangeFlag,f
  4805  0611                     l4068:	
  4806                           
  4807                           ;DK_PIC16_App.c: 882: gb_ModuleWorkEnableFlag=1;
  4808  0611  01D3               	clrf	_gb_ModuleWorkEnableFlag
  4809  0612  0AD3               	incf	_gb_ModuleWorkEnableFlag,f
  4810                           
  4811                           ;DK_PIC16_App.c: 883: gw_SendDataCount=0;
  4812  0613  01BE               	clrf	_gw_SendDataCount
  4813  0614  01BF               	clrf	_gw_SendDataCount+1
  4814                           
  4815                           ;DK_PIC16_App.c: 884: gw_ReceiveDataCount=0;
  4816  0615  01BC               	clrf	_gw_ReceiveDataCount
  4817  0616  01BD               	clrf	_gw_ReceiveDataCount+1
  4818  0617  2CB9               	goto	l16281
  4819  0618                     l16479:	
  4820                           
  4821                           ;DK_PIC16_App.c: 889: else if(KeyValue!=0x00)
  4822  0618  0862               	movf	WorkModeSelect@KeyValue,w
  4823  0619  1903               	btfsc	3,2
  4824  061A  0008               	return
  4825                           
  4826                           ;DK_PIC16_App.c: 890: {
  4827                           ;DK_PIC16_App.c: 891: BeepOn((u16*)MusicTab_KeyErr);
  4828  061B  303A               	movlw	low (_MusicTab_KeyErr| (0+32768))
  4829  061C  00F2               	movwf	?_BeepOn
  4830  061D  3099               	movlw	high (_MusicTab_KeyErr| (0+32768))
  4831  061E  00F3               	movwf	?_BeepOn+1
  4832  061F  2621               	fcall	_BeepOn
  4833  0620                     l4071:	
  4834  0620  0008               	return
  4835  0621                     __end_of_WorkModeSelect:	
  4836  0621                     __ptext2208:	
  4837 ;; =============== function _BeepOff ends ============
  4838                           
  4839                           
  4840 ;; *************** function _BeepOn *****************
  4841 ;; Defined at:
  4842 ;;		line 929 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  Tone            2    2[COMMON] PTR unsigned int 
  4845 ;;		 -> MusicTab_RxSuccess(8), MusicTab_PowerOn(36), MusicTab_KeyOver(32), MusicTab_KeyErr(8), 
  4846 ;;		 -> MusicTab_KeyOK(12), MusicTab_KeyMove(8), MusicTab_KeySet(12), MusicTab_Error(20), 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  i               1    9[COMMON] unsigned char 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;		None               void
  4851 ;; Registers used:
  4852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4853 ;; Tracked objects:
  4854 ;;		On entry : 1E/0
  4855 ;;		On exit  : 1F/0
  4856 ;;		Unchanged: FFFE0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;Total ram usage:        8 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    2
  4865 ;; This function calls:
  4866 ;;		Nothing
  4867 ;; This function is called by:
  4868 ;;		_DisplayRFParameter
  4869 ;;		_RFParameterSelect
  4870 ;;		_ModemSelect
  4871 ;;		_WorkModeSelect
  4872 ;;		_PowerOnMusic
  4873 ;;		_RFM98_Running
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876  0621                     _BeepOn:	
  4877  0621                     l14899:	
  4878                           ; Regs used in _BeepOn: [wreg-status,0+pclath]
  4879                           
  4880                           
  4881                           ;DK_PIC16_App.c: 930: u8 i=0;
  4882  0621  01F9               	clrf	BeepOn@i
  4883                           
  4884                           ;DK_PIC16_App.c: 931: if(!gb_BeepOnFlag)
  4885  0622  0020               	movlb	0	; select bank0
  4886  0623  08C6               	movf	_gb_BeepOnFlag,f
  4887  0624  1D03               	skipz
  4888  0625  0008               	return
  4889                           
  4890                           ;DK_PIC16_App.c: 932: {
  4891                           ;DK_PIC16_App.c: 933: gb_BeepOnFlag = 1;
  4892  0626  01C6               	clrf	_gb_BeepOnFlag
  4893  0627  0AC6               	incf	_gb_BeepOnFlag,f
  4894                           
  4895                           ;DK_PIC16_App.c: 934: gb_BeepOnCount=0;
  4896  0628  01C5               	clrf	_gb_BeepOnCount
  4897                           
  4898                           ;DK_PIC16_App.c: 935: gw_BeepTimer=0;
  4899  0629  01B6               	clrf	_gw_BeepTimer
  4900  062A  01B7               	clrf	_gw_BeepTimer+1
  4901                           
  4902                           ;DK_PIC16_App.c: 936: RC2=0;
  4903  062B  110E               	bcf	14,2
  4904  062C  2E50               	goto	l14909
  4905  062D                     l14911:	
  4906                           
  4907                           ;DK_PIC16_App.c: 941: {
  4908                           ;DK_PIC16_App.c: 942: gw_ToneBuf[i]=Tone[i];
  4909  062D  0873               	movf	BeepOn@Tone+1,w
  4910  062E  00F5               	movwf	??_BeepOn+1
  4911  062F  0872               	movf	BeepOn@Tone,w
  4912  0630  00F4               	movwf	??_BeepOn
  4913  0631  3579               	lslf	BeepOn@i,w
  4914  0632  0774               	addwf	??_BeepOn,w
  4915  0633  0084               	movwf	4
  4916  0634  0875               	movf	??_BeepOn+1,w
  4917  0635  1803               	skipnc
  4918  0636  0A75               	incf	??_BeepOn+1,w
  4919  0637  0085               	movwf	5
  4920  0638  3F00               	moviw [0]fsr0
  4921  0639  00F6               	movwf	??_BeepOn+2
  4922  063A  3F01               	moviw [1]fsr0
  4923  063B  00F7               	movwf	??_BeepOn+3
  4924  063C  3579               	lslf	BeepOn@i,w
  4925  063D  3EA0               	addlw	_gw_ToneBuf& (0+255)
  4926  063E  0086               	movwf	6
  4927  063F  3001               	movlw	1	; select bank3/4
  4928  0640  0087               	movwf	7
  4929  0641  0876               	movf	??_BeepOn+2,w
  4930  0642  3FC0               	movwi [0]fsr1
  4931  0643  0877               	movf	??_BeepOn+3,w
  4932  0644  3FC1               	movwi [1]fsr1
  4933                           
  4934                           ;DK_PIC16_App.c: 943: gw_ToneBuf[i+1]=Tone[i+1];
  4935  0645  275D  3180         	fcall	PL18	;call to abstracted procedure
  4936  0647  3579               	lslf	BeepOn@i,w
  4937  0648  3EA2               	addlw	(_gw_ToneBuf+2)& (0+255)
  4938  0649  0086               	movwf	6
  4939  064A  0877               	movf	??_BeepOn+3,w
  4940  064B  3FC0               	movwi [0]fsr1
  4941  064C  0878               	movf	??_BeepOn+4,w
  4942  064D  3FC1               	movwi [1]fsr1
  4943                           
  4944                           ;DK_PIC16_App.c: 944: i+=2;
  4945  064E  0AF9               	incf	BeepOn@i,f
  4946  064F  0AF9               	incf	BeepOn@i,f
  4947  0650                     l14909:	
  4948                           ;DK_PIC16_App.c: 945: }
  4949                           
  4950                           
  4951                           ;DK_PIC16_App.c: 939: {
  4952                           ;DK_PIC16_App.c: 940: if(Tone[i+1]!=0)
  4953  0650  275D  3180         	fcall	PL18	;call to abstracted procedure
  4954  0652  0477               	iorwf	??_BeepOn+3,w
  4955  0653  1D03               	btfss	3,2
  4956  0654  2E2D               	goto	l14911
  4957                           
  4958                           ;DK_PIC16_App.c: 946: else
  4959                           ;DK_PIC16_App.c: 947: {
  4960                           ;DK_PIC16_App.c: 948: gw_ToneBuf[i]=0;
  4961  0655  3579               	lslf	BeepOn@i,w
  4962  0656  3EA0               	addlw	_gw_ToneBuf& (0+255)
  4963  0657  27B8  3180         	fcall	PL57	;call to abstracted procedure
  4964                           
  4965                           ;DK_PIC16_App.c: 949: gw_ToneBuf[i+1]=0;
  4966  0659  3579               	lslf	BeepOn@i,w
  4967  065A  3EA2               	addlw	(_gw_ToneBuf+2)& (0+255)
  4968  065B  27B8               	fcall	PL57	;call to abstracted procedure
  4969                           
  4970                           ;DK_PIC16_App.c: 951: }
  4971                           ;DK_PIC16_App.c: 952: }
  4972                           ;DK_PIC16_App.c: 953: TMR1ON = 1;
  4973                           
  4974                           ;DK_PIC16_App.c: 950: break;
  4975  065C  0020               	movlb	0	; select bank0
  4976  065D  1418               	bsf	24,0
  4977  065E  0008               	return
  4978  065F                     __end_of_BeepOn:	
  4979  065F                     __ptext2177:	
  4980 ;; =============== function _DisplayRFParameter ends ============
  4981                           
  4982                           
  4983 ;; *************** function _SaveRFParameterToFlash *****************
  4984 ;; Defined at:
  4985 ;;		line 221 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;		None
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  i               1    9[COMMON] unsigned char 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;		None               void
  4992 ;; Registers used:
  4993 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 1F/0
  4996 ;;		On exit  : 1C/0
  4997 ;;		Unchanged: FFE00/0
  4998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5003 ;;Total ram usage:        1 bytes
  5004 ;; Hardware stack levels used:    1
  5005 ;; Hardware stack levels required when called:    4
  5006 ;; This function calls:
  5007 ;;		_FlashErase
  5008 ;;		_FlashWrite
  5009 ;; This function is called by:
  5010 ;;		_RFParameterSelect
  5011 ;;		_ModemSelect
  5012 ;;		_WorkModeSelect
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015  065F                     _SaveRFParameterToFlash:	
  5016  065F                     l15531:	
  5017                           ; Regs used in _SaveRFParameterToFlash: [wreg+fsr1l-status,0+pclath+cstack]
  5018                           
  5019                           
  5020                           ;DK_PIC16_App.c: 222: u8 i;
  5021                           ;DK_PIC16_App.c: 224: FlashErase(0x3820);
  5022  065F  3038               	movlw	56
  5023  0660  01F5               	clrf	?_FlashErase+3
  5024  0661  01F4               	clrf	?_FlashErase+2
  5025  0662  00F3               	movwf	?_FlashErase+1
  5026  0663  3020               	movlw	32
  5027  0664  00F2               	movwf	?_FlashErase
  5028  0665  2695  3180         	fcall	_FlashErase
  5029                           
  5030                           ;DK_PIC16_App.c: 225: gb_RxData[0]=0x5A;
  5031  0667  305A               	movlw	90
  5032  0668  0022               	movlb	2	; select bank2
  5033  0669  00A0               	movwf	_gb_RxData^(0+256)
  5034                           
  5035                           ;DK_PIC16_App.c: 226: gb_RxData[1]=gb_FreqBuf_Addr;
  5036  066A  0020               	movlb	0	; select bank0
  5037  066B  084F               	movf	_gb_FreqBuf_Addr,w
  5038  066C  0022               	movlb	2	; select bank2
  5039  066D  00A1               	movwf	(_gb_RxData^(0+256)+1)
  5040                           
  5041                           ;DK_PIC16_App.c: 227: gb_RxData[2]=gb_RateBuf_Addr;
  5042  066E  0020               	movlb	0	; select bank0
  5043  066F  0857               	movf	_gb_RateBuf_Addr,w
  5044  0670  0022               	movlb	2	; select bank2
  5045  0671  00A2               	movwf	(_gb_RxData^(0+256)+2)
  5046                           
  5047                           ;DK_PIC16_App.c: 228: gb_RxData[3]=gb_PowerBuf_Addr;
  5048  0672  0020               	movlb	0	; select bank0
  5049  0673  0856               	movf	_gb_PowerBuf_Addr,w
  5050  0674  0022               	movlb	2	; select bank2
  5051  0675  00A3               	movwf	(_gb_RxData^(0+256)+3)
  5052                           
  5053                           ;DK_PIC16_App.c: 229: gb_RxData[4]=gb_FdevBuf_Addr;
  5054  0676  0020               	movlb	0	; select bank0
  5055  0677  084D               	movf	_gb_FdevBuf_Addr,w
  5056  0678  0022               	movlb	2	; select bank2
  5057  0679  00A4               	movwf	(_gb_RxData^(0+256)+4)
  5058                           
  5059                           ;DK_PIC16_App.c: 230: gb_RxData[5]=gb_BandBuf_Addr;
  5060  067A  0020               	movlb	0	; select bank0
  5061  067B  0844               	movf	_gb_BandBuf_Addr,w
  5062  067C  0022               	movlb	2	; select bank2
  5063  067D  00A5               	movwf	(_gb_RxData^(0+256)+5)
  5064                           
  5065                           ;DK_PIC16_App.c: 231: gb_RxData[6]=gb_Modem_Addr;
  5066  067E  087A               	movf	_gb_Modem_Addr,w
  5067  067F  00A6               	movwf	(_gb_RxData^(0+256)+6)
  5068                           
  5069                           ;DK_PIC16_App.c: 232: gb_RxData[8]=gb_SystemMode;
  5070  0680  087B               	movf	_gb_SystemMode,w
  5071  0681  00A8               	movwf	(_gb_RxData^(0+256)+8)
  5072                           
  5073                           ;DK_PIC16_App.c: 233: FlashWrite(0x3820, gb_RxData);
  5074  0682  3038               	movlw	56
  5075  0683  01F5               	clrf	?_FlashWrite+3
  5076  0684  01F4               	clrf	?_FlashWrite+2
  5077  0685  00F3               	movwf	?_FlashWrite+1
  5078  0686  3020               	movlw	32
  5079  0687  00F2               	movwf	?_FlashWrite
  5080  0688  3020               	movlw	_gb_RxData& (0+255)
  5081  0689  00F6               	movwf	?_FlashWrite+4
  5082  068A  26A4               	fcall	_FlashWrite
  5083                           
  5084                           ;DK_PIC16_App.c: 234: for(i=0; i<32; i++)
  5085  068B  01F9               	clrf	SaveRFParameterToFlash@i
  5086  068C                     l15557:	
  5087                           
  5088                           ;DK_PIC16_App.c: 235: gb_RxData[i] = 0;
  5089  068C  0879               	movf	SaveRFParameterToFlash@i,w
  5090  068D  318A  220C  3180   	fcall	PL42	;call to abstracted procedure
  5091  0690  0AF9               	incf	SaveRFParameterToFlash@i,f
  5092  0691  0279               	subwf	SaveRFParameterToFlash@i,w
  5093  0692  1803               	btfsc	3,0
  5094  0693  0008               	return
  5095  0694  2E8C               	goto	l15557
  5096  0695                     __end_of_SaveRFParameterToFlash:	
  5097  0695                     __ptext2195:	
  5098 ;; =============== function _FlashWrite ends ============
  5099                           
  5100                           
  5101 ;; *************** function _FlashErase *****************
  5102 ;; Defined at:
  5103 ;;		line 62 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\DK_Flash.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  FlashAdr        4    2[COMMON] unsigned long 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;		None               void
  5110 ;; Registers used:
  5111 ;;		wreg, status,2, status,0, pclath, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 1F/0
  5114 ;;		On exit  : 1F/3
  5115 ;;		Unchanged: FFE00/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5121 ;;Total ram usage:        4 bytes
  5122 ;; Hardware stack levels used:    1
  5123 ;; Hardware stack levels required when called:    3
  5124 ;; This function calls:
  5125 ;;		_FlashUnlock
  5126 ;; This function is called by:
  5127 ;;		_SaveRFParameterToFlash
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130  0695                     _FlashErase:	
  5131                           
  5132                           ;DK_Flash.c: 63: GIE = 0;
  5133                           
  5134                           ; Regs used in _FlashErase: [wreg+status,2+status,0+pclath+cstack]
  5135  0695  138B               	bcf	11,7
  5136                           
  5137                           ;DK_Flash.c: 64: CFGS = 0;
  5138  0696  0023               	movlb	3	; select bank3
  5139  0697  1315               	bcf	21,6
  5140                           
  5141                           ;DK_Flash.c: 65: PMADR = FlashAdr;
  5142  0698  0873               	movf	FlashErase@FlashAdr+1,w
  5143  0699  0092               	movwf	18	;volatile
  5144  069A  0872               	movf	FlashErase@FlashAdr,w
  5145  069B  0091               	movwf	17	;volatile
  5146                           
  5147                           ;DK_Flash.c: 66: FREE = 1;
  5148  069C  1615               	bsf	21,4
  5149                           
  5150                           ;DK_Flash.c: 67: WREN = 1;
  5151  069D  1515               	bsf	21,2
  5152                           
  5153                           ;DK_Flash.c: 68: FlashUnlock();
  5154  069E  26D1               	fcall	_FlashUnlock
  5155  069F  0000               	nop	;#
  5156                           
  5157                           ;DK_Flash.c: 72: WREN = 0;
  5158  06A0  0023               	movlb	3	; select bank3
  5159  06A1  1115               	bcf	21,2
  5160                           
  5161                           ;DK_Flash.c: 73: GIE = 1;
  5162  06A2  178B               	bsf	11,7
  5163  06A3  0008               	return
  5164  06A4                     __end_of_FlashErase:	
  5165  06A4                     __ptext2194:	
  5166 ;; =============== function _Clr_LCD ends ============
  5167                           
  5168                           
  5169 ;; *************** function _FlashWrite *****************
  5170 ;; Defined at:
  5171 ;;		line 84 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\DK_Flash.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  FlashAdr        4    2[COMMON] unsigned long 
  5174 ;;  array           1    6[COMMON] PTR unsigned char 
  5175 ;;		 -> gb_RxData(32), 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  i               1    8[COMMON] unsigned char 
  5178 ;; Return value:  Size  Location     Type
  5179 ;;		None               void
  5180 ;; Registers used:
  5181 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5182 ;; Tracked objects:
  5183 ;;		On entry : 1F/2
  5184 ;;		On exit  : 1F/3
  5185 ;;		Unchanged: FFE00/0
  5186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5187 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5190 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5191 ;;Total ram usage:        7 bytes
  5192 ;; Hardware stack levels used:    1
  5193 ;; Hardware stack levels required when called:    3
  5194 ;; This function calls:
  5195 ;;		_FlashUnlock
  5196 ;; This function is called by:
  5197 ;;		_SaveRFParameterToFlash
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200  06A4                     _FlashWrite:	
  5201                           
  5202                           ;DK_Flash.c: 85: u8 i;
  5203                           ;DK_Flash.c: 87: GIE = 0;
  5204                           
  5205                           ; Regs used in _FlashWrite: [wreg+fsr1l-status,0+pclath+cstack]
  5206  06A4  138B               	bcf	11,7
  5207                           
  5208                           ;DK_Flash.c: 89: PMADR = FlashAdr;
  5209  06A5  0873               	movf	FlashWrite@FlashAdr+1,w
  5210  06A6  0023               	movlb	3	; select bank3
  5211  06A7  0092               	movwf	18	;volatile
  5212  06A8  0872               	movf	FlashWrite@FlashAdr,w
  5213  06A9  0091               	movwf	17	;volatile
  5214                           
  5215                           ;DK_Flash.c: 91: CFGS = 0;
  5216  06AA  1315               	bcf	21,6
  5217                           
  5218                           ;DK_Flash.c: 92: FREE = 0;
  5219  06AB  1215               	bcf	21,4
  5220                           
  5221                           ;DK_Flash.c: 93: LWLO = 1;
  5222  06AC  1695               	bsf	21,5
  5223                           
  5224                           ;DK_Flash.c: 94: WREN = 1;
  5225  06AD  1515               	bsf	21,2
  5226                           
  5227                           ;DK_Flash.c: 95: for(i=0;i<32;)
  5228  06AE  01F8               	clrf	FlashWrite@i
  5229  06AF                     l15175:	
  5230                           
  5231                           ;DK_Flash.c: 96: {
  5232                           ;DK_Flash.c: 97: PMDATL = array[i];
  5233  06AF  0878               	movf	FlashWrite@i,w
  5234  06B0  0776               	addwf	FlashWrite@array,w
  5235  06B1  00F7               	movwf	??_FlashWrite
  5236  06B2  0086               	movwf	6
  5237  06B3  3001               	movlw	1	; select bank2/3
  5238  06B4  0087               	movwf	7
  5239  06B5  0801               	movf	1,w
  5240  06B6  0093               	movwf	19	;volatile
  5241                           
  5242                           ;DK_Flash.c: 98: PMDATH = 0;
  5243  06B7  0194               	clrf	20	;volatile
  5244  06B8  3020               	movlw	32
  5245                           
  5246                           ;DK_Flash.c: 99: i++;
  5247  06B9  0AF8               	incf	FlashWrite@i,f
  5248                           
  5249                           ;DK_Flash.c: 100: if(i<32)
  5250  06BA  0278               	subwf	FlashWrite@i,w
  5251  06BB  1803               	skipnc
  5252  06BC  2EC4               	goto	l1156
  5253                           
  5254                           ;DK_Flash.c: 101: {
  5255                           ;DK_Flash.c: 102: FlashUnlock();
  5256  06BD  26D1  3180         	fcall	_FlashUnlock
  5257                           
  5258                           ;DK_Flash.c: 103: PMADR++;
  5259  06BF  0023               	movlb	3	; select bank3
  5260  06C0  0A91               	incf	17,f	;volatile
  5261  06C1  1903               	skipnz
  5262  06C2  0A92               	incf	18,f	;volatile
  5263                           
  5264                           ;DK_Flash.c: 104: }
  5265  06C3  2EC9               	goto	l15191
  5266  06C4                     l1156:	
  5267                           
  5268                           ;DK_Flash.c: 105: else
  5269                           ;DK_Flash.c: 106: {
  5270                           ;DK_Flash.c: 107: LWLO = 0;
  5271  06C4  1295               	bcf	21,5
  5272                           
  5273                           ;DK_Flash.c: 108: FlashUnlock();
  5274  06C5  26D1  3180         	fcall	_FlashUnlock
  5275  06C7  0000               	nop	;#
  5276                           
  5277                           ;DK_Flash.c: 110: break;
  5278  06C8  2ECD               	goto	l1155
  5279  06C9                     l15191:	
  5280  06C9  3020               	movlw	32
  5281  06CA  0278               	subwf	FlashWrite@i,w
  5282  06CB  1C03               	skipc
  5283  06CC  2EAF               	goto	l15175
  5284  06CD                     l1155:	
  5285                           
  5286                           ;DK_Flash.c: 111: }
  5287                           ;DK_Flash.c: 112: }
  5288                           ;DK_Flash.c: 113: WREN = 0;
  5289  06CD  0023               	movlb	3	; select bank3
  5290  06CE  1115               	bcf	21,2
  5291                           
  5292                           ;DK_Flash.c: 114: GIE = 1;
  5293  06CF  178B               	bsf	11,7
  5294  06D0  0008               	return
  5295  06D1                     __end_of_FlashWrite:	
  5296  06D1                     __ptext2220:	
  5297 ;; =============== function _CK1622_WriteByte ends ============
  5298                           
  5299                           
  5300 ;; *************** function _FlashUnlock *****************
  5301 ;; Defined at:
  5302 ;;		line 47 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\DK_Flash.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;		None
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;		None
  5307 ;; Return value:  Size  Location     Type
  5308 ;;		None               void
  5309 ;; Registers used:
  5310 ;;		wreg
  5311 ;; Tracked objects:
  5312 ;;		On entry : 1F/3
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: FFE00/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5320 ;;Total ram usage:        0 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    2
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_FlashErase
  5327 ;;		_FlashWrite
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330  06D1                     _FlashUnlock:	
  5331                           
  5332                           ;DK_Flash.c: 48: PMCON2 = 0x55;
  5333                           
  5334                           ; Regs used in _FlashUnlock: [wreg]
  5335  06D1  3055               	movlw	85
  5336  06D2  0096               	movwf	22	;volatile
  5337                           
  5338                           ;DK_Flash.c: 49: PMCON2 = 0xAA;
  5339  06D3  30AA               	movlw	170
  5340  06D4  0096               	movwf	22	;volatile
  5341                           
  5342                           ;DK_Flash.c: 50: WR = 1;
  5343  06D5  1495               	bsf	21,1
  5344  06D6  0000               	nop	;#
  5345  06D7  0000               	nop	;#
  5346  06D8  0008               	return
  5347  06D9                     __end_of_FlashUnlock:	
  5348  06D9                     __ptext2151:	
  5349 ;; =============== function _RFM98_Running ends ============
  5350                           
  5351                           
  5352 ;; *************** function _MenuConfig *****************
  5353 ;; Defined at:
  5354 ;;		line 902 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  KeyValue        1   15[BANK0 ] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;		None               void
  5361 ;; Registers used:
  5362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 1E/1
  5365 ;;		On exit  : 1F/1
  5366 ;;		Unchanged: FFE00/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5371 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5372 ;;Total ram usage:        1 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    6
  5375 ;; This function calls:
  5376 ;;		_KeyScan
  5377 ;;		_RFParameterSelect
  5378 ;;		_ModemSelect
  5379 ;;		_WorkModeSelect
  5380 ;;		_DisplayRFParameter
  5381 ;;		_LCD_Display
  5382 ;; This function is called by:
  5383 ;;		_main
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386  06D9                     _MenuConfig:	
  5387                           
  5388                           ;DK_PIC16_App.c: 903: u8 KeyValue=KeyScan();
  5389                           
  5390                           ; Regs used in _MenuConfig: [wreg-status,0+pclath+cstack]
  5391  06D9  26F3  3180         	fcall	_KeyScan
  5392  06DB  00EF               	movwf	MenuConfig@KeyValue
  5393                           
  5394                           ;DK_PIC16_App.c: 905: if(gb_SystemMode==0x02)
  5395  06DC  087B               	movf	_gb_SystemMode,w
  5396  06DD  3A02               	xorlw	2
  5397  06DE  1D03               	skipz
  5398  06DF  2EE4               	goto	l16903
  5399                           
  5400                           ;DK_PIC16_App.c: 906: {
  5401                           ;DK_PIC16_App.c: 907: RFParameterSelect(KeyValue);
  5402  06E0  086F               	movf	MenuConfig@KeyValue,w
  5403  06E1  23C3  3180         	fcall	_RFParameterSelect
  5404                           
  5405                           ;DK_PIC16_App.c: 908: }
  5406  06E3  2EEF               	goto	l4075
  5407  06E4                     l16903:	
  5408                           
  5409                           ;DK_PIC16_App.c: 909: else if(gb_SystemMode==0x04)
  5410  06E4  087B               	movf	_gb_SystemMode,w
  5411  06E5  3A04               	xorlw	4
  5412  06E6  1D03               	skipz
  5413  06E7  2EED               	goto	l16907
  5414                           
  5415                           ;DK_PIC16_App.c: 910: {
  5416                           ;DK_PIC16_App.c: 911: ModemSelect(KeyValue);
  5417  06E8  086F               	movf	MenuConfig@KeyValue,w
  5418  06E9  3191  21D1  3180   	fcall	_ModemSelect
  5419                           
  5420                           ;DK_PIC16_App.c: 912: }
  5421  06EC  2EEF               	goto	l4075
  5422  06ED                     l16907:	
  5423                           
  5424                           ;DK_PIC16_App.c: 913: else
  5425                           ;DK_PIC16_App.c: 914: {
  5426                           ;DK_PIC16_App.c: 915: WorkModeSelect(KeyValue);
  5427  06ED  086F               	movf	MenuConfig@KeyValue,w
  5428  06EE  248C               	fcall	_WorkModeSelect
  5429  06EF                     l4075:	
  5430                           
  5431                           ;DK_PIC16_App.c: 916: }
  5432                           ;DK_PIC16_App.c: 917: DisplayRFParameter();
  5433  06EF  318A  222F  3180   	fcall	_DisplayRFParameter
  5434                           
  5435                           ;DK_PIC16_App.c: 919: LCD_Display();
  5436  06F2  2B0D               	ljmp	l15401
  5437  06F3                     __end_of_MenuConfig:	
  5438  06F3                     __ptext2189:	
  5439 ;; =============== function _ModuleSelectModeEntryCheck ends ============
  5440                           
  5441                           
  5442 ;; *************** function _KeyScan *****************
  5443 ;; Defined at:
  5444 ;;		line 119 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  temp            1    4[COMMON] unsigned char 
  5449 ;;  keyValue        1    3[COMMON] unsigned char 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      unsigned char 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0, pclath, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 1E/1
  5456 ;;		On exit  : 1F/0
  5457 ;;		Unchanged: FFFE0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5460 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5463 ;;Total ram usage:        2 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    3
  5466 ;; This function calls:
  5467 ;;		_KeyRead
  5468 ;; This function is called by:
  5469 ;;		_MenuConfig
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472  06F3                     _KeyScan:	
  5473                           
  5474                           ;DK_PIC16_App.c: 120: u8 temp;
  5475                           ;DK_PIC16_App.c: 121: u8 keyValue=0;
  5476                           
  5477                           ; Regs used in _KeyScan: [wreg+status,2+status,0+pclath+cstack]
  5478  06F3  01F3               	clrf	KeyScan@keyValue
  5479                           
  5480                           ;DK_PIC16_App.c: 122: temp=KeyRead();
  5481  06F4  2719  3180         	fcall	_KeyRead
  5482  06F6  00F4               	movwf	KeyScan@temp
  5483                           
  5484                           ;DK_PIC16_App.c: 123: if(temp!=0x00)
  5485  06F7  0874               	movf	KeyScan@temp,w
  5486  06F8  1903               	btfsc	3,2
  5487  06F9  2F10               	goto	l15447
  5488                           
  5489                           ;DK_PIC16_App.c: 124: {
  5490                           ;DK_PIC16_App.c: 125: if(gb_KeyDownFlag==0)
  5491  06FA  08D0               	movf	_gb_KeyDownFlag,f
  5492  06FB  1D03               	skipz
  5493  06FC  2F05               	goto	l15441
  5494                           
  5495                           ;DK_PIC16_App.c: 126: {
  5496                           ;DK_PIC16_App.c: 127: gw_KeyDebounceTimer=50;
  5497  06FD  3032               	movlw	50
  5498  06FE  00B8               	movwf	_gw_KeyDebounceTimer
  5499  06FF  01B9               	clrf	_gw_KeyDebounceTimer+1
  5500                           
  5501                           ;DK_PIC16_App.c: 128: gb_KeyDownFlag=1;
  5502  0700  01D0               	clrf	_gb_KeyDownFlag
  5503  0701  0AD0               	incf	_gb_KeyDownFlag,f
  5504                           
  5505                           ;DK_PIC16_App.c: 129: gb_KeyValue=temp;
  5506  0702  0874               	movf	KeyScan@temp,w
  5507  0703  00D1               	movwf	_gb_KeyValue
  5508                           
  5509                           ;DK_PIC16_App.c: 130: }
  5510  0704  2F17               	goto	l15455
  5511  0705                     l15441:	
  5512                           
  5513                           ;DK_PIC16_App.c: 131: else if(gw_KeyDebounceTimer==0 && gb_KeyValue==temp)
  5514  0705  0839               	movf	_gw_KeyDebounceTimer+1,w
  5515  0706  0438               	iorwf	_gw_KeyDebounceTimer,w
  5516  0707  1D03               	skipz
  5517  0708  2F17               	goto	l15455
  5518  0709  0851               	movf	_gb_KeyValue,w
  5519  070A  0674               	xorwf	KeyScan@temp,w
  5520  070B  1D03               	skipz
  5521  070C  2F17               	goto	l15455
  5522                           
  5523                           ;DK_PIC16_App.c: 132: {
  5524                           ;DK_PIC16_App.c: 133: gb_KeyDownFlag=2;
  5525  070D  3002               	movlw	2
  5526  070E  00D0               	movwf	_gb_KeyDownFlag
  5527  070F  2F17               	goto	l15455
  5528  0710                     l15447:	
  5529                           
  5530                           ;DK_PIC16_App.c: 136: else if(gb_KeyDownFlag==2)
  5531  0710  0850               	movf	_gb_KeyDownFlag,w
  5532  0711  3A02               	xorlw	2
  5533  0712  1D03               	skipz
  5534  0713  2F16               	goto	l15451
  5535                           
  5536                           ;DK_PIC16_App.c: 137: {
  5537                           ;DK_PIC16_App.c: 138: keyValue=gb_KeyValue;
  5538  0714  0851               	movf	_gb_KeyValue,w
  5539  0715  00F3               	movwf	KeyScan@keyValue
  5540  0716                     l15451:	
  5541                           
  5542                           ;DK_PIC16_App.c: 139: gb_KeyDownFlag=0;
  5543  0716  01D0               	clrf	_gb_KeyDownFlag
  5544  0717                     l15455:	
  5545                           ;DK_PIC16_App.c: 140: }
  5546                           
  5547                           
  5548                           ;DK_PIC16_App.c: 144: }
  5549                           ;DK_PIC16_App.c: 145: return keyValue;
  5550  0717  0873               	movf	KeyScan@keyValue,w
  5551  0718  0008               	return
  5552  0719                     __end_of_KeyScan:	
  5553  0719                     __ptext2212:	
  5554 ;; =============== function _TxLED_Deal ends ============
  5555                           
  5556                           
  5557 ;; *************** function _KeyRead *****************
  5558 ;; Defined at:
  5559 ;;		line 91 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\DK_PIC16_App.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;		None
  5562 ;; Auto vars:     Size  Location     Type
  5563 ;;  temp            1    2[COMMON] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  1    wreg      unsigned char 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2
  5568 ;; Tracked objects:
  5569 ;;		On entry : 1E/1
  5570 ;;		On exit  : 1F/0
  5571 ;;		Unchanged: FFFE0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5576 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5577 ;;Total ram usage:        1 bytes
  5578 ;; Hardware stack levels used:    1
  5579 ;; Hardware stack levels required when called:    2
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_KeyScan
  5584 ;; This function uses a non-reentrant model
  5585 ;;
  5586  0719                     _KeyRead:	
  5587                           
  5588                           ;DK_PIC16_App.c: 92: u8 temp=0;
  5589                           
  5590                           ; Regs used in _KeyRead: [wreg+status,2]
  5591  0719  01F2               	clrf	KeyRead@temp
  5592                           
  5593                           ;DK_PIC16_App.c: 93: if(RB0==0)
  5594  071A  0020               	movlb	0	; select bank0
  5595  071B  1C0D               	btfss	13,0
  5596                           
  5597                           ;DK_PIC16_App.c: 94: {
  5598                           ;DK_PIC16_App.c: 95: temp|=0x02;
  5599  071C  14F2               	bsf	KeyRead@temp,1
  5600                           
  5601                           ;DK_PIC16_App.c: 96: }
  5602                           ;DK_PIC16_App.c: 97: if(RB1==0)
  5603  071D  1C8D               	btfss	13,1
  5604                           
  5605                           ;DK_PIC16_App.c: 98: {
  5606                           ;DK_PIC16_App.c: 99: temp|=0x04;
  5607  071E  1572               	bsf	KeyRead@temp,2
  5608                           
  5609                           ;DK_PIC16_App.c: 100: }
  5610                           ;DK_PIC16_App.c: 101: if(RB2==0)
  5611  071F  1D0D               	btfss	13,2
  5612                           
  5613                           ;DK_PIC16_App.c: 102: {
  5614                           ;DK_PIC16_App.c: 103: temp|=0x01;
  5615  0720  1472               	bsf	KeyRead@temp,0
  5616                           
  5617                           ;DK_PIC16_App.c: 104: }
  5618                           ;DK_PIC16_App.c: 105: if(RB3==0)
  5619  0721  1D8D               	btfss	13,3
  5620                           
  5621                           ;DK_PIC16_App.c: 106: {
  5622                           ;DK_PIC16_App.c: 107: temp|=0x08;
  5623  0722  15F2               	bsf	KeyRead@temp,3
  5624                           
  5625                           ;DK_PIC16_App.c: 108: }
  5626                           ;DK_PIC16_App.c: 109: return temp;
  5627  0723  0872               	movf	KeyRead@temp,w
  5628  0724  0008               	return
  5629  0725                     __end_of_KeyRead:	
  5630  0725                     __ptext2213:	
  5631 ;; =============== function _KeyRead ends ============
  5632                           
  5633                           
  5634 ;; *************** function _Delay_ms *****************
  5635 ;; Defined at:
  5636 ;;		line 73 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\DK_PIC16_App.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  time            4    2[COMMON] unsigned long 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  i               2    0[BANK0 ] unsigned int 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;		None               void
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 17F/1
  5647 ;;		On exit  : 17E/0
  5648 ;;		Unchanged: FFE80/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Totals:         8       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;Total ram usage:       10 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; Hardware stack levels required when called:    2
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_PowerUpDelay
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663  0725                     _Delay_ms:	
  5664  0725                     l14801:	
  5665                           ;DK_PIC16_App.c: 74: u16 i;
  5666                           ;DK_PIC16_App.c: 75: while(time--)
  5667                           
  5668                           ; Regs used in _Delay_ms: [wreg+status,2+status,0]
  5669                           
  5670  0725  3001               	movlw	1
  5671  0726  00F6               	movwf	??_Delay_ms
  5672  0727  01F7               	clrf	??_Delay_ms+1
  5673  0728  01F8               	clrf	??_Delay_ms+2
  5674  0729  01F9               	clrf	??_Delay_ms+3
  5675  072A  02F2               	subwf	Delay_ms@time,f
  5676  072B  0877               	movf	??_Delay_ms+1,w
  5677  072C  3BF3               	subwfb	Delay_ms@time+1,f
  5678  072D  0878               	movf	??_Delay_ms+2,w
  5679  072E  3BF4               	subwfb	Delay_ms@time+2,f
  5680  072F  0879               	movf	??_Delay_ms+3,w
  5681  0730  3BF5               	subwfb	Delay_ms@time+3,f
  5682  0731  0A72               	incf	Delay_ms@time,w
  5683  0732  1903               	skipnz
  5684  0733  0A73               	incf	Delay_ms@time+1,w
  5685  0734  1903               	skipnz
  5686  0735  0A74               	incf	Delay_ms@time+2,w
  5687  0736  1903               	skipnz
  5688  0737  0A75               	incf	Delay_ms@time+3,w
  5689  0738  1903               	btfsc	3,2
  5690  0739  0008               	return
  5691                           
  5692                           ;DK_PIC16_App.c: 76: {
  5693                           ;DK_PIC16_App.c: 77: for(i = 0; i<333; i++)
  5694  073A  0020               	movlb	0	; select bank0
  5695  073B  01E0               	clrf	Delay_ms@i
  5696  073C  01E1               	clrf	Delay_ms@i+1
  5697  073D                     l14797:	
  5698                           
  5699                           ;DK_PIC16_App.c: 78: {
  5700                           ;DK_PIC16_App.c: 79: ;
  5701  073D  0AE0               	incf	Delay_ms@i,f
  5702  073E  1903               	skipnz
  5703  073F  0AE1               	incf	Delay_ms@i+1,f
  5704  0740  3001               	movlw	1
  5705  0741  0261               	subwf	Delay_ms@i+1,w
  5706  0742  304D               	movlw	77
  5707  0743  1903               	skipnz
  5708  0744  0260               	subwf	Delay_ms@i,w
  5709  0745  1803               	btfsc	3,0
  5710  0746  2F25               	goto	l14801
  5711  0747  2F3D               	goto	l14797
  5712  0748                     __end_of_Delay_ms:	
  5713  0748                     PL14:	
  5714  0748  0826               	movf	_RF_FdevBuf,w
  5715  0749  0084               	movwf	4
  5716  074A  0827               	movf	_RF_FdevBuf+1,w
  5717  074B  0085               	movwf	5
  5718  074C  0800               	movf	0,w	;code access
  5719  074D  3800               	iorlw	0
  5720  074E  0008               	return
  5721  074F                     PL15:	
  5722  074F  0824               	movf	_RF_BandBuf,w
  5723  0750  0084               	movwf	4
  5724  0751  0825               	movf	_RF_BandBuf+1,w
  5725  0752  0085               	movwf	5
  5726  0753  0800               	movf	0,w	;code access
  5727  0754  3800               	iorlw	0
  5728  0755  0008               	return
  5729  0756                     PL17:	
  5730  0756  0760               	addwf	??_RFParameterSelect,w
  5731  0757  0084               	movwf	4
  5732  0758  0861               	movf	??_RFParameterSelect+1,w
  5733  0759  1803               	skipnc
  5734  075A  0A61               	incf	??_RFParameterSelect+1,w
  5735  075B  0085               	movwf	5
  5736  075C  0008               	return
  5737  075D                     PL18:	
  5738  075D  0879               	movf	BeepOn@i,w
  5739  075E  00F4               	movwf	??_BeepOn
  5740  075F  35F4               	lslf	??_BeepOn,f
  5741  0760  0874               	movf	??_BeepOn,w
  5742  0761  0772               	addwf	BeepOn@Tone,w
  5743  0762  00F5               	movwf	??_BeepOn+1
  5744  0763  0873               	movf	BeepOn@Tone+1,w
  5745  0764  1803               	skipnc
  5746  0765  0A89               	incf	9,f
  5747  0766  1BF4               	btfsc	??_BeepOn,7
  5748  0767  0389               	decf	9,f
  5749  0768  00F6               	movwf	??_BeepOn+2
  5750  0769  3002               	movlw	2
  5751  076A  0775               	addwf	??_BeepOn+1,w
  5752  076B  0084               	movwf	4
  5753  076C  0876               	movf	??_BeepOn+2,w
  5754  076D  1803               	skipnc
  5755  076E  0A76               	incf	??_BeepOn+2,w
  5756  076F  0085               	movwf	5
  5757  0770  3F00               	moviw [0]fsr0
  5758  0771  00F7               	movwf	??_BeepOn+3
  5759  0772  3F01               	moviw [1]fsr0
  5760  0773  00F8               	movwf	??_BeepOn+4
  5761  0774  0008               	return
  5762  0775                     PL19:	
  5763  0775  082D               	movf	_RF_ModemBuf+1,w
  5764  0776  00E1               	movwf	??_WorkModeSelect+1
  5765  0777  082C               	movf	_RF_ModemBuf,w
  5766  0778  00E0               	movwf	??_WorkModeSelect
  5767  0779  087A               	movf	_gb_Modem_Addr,w
  5768  077A  0760               	addwf	??_WorkModeSelect,w
  5769  077B  0084               	movwf	4
  5770  077C  0861               	movf	??_WorkModeSelect+1,w
  5771  077D  1803               	skipnc
  5772  077E  0A61               	incf	??_WorkModeSelect+1,w
  5773  077F  0085               	movwf	5
  5774  0780  0800               	movf	0,w	;code access
  5775  0781  0008               	return
  5776  0782                     PL25:	
  5777  0782  0AC4               	incf	_gb_BandBuf_Addr,f
  5778  0783  082B               	movf	_RF_LoRaBandWidthBuf+1,w
  5779  0784  00E1               	movwf	??_RFParameterSelect+1
  5780  0785  082A               	movf	_RF_LoRaBandWidthBuf,w
  5781  0786  00E0               	movwf	??_RFParameterSelect
  5782  0787  3544               	lslf	_gb_BandBuf_Addr,w
  5783  0788  0008               	return
  5784  0789                     PL26:	
  5785  0789  0ACF               	incf	_gb_FreqBuf_Addr,f
  5786  078A  0829               	movf	_RF_FreqBuf+1,w
  5787  078B  00E1               	movwf	??_RFParameterSelect+1
  5788  078C  0828               	movf	_RF_FreqBuf,w
  5789  078D  00E0               	movwf	??_RFParameterSelect
  5790  078E  354F               	lslf	_gb_FreqBuf_Addr,w
  5791  078F  0008               	return
  5792  0790                     PL32:	
  5793  0790  0AD6               	incf	_gb_PowerBuf_Addr,f
  5794  0791  0831               	movf	_RF_PowerBuf+1,w
  5795  0792  00E1               	movwf	??_RFParameterSelect+1
  5796  0793  0830               	movf	_RF_PowerBuf,w
  5797  0794  00E0               	movwf	??_RFParameterSelect
  5798  0795  0856               	movf	_gb_PowerBuf_Addr,w
  5799  0796  0008               	return
  5800  0797                     PL34:	
  5801  0797  0AD7               	incf	_gb_RateBuf_Addr,f
  5802  0798  0835               	movf	_RF_RateBuf+1,w
  5803  0799  00E1               	movwf	??_RFParameterSelect+1
  5804  079A  0834               	movf	_RF_RateBuf,w
  5805  079B  00E0               	movwf	??_RFParameterSelect
  5806  079C  0857               	movf	_gb_RateBuf_Addr,w
  5807  079D  0008               	return
  5808  079E                     PL36:	
  5809  079E  0084               	movwf	4
  5810  079F  0861               	movf	??_WorkModeSelect+1,w
  5811  07A0  1803               	skipnc
  5812  07A1  0A61               	incf	??_WorkModeSelect+1,w
  5813  07A2  0085               	movwf	5
  5814  07A3  0800               	movf	0,w	;code access
  5815  07A4  3A00               	xorlw	0
  5816  07A5  0008               	return
  5817  07A6                     PL37:	
  5818  07A6  082D               	movf	_RF_ModemBuf+1,w
  5819  07A7  00E1               	movwf	??_WorkModeSelect+1
  5820  07A8  082C               	movf	_RF_ModemBuf,w
  5821  07A9  00E0               	movwf	??_WorkModeSelect
  5822  07AA  3E01               	addlw	1
  5823  07AB  0008               	return
  5824  07AC                     PL49:	
  5825  07AC  3F00               	moviw [0]fsr0
  5826  07AD  00E2               	movwf	??_RFParameterSelect+2
  5827  07AE  3F01               	moviw [1]fsr0
  5828  07AF  00E3               	movwf	??_RFParameterSelect+3
  5829  07B0  0462               	iorwf	??_RFParameterSelect+2,w
  5830  07B1  0008               	return
  5831  07B2                     PL53:	
  5832  07B2  0020               	movlb	0	; select bank0
  5833  07B3  1010               	bcf	16,0
  5834  07B4  0021               	movlb	1	; select bank1
  5835  07B5  168C               	bsf	12,5
  5836  07B6  1510               	bsf	16,2
  5837  07B7  0008               	return
  5838  07B8                     PL57:	
  5839  07B8  0086               	movwf	6
  5840  07B9  3001               	movlw	1	; select bank3/4
  5841  07BA  0087               	movwf	7
  5842  07BB  0181               	clrf	1
  5843  07BC  3141               	addfsr 1,1
  5844  07BD  0181               	clrf	1
  5845  07BE  0008               	return
  5846  07BF                     PL63:	
  5847  07BF  0021               	movlb	1	; select bank1
  5848  07C0  128C               	bcf	12,5
  5849  07C1  0020               	movlb	0	; select bank0
  5850  07C2  128C               	bcf	12,5
  5851  07C3  0008               	return
  5852                           
  5853                           	psect	bssCOMMON
  5854  007A                     __pbssCOMMON:	
  5855  007A                     _gb_Modem_Addr:	
  5856  007A                     	ds	1
  5857  007B                     _gb_SystemMode:	
  5858  007B                     	ds	1
  5859                           
  5860                           	psect	bssBANK0
  5861  0020                     __pbssBANK0:	
  5862  0020                     __DispSeg:	
  5863  0020                     	ds	4
  5864  0024                     _RF_BandBuf:	
  5865  0024                     	ds	2
  5866  0026                     _RF_FdevBuf:	
  5867  0026                     	ds	2
  5868  0028                     _RF_FreqBuf:	
  5869  0028                     	ds	2
  5870  002A                     _RF_LoRaBandWidthBuf:	
  5871  002A                     	ds	2
  5872  002C                     _RF_ModemBuf:	
  5873  002C                     	ds	2
  5874  002E                     _RF_ModuleName:	
  5875  002E                     	ds	2
  5876  0030                     _RF_PowerBuf:	
  5877  0030                     	ds	2
  5878  0032                     _RF_RSSIBuf:	
  5879  0032                     	ds	2
  5880  0034                     _RF_RateBuf:	
  5881  0034                     	ds	2
  5882  0036                     _gw_BeepTimer:	
  5883  0036                     	ds	2
  5884  0038                     _gw_KeyDebounceTimer:	
  5885  0038                     	ds	2
  5886  003A                     _gw_RF_SentInterval:	
  5887  003A                     	ds	2
  5888  003C                     _gw_ReceiveDataCount:	
  5889  003C                     	ds	2
  5890  003E                     _gw_SendDataCount:	
  5891  003E                     	ds	2
  5892  0040                     _gw_TxLedTimer:	
  5893  0040                     	ds	2
  5894  0042                     _gw_TxTimer:	
  5895  0042                     	ds	2
  5896  0044                     _gb_BandBuf_Addr:	
  5897  0044                     	ds	1
  5898  0045                     _gb_BeepOnCount:	
  5899  0045                     	ds	1
  5900  0046                     _gb_BeepOnFlag:	
  5901  0046                     	ds	1
  5902  0047                     _gb_BeepTimerH:	
  5903  0047                     	ds	1
  5904  0048                     _gb_BeepTimerL:	
  5905  0048                     	ds	1
  5906  0049                     _gb_DispFlashEnableFlag:	
  5907  0049                     	ds	1
  5908  004A                     _gb_DispFlashFlag:	
  5909  004A                     	ds	1
  5910  004B                     _gb_DispFlashFlagBackup:	
  5911  004B                     	ds	1
  5912  004C                     _gb_ErrorFlag:	
  5913  004C                     	ds	1
  5914  004D                     _gb_FdevBuf_Addr:	
  5915  004D                     	ds	1
  5916  004E                     _gb_FirstPowerUpFlag:	
  5917  004E                     	ds	1
  5918  004F                     _gb_FreqBuf_Addr:	
  5919  004F                     	ds	1
  5920  0050                     _gb_KeyDownFlag:	
  5921  0050                     	ds	1
  5922  0051                     _gb_KeyValue:	
  5923  0051                     	ds	1
  5924  0052                     _gb_Modem_Addr_Backup:	
  5925  0052                     	ds	1
  5926  0053                     _gb_ModuleWorkEnableFlag:	
  5927  0053                     	ds	1
  5928  0054                     _gb_ModuleWorkMode:	
  5929  0054                     	ds	1
  5930  0055                     _gb_ParameterChangeFlag:	
  5931  0055                     	ds	1
  5932  0056                     _gb_PowerBuf_Addr:	
  5933  0056                     	ds	1
  5934  0057                     _gb_RateBuf_Addr:	
  5935  0057                     	ds	1
  5936  0058                     _gb_StatusRx:	
  5937  0058                     	ds	1
  5938  0059                     _gb_StatusTx:	
  5939  0059                     	ds	1
  5940  005A                     _gb_SysMode_Set:	
  5941  005A                     	ds	1
  5942  005B                     _gb_SysTimer_1S:	
  5943  005B                     	ds	1
  5944  005C                     _gb_TxLedCount:	
  5945  005C                     	ds	1
  5946  005D                     _gb_WaitStableFlag:	
  5947  005D                     	ds	1
  5948  005E                     _gb_WorkmodeBackup:	
  5949  005E                     	ds	1
  5950  005F                     _gb_RF_RSSI:	
  5951  005F                     	ds	1
  5952                           
  5953                           	psect	bssBANK1
  5954  00A0                     __pbssBANK1:	
  5955  00A0                     _DispBuf:	
  5956  00A0                     	ds	32
  5957  00C0                     _DispBufCache:	
  5958  00C0                     	ds	32
  5959  00E0                     _gw_LCDFlashTimer:	
  5960  00E0                     	ds	2
  5961  00E2                     _gw_TimerCount:	
  5962  00E2                     	ds	2
  5963                           
  5964                           	psect	bssBANK2
  5965  0120                     __pbssBANK2:	
  5966  0120                     _gb_RxData:	
  5967  0120                     	ds	32
  5968                           
  5969                           	psect	bssBANK3
  5970  01A0                     __pbssBANK3:	
  5971  01A0                     _gw_ToneBuf:	
  5972  01A0                     	ds	60
  5973                           
  5974                           	psect	clrtext
  5975  07DF                     clear_ram:	
  5976                           ;	Called with FSR0 containing the base address, and
  5977                           ;	WREG with the size to clear
  5978                           
  5979  07DF  0064               	clrwdt	;clear the watchdog before getting into this loop
  5980  07E0                     clrloop:	
  5981  07E0  0180               	clrf	0	;clear RAM location pointed to by FSR
  5982  07E1  3101               	addfsr 0,1
  5983  07E2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5984  07E3  2FE0               	goto	clrloop	;have we reached the end yet?
  5985  07E4  3400               	retlw	0	;all done for this memory range, return
  5986                           
  5987                           	psect	cstackBANK1
  5988  00E4                     __pcstackBANK1:	
  5989  00E4                     main@TxFlag:	
  5990                           
  5991                           ; 1 bytes @ 0x0
  5992  00E4                     	ds	1
  5993  00E5                     main@RxFlag:	
  5994                           
  5995                           ; 1 bytes @ 0x1
  5996  00E5                     	ds	1
  5997                           
  5998                           	psect	cstackCOMMON
  5999  0070                     __pcstackCOMMON:	
  6000  0070                     ?_RFM98_Config:	
  6001  0070                     ?_InitSfr:	
  6002                           ; 0 bytes @ 0x0
  6003                           
  6004  0070                     ?_PowerUpDelay:	
  6005                           ; 0 bytes @ 0x0
  6006                           
  6007  0070                     ?_InitPort:	
  6008                           ; 0 bytes @ 0x0
  6009                           
  6010  0070                     ?_timer1_init:	
  6011                           ; 0 bytes @ 0x0
  6012                           
  6013  0070                     ?_timer2_init:	
  6014                           ; 0 bytes @ 0x0
  6015                           
  6016  0070                     ?_Uart_init:	
  6017                           ; 0 bytes @ 0x0
  6018                           
  6019  0070                     ?_FlashUnlock:	
  6020                           ; 0 bytes @ 0x0
  6021                           
  6022  0070                     ?_CK1622_WriteCmd:	
  6023                           ; 0 bytes @ 0x0
  6024                           
  6025  0070                     ?_Clr_LCD:	
  6026                           ; 0 bytes @ 0x0
  6027                           
  6028  0070                     ?_LCD_Init:	
  6029                           ; 0 bytes @ 0x0
  6030                           
  6031  0070                     ?_SendSegDataToDispBuf:	
  6032                           ; 0 bytes @ 0x0
  6033                           
  6034  0070                     ?_FlashDisplay:	
  6035                           ; 0 bytes @ 0x0
  6036                           
  6037  0070                     ?_LCD_Display:	
  6038                           ; 0 bytes @ 0x0
  6039                           
  6040  0070                     ?_LCD_DisplayAll:	
  6041                           ; 0 bytes @ 0x0
  6042                           
  6043  0070                     ?_TxLED_Deal:	
  6044                           ; 0 bytes @ 0x0
  6045                           
  6046  0070                     ?_RxLED_Deal:	
  6047                           ; 0 bytes @ 0x0
  6048                           
  6049  0070                     ?_SaveRFParameterToFlash:	
  6050                           ; 0 bytes @ 0x0
  6051                           
  6052  0070                     ?_InitSystemParameter:	
  6053                           ; 0 bytes @ 0x0
  6054                           
  6055  0070                     ?_DisplayRFParameter:	
  6056                           ; 0 bytes @ 0x0
  6057                           
  6058  0070                     ?_ModuleSelectModeEntryCheck:	
  6059                           ; 0 bytes @ 0x0
  6060                           
  6061  0070                     ?_RFParameterSelect:	
  6062                           ; 0 bytes @ 0x0
  6063                           
  6064  0070                     ?_ModemSelect:	
  6065                           ; 0 bytes @ 0x0
  6066                           
  6067  0070                     ?_WorkModeSelect:	
  6068                           ; 0 bytes @ 0x0
  6069                           
  6070  0070                     ?_MenuConfig:	
  6071                           ; 0 bytes @ 0x0
  6072                           
  6073  0070                     ?_BeepOff:	
  6074                           ; 0 bytes @ 0x0
  6075                           
  6076  0070                     ?_PowerOnMusic:	
  6077                           ; 0 bytes @ 0x0
  6078                           
  6079  0070                     ?_RFM98_Standby:	
  6080                           ; 0 bytes @ 0x0
  6081                           
  6082  0070                     ?_RFM98_Sleep:	
  6083                           ; 0 bytes @ 0x0
  6084                           
  6085  0070                     ?_RFM98_EntryLoRa:	
  6086                           ; 0 bytes @ 0x0
  6087                           
  6088  0070                     ?_RFM98_LoRaClearIrq:	
  6089                           ; 0 bytes @ 0x0
  6090                           
  6091  0070                     ?_RFM98_LoRaEntryRx:	
  6092                           ; 0 bytes @ 0x0
  6093                           
  6094  0070                     ?_RFM98_LoRaRxWaitStable:	
  6095                           ; 0 bytes @ 0x0
  6096                           
  6097  0070                     ?_RFM98_LoRaEntryTx:	
  6098                           ; 0 bytes @ 0x0
  6099                           
  6100  0070                     ?_RFM98_LoRaTxWaitStable:	
  6101                           ; 0 bytes @ 0x0
  6102                           
  6103  0070                     ?_RFM98_FskClearFIFO:	
  6104                           ; 0 bytes @ 0x0
  6105                           
  6106  0070                     ?_RFM98_FskEntryRx:	
  6107                           ; 0 bytes @ 0x0
  6108                           
  6109  0070                     ?_RFM98_FSKRxWaitStable:	
  6110                           ; 0 bytes @ 0x0
  6111                           
  6112  0070                     ?_RFM98_FskEntryTx:	
  6113                           ; 0 bytes @ 0x0
  6114                           
  6115  0070                     ?_RFM98_FSKTxWaitStable:	
  6116                           ; 0 bytes @ 0x0
  6117                           
  6118  0070                     ?_RFM98_TestConfig:	
  6119                           ; 0 bytes @ 0x0
  6120                           
  6121  0070                     ?_RFM98_EntryTestTx:	
  6122                           ; 0 bytes @ 0x0
  6123                           
  6124  0070                     ?_RFM98_TestTx:	
  6125                           ; 0 bytes @ 0x0
  6126                           
  6127  0070                     ?_RFM98_EntryTestRx:	
  6128                           ; 0 bytes @ 0x0
  6129                           
  6130  0070                     ?_RFM98_TestRx:	
  6131                           ; 0 bytes @ 0x0
  6132                           
  6133  0070                     ?_SPICmd8bit:	
  6134                           ; 0 bytes @ 0x0
  6135                           
  6136  0070                     ?_main:	
  6137                           ; 0 bytes @ 0x0
  6138                           
  6139  0070                     ?_ISR_timer:	
  6140                           ; 0 bytes @ 0x0
  6141                           
  6142  0070                     ??_ISR_timer:	
  6143                           ; 0 bytes @ 0x0
  6144                           
  6145  0070                     ?i1_BeepOff:	
  6146                           ; 0 bytes @ 0x0
  6147                           
  6148  0070                     ??i1_BeepOff:	
  6149                           ; 0 bytes @ 0x0
  6150                           
  6151  0070                     ?_SPIRead:	
  6152                           ; 0 bytes @ 0x0
  6153                           
  6154  0070                     ?_AsciiToDisplay:	
  6155                           ; 1 bytes @ 0x0
  6156                           
  6157  0070                     ?_KeyRead:	
  6158                           ; 1 bytes @ 0x0
  6159                           
  6160  0070                     ?_KeyScan:	
  6161                           ; 1 bytes @ 0x0
  6162                           
  6163  0070                     ?_RFM98_LoRaReadRSSI:	
  6164                           ; 1 bytes @ 0x0
  6165                           
  6166  0070                     ?_RFM98_LoRaRxPacket:	
  6167                           ; 1 bytes @ 0x0
  6168                           
  6169  0070                     ?_RFM98_LoRaTxPacket:	
  6170                           ; 1 bytes @ 0x0
  6171                           
  6172  0070                     ?_RFM98_ReadRSSI:	
  6173                           ; 1 bytes @ 0x0
  6174                           
  6175  0070                     ?_RFM98_FskRxPacket:	
  6176                           ; 1 bytes @ 0x0
  6177                           
  6178  0070                     ?_RFM98_FskTxPacket:	
  6179                           ; 1 bytes @ 0x0
  6180                           
  6181  0070                     ?_SPIRead8bit:	
  6182                           ; 1 bytes @ 0x0
  6183                           
  6184                           
  6185                           ; 1 bytes @ 0x0
  6186  0070                     	ds	2
  6187  0072                     ?_BeepOn:	
  6188  0072                     ??_InitSfr:	
  6189                           ; 0 bytes @ 0x2
  6190                           
  6191  0072                     ??_InitPort:	
  6192                           ; 0 bytes @ 0x2
  6193                           
  6194  0072                     ??_timer1_init:	
  6195                           ; 0 bytes @ 0x2
  6196                           
  6197  0072                     ??_timer2_init:	
  6198                           ; 0 bytes @ 0x2
  6199                           
  6200  0072                     ??_Uart_init:	
  6201                           ; 0 bytes @ 0x2
  6202                           
  6203  0072                     ?_FlashRead:	
  6204                           ; 0 bytes @ 0x2
  6205                           
  6206  0072                     ??_FlashUnlock:	
  6207                           ; 0 bytes @ 0x2
  6208                           
  6209  0072                     ?_FlashErase:	
  6210                           ; 0 bytes @ 0x2
  6211                           
  6212  0072                     ?_FlashWrite:	
  6213                           ; 0 bytes @ 0x2
  6214                           
  6215  0072                     ?_CK1622_WriteByte:	
  6216                           ; 0 bytes @ 0x2
  6217                           
  6218  0072                     ??_CK1622_WriteCmd:	
  6219                           ; 0 bytes @ 0x2
  6220                           
  6221  0072                     ??_AsciiToDisplay:	
  6222                           ; 0 bytes @ 0x2
  6223                           
  6224  0072                     ??_SendSegDataToDispBuf:	
  6225                           ; 0 bytes @ 0x2
  6226                           
  6227  0072                     ??_FlashDisplay:	
  6228                           ; 0 bytes @ 0x2
  6229                           
  6230  0072                     ??_LCD_DisplayAll:	
  6231                           ; 0 bytes @ 0x2
  6232                           
  6233  0072                     ?_Delay_ms:	
  6234                           ; 0 bytes @ 0x2
  6235                           
  6236  0072                     ??_KeyRead:	
  6237                           ; 0 bytes @ 0x2
  6238                           
  6239  0072                     ??_TxLED_Deal:	
  6240                           ; 0 bytes @ 0x2
  6241                           
  6242  0072                     ??_RxLED_Deal:	
  6243                           ; 0 bytes @ 0x2
  6244                           
  6245  0072                     ??_InitSystemParameter:	
  6246                           ; 0 bytes @ 0x2
  6247                           
  6248  0072                     ??_BeepOff:	
  6249                           ; 0 bytes @ 0x2
  6250                           
  6251  0072                     ??_SPICmd8bit:	
  6252                           ; 0 bytes @ 0x2
  6253                           
  6254  0072                     ??_SPIRead8bit:	
  6255                           ; 0 bytes @ 0x2
  6256                           
  6257  0072                     ?___bmul:	
  6258                           ; 0 bytes @ 0x2
  6259                           
  6260  0072                     ?___lwdiv:	
  6261                           ; 1 bytes @ 0x2
  6262                           
  6263  0072                     CK1622_WriteByte@dat:	
  6264                           ; 2 bytes @ 0x2
  6265                           
  6266  0072                     CK1622_WriteCmd@cmd:	
  6267                           ; 1 bytes @ 0x2
  6268                           
  6269  0072                     AsciiToDisplay@DispData:	
  6270                           ; 1 bytes @ 0x2
  6271                           
  6272  0072                     LCD_DisplayAll@i:	
  6273                           ; 1 bytes @ 0x2
  6274                           
  6275  0072                     KeyRead@temp:	
  6276                           ; 1 bytes @ 0x2
  6277                           
  6278  0072                     SPICmd8bit@WrPara:	
  6279                           ; 1 bytes @ 0x2
  6280                           
  6281  0072                     SPIRead8bit@RdPara:	
  6282                           ; 1 bytes @ 0x2
  6283                           
  6284  0072                     ___bmul@multiplicand:	
  6285                           ; 1 bytes @ 0x2
  6286                           
  6287  0072                     BeepOn@Tone:	
  6288                           ; 1 bytes @ 0x2
  6289                           
  6290  0072                     ___lwdiv@divisor:	
  6291                           ; 2 bytes @ 0x2
  6292                           
  6293  0072                     FlashRead@FlashAdr:	
  6294                           ; 2 bytes @ 0x2
  6295                           
  6296  0072                     FlashErase@FlashAdr:	
  6297                           ; 4 bytes @ 0x2
  6298                           
  6299  0072                     FlashWrite@FlashAdr:	
  6300                           ; 4 bytes @ 0x2
  6301                           
  6302  0072                     Delay_ms@time:	
  6303                           ; 4 bytes @ 0x2
  6304                           
  6305                           
  6306                           ; 4 bytes @ 0x2
  6307  0072                     	ds	1
  6308  0073                     ??_CK1622_WriteByte:	
  6309  0073                     ??_KeyScan:	
  6310                           ; 0 bytes @ 0x3
  6311                           
  6312  0073                     ??___bmul:	
  6313                           ; 0 bytes @ 0x3
  6314                           
  6315  0073                     CK1622_WriteByte@addr:	
  6316                           ; 0 bytes @ 0x3
  6317                           
  6318  0073                     AsciiToDisplay@Letter:	
  6319                           ; 1 bytes @ 0x3
  6320                           
  6321  0073                     FlashDisplay@i:	
  6322                           ; 1 bytes @ 0x3
  6323                           
  6324  0073                     KeyScan@keyValue:	
  6325                           ; 1 bytes @ 0x3
  6326                           
  6327  0073                     SPICmd8bit@bitcnt:	
  6328                           ; 1 bytes @ 0x3
  6329                           
  6330  0073                     SPIRead8bit@bitcnt:	
  6331                           ; 1 bytes @ 0x3
  6332                           
  6333  0073                     ___bmul@product:	
  6334                           ; 1 bytes @ 0x3
  6335                           
  6336  0073                     CK1622_WriteCmd@temp:	
  6337                           ; 1 bytes @ 0x3
  6338                           
  6339                           
  6340                           ; 2 bytes @ 0x3
  6341  0073                     	ds	1
  6342  0074                     ??_BeepOn:	
  6343  0074                     ??_SPIRead:	
  6344                           ; 0 bytes @ 0x4
  6345                           
  6346  0074                     ?_SPIBurstRead:	
  6347                           ; 0 bytes @ 0x4
  6348                           
  6349  0074                     ?_BurstWrite:	
  6350                           ; 0 bytes @ 0x4
  6351                           
  6352  0074                     ?_SendStringToDispBuf:	
  6353                           ; 0 bytes @ 0x4
  6354                           
  6355  0074                     KeyScan@temp:	
  6356                           ; 0 bytes @ 0x4
  6357                           
  6358  0074                     SPIRead@adr:	
  6359                           ; 1 bytes @ 0x4
  6360                           
  6361  0074                     SPIBurstRead@ptr:	
  6362                           ; 1 bytes @ 0x4
  6363                           
  6364  0074                     ___bmul@multiplier:	
  6365                           ; 1 bytes @ 0x4
  6366                           
  6367  0074                     CK1622_WriteByte@temp:	
  6368                           ; 1 bytes @ 0x4
  6369                           
  6370  0074                     SendStringToDispBuf@datBuf:	
  6371                           ; 2 bytes @ 0x4
  6372                           
  6373  0074                     BurstWrite@ptr:	
  6374                           ; 2 bytes @ 0x4
  6375                           
  6376  0074                     ___lwdiv@dividend:	
  6377                           ; 2 bytes @ 0x4
  6378                           
  6379                           
  6380                           ; 2 bytes @ 0x4
  6381  0074                     	ds	1
  6382  0075                     ?_SPIWrite:	
  6383  0075                     CK1622_WriteCmd@i:	
  6384                           ; 0 bytes @ 0x5
  6385                           
  6386  0075                     SPIRead@tmp:	
  6387                           ; 1 bytes @ 0x5
  6388                           
  6389  0075                     SPIBurstRead@length:	
  6390                           ; 1 bytes @ 0x5
  6391                           
  6392  0075                     SPIWrite@WrPara:	
  6393                           ; 1 bytes @ 0x5
  6394                           
  6395                           
  6396                           ; 2 bytes @ 0x5
  6397  0075                     	ds	1
  6398  0076                     ??_SPIBurstRead:	
  6399  0076                     ??_FlashErase:	
  6400                           ; 0 bytes @ 0x6
  6401                           
  6402  0076                     ??_Delay_ms:	
  6403                           ; 0 bytes @ 0x6
  6404                           
  6405  0076                     ??_RFM98_LoRaRxWaitStable:	
  6406                           ; 0 bytes @ 0x6
  6407                           
  6408  0076                     ??_RFM98_LoRaReadRSSI:	
  6409                           ; 0 bytes @ 0x6
  6410                           
  6411  0076                     ??_RFM98_LoRaTxWaitStable:	
  6412                           ; 0 bytes @ 0x6
  6413                           
  6414  0076                     ??_RFM98_ReadRSSI:	
  6415                           ; 0 bytes @ 0x6
  6416                           
  6417  0076                     ??_RFM98_FSKRxWaitStable:	
  6418                           ; 0 bytes @ 0x6
  6419                           
  6420  0076                     ??_RFM98_FSKTxWaitStable:	
  6421                           ; 0 bytes @ 0x6
  6422                           
  6423  0076                     ??___lwdiv:	
  6424                           ; 0 bytes @ 0x6
  6425                           
  6426  0076                     FlashRead@array:	
  6427                           ; 0 bytes @ 0x6
  6428                           
  6429  0076                     FlashWrite@array:	
  6430                           ; 1 bytes @ 0x6
  6431                           
  6432  0076                     CK1622_WriteByte@i:	
  6433                           ; 1 bytes @ 0x6
  6434                           
  6435  0076                     SendStringToDispBuf@j:	
  6436                           ; 1 bytes @ 0x6
  6437                           
  6438  0076                     RFM98_LoRaTxWaitStable@temp:	
  6439                           ; 1 bytes @ 0x6
  6440                           
  6441  0076                     RFM98_ReadRSSI@temp:	
  6442                           ; 1 bytes @ 0x6
  6443                           
  6444  0076                     BurstWrite@length:	
  6445                           ; 1 bytes @ 0x6
  6446                           
  6447  0076                     ___lwdiv@counter:	
  6448                           ; 1 bytes @ 0x6
  6449                           
  6450  0076                     RFM98_LoRaReadRSSI@temp:	
  6451                           ; 1 bytes @ 0x6
  6452                           
  6453                           
  6454                           ; 2 bytes @ 0x6
  6455  0076                     	ds	1
  6456  0077                     ??_SPIWrite:	
  6457  0077                     ??_BurstWrite:	
  6458                           ; 0 bytes @ 0x7
  6459                           
  6460  0077                     ??_FlashRead:	
  6461                           ; 0 bytes @ 0x7
  6462                           
  6463  0077                     ??_FlashWrite:	
  6464                           ; 0 bytes @ 0x7
  6465                           
  6466  0077                     ??_Clr_LCD:	
  6467                           ; 0 bytes @ 0x7
  6468                           
  6469  0077                     ??_LCD_Display:	
  6470                           ; 0 bytes @ 0x7
  6471                           
  6472  0077                     Clr_LCD@j:	
  6473                           ; 0 bytes @ 0x7
  6474                           
  6475  0077                     SendStringToDispBuf@i:	
  6476                           ; 1 bytes @ 0x7
  6477                           
  6478  0077                     LCD_Display@i:	
  6479                           ; 1 bytes @ 0x7
  6480                           
  6481  0077                     SPIWrite@bitcnt:	
  6482                           ; 1 bytes @ 0x7
  6483                           
  6484  0077                     SPIBurstRead@adr:	
  6485                           ; 1 bytes @ 0x7
  6486                           
  6487  0077                     ___lwdiv@quotient:	
  6488                           ; 1 bytes @ 0x7
  6489                           
  6490                           
  6491                           ; 2 bytes @ 0x7
  6492  0077                     	ds	1
  6493  0078                     ??_RFM98_Config:	
  6494  0078                     ??_RFM98_Standby:	
  6495                           ; 0 bytes @ 0x8
  6496                           
  6497  0078                     ??_RFM98_Sleep:	
  6498                           ; 0 bytes @ 0x8
  6499                           
  6500  0078                     ??_RFM98_EntryLoRa:	
  6501                           ; 0 bytes @ 0x8
  6502                           
  6503  0078                     ??_RFM98_LoRaClearIrq:	
  6504                           ; 0 bytes @ 0x8
  6505                           
  6506  0078                     ??_RFM98_FskClearFIFO:	
  6507                           ; 0 bytes @ 0x8
  6508                           
  6509  0078                     ??_RFM98_TestConfig:	
  6510                           ; 0 bytes @ 0x8
  6511                           
  6512  0078                     ??_RFM98_TestTx:	
  6513                           ; 0 bytes @ 0x8
  6514                           
  6515  0078                     ??_RFM98_TestRx:	
  6516                           ; 0 bytes @ 0x8
  6517                           
  6518  0078                     FlashRead@i:	
  6519                           ; 0 bytes @ 0x8
  6520                           
  6521  0078                     FlashWrite@i:	
  6522                           ; 1 bytes @ 0x8
  6523                           
  6524  0078                     Clr_LCD@i:	
  6525                           ; 1 bytes @ 0x8
  6526                           
  6527  0078                     SendStringToDispBuf@length:	
  6528                           ; 1 bytes @ 0x8
  6529                           
  6530  0078                     SPIBurstRead@i:	
  6531                           ; 1 bytes @ 0x8
  6532                           
  6533                           
  6534                           ; 1 bytes @ 0x8
  6535  0078                     	ds	1
  6536  0079                     ??_LCD_Init:	
  6537  0079                     ??_SaveRFParameterToFlash:	
  6538                           ; 0 bytes @ 0x9
  6539                           
  6540  0079                     ??_ModuleSelectModeEntryCheck:	
  6541                           ; 0 bytes @ 0x9
  6542                           
  6543  0079                     ??_RFM98_LoRaRxPacket:	
  6544                           ; 0 bytes @ 0x9
  6545                           
  6546  0079                     ??_RFM98_LoRaTxPacket:	
  6547                           ; 0 bytes @ 0x9
  6548                           
  6549  0079                     ??_RFM98_FskRxPacket:	
  6550                           ; 0 bytes @ 0x9
  6551                           
  6552  0079                     ??_RFM98_FskTxPacket:	
  6553                           ; 0 bytes @ 0x9
  6554                           
  6555  0079                     ??___lwmod:	
  6556                           ; 0 bytes @ 0x9
  6557                           
  6558  0079                     SendStringToDispBuf@addr:	
  6559                           ; 0 bytes @ 0x9
  6560                           
  6561  0079                     SaveRFParameterToFlash@i:	
  6562                           ; 1 bytes @ 0x9
  6563                           
  6564  0079                     BeepOn@i:	
  6565                           ; 1 bytes @ 0x9
  6566                           
  6567  0079                     RFM98_FskTxPacket@TxFlag:	
  6568                           ; 1 bytes @ 0x9
  6569                           
  6570  0079                     ___lwmod@counter:	
  6571                           ; 1 bytes @ 0x9
  6572                           
  6573                           
  6574                           ; 1 bytes @ 0x9
  6575  0079                     	ds	1
  6576  007A                     ??_PowerUpDelay:	
  6577  007A                     ??_SendNumberToDispBuf:	
  6578                           ; 0 bytes @ 0xA
  6579                           
  6580  007A                     ??_MenuConfig:	
  6581                           ; 0 bytes @ 0xA
  6582                           
  6583  007A                     ??_PowerOnMusic:	
  6584                           ; 0 bytes @ 0xA
  6585                           
  6586  007A                     ??_RFM98_LoRaEntryRx:	
  6587                           ; 0 bytes @ 0xA
  6588                           
  6589  007A                     ??_RFM98_LoRaEntryTx:	
  6590                           ; 0 bytes @ 0xA
  6591                           
  6592  007A                     ??_RFM98_EntryTestTx:	
  6593                           ; 0 bytes @ 0xA
  6594                           
  6595  007A                     ??_RFM98_EntryTestRx:	
  6596                           ; 0 bytes @ 0xA
  6597                           
  6598  007A                     ??_RFM98_Running:	
  6599                           ; 0 bytes @ 0xA
  6600                           
  6601  007A                     ??_main:	
  6602                           ; 0 bytes @ 0xA
  6603                           
  6604                           
  6605                           	psect	cstackBANK0
  6606  0060                     __pcstackBANK0:	
  6607                           ; 0 bytes @ 0xA
  6608                           
  6609  0060                     ??_SendStringToDispBuf:	
  6610  0060                     ??_RFParameterSelect:	
  6611                           ; 0 bytes @ 0x0
  6612                           
  6613  0060                     ??_ModemSelect:	
  6614                           ; 0 bytes @ 0x0
  6615                           
  6616  0060                     ??_WorkModeSelect:	
  6617                           ; 0 bytes @ 0x0
  6618                           
  6619  0060                     ?___lwmod:	
  6620                           ; 0 bytes @ 0x0
  6621                           
  6622  0060                     RFM98_LoRaRxPacket@addr:	
  6623                           ; 2 bytes @ 0x0
  6624                           
  6625  0060                     RFM98_FskRxPacket@i:	
  6626                           ; 1 bytes @ 0x0
  6627                           
  6628  0060                     RFM98_Config@mode:	
  6629                           ; 1 bytes @ 0x0
  6630                           
  6631  0060                     RFM98_TestConfig@i:	
  6632                           ; 1 bytes @ 0x0
  6633                           
  6634  0060                     BurstWrite@adr:	
  6635                           ; 1 bytes @ 0x0
  6636                           
  6637  0060                     Delay_ms@i:	
  6638                           ; 1 bytes @ 0x0
  6639                           
  6640  0060                     ___lwmod@divisor:	
  6641                           ; 2 bytes @ 0x0
  6642                           
  6643                           
  6644                           ; 2 bytes @ 0x0
  6645  0060                     	ds	1
  6646  0061                     RFM98_LoRaRxPacket@packet_size:	
  6647  0061                     RFM98_Config@tmp:	
  6648                           ; 1 bytes @ 0x1
  6649                           
  6650  0061                     RFM98_EntryTestTx@i:	
  6651                           ; 1 bytes @ 0x1
  6652                           
  6653  0061                     RFM98_EntryTestRx@i:	
  6654                           ; 1 bytes @ 0x1
  6655                           
  6656  0061                     BurstWrite@i:	
  6657                           ; 1 bytes @ 0x1
  6658                           
  6659                           
  6660                           ; 1 bytes @ 0x1
  6661  0061                     	ds	1
  6662  0062                     ModemSelect@KeyValue:	
  6663  0062                     WorkModeSelect@KeyValue:	
  6664                           ; 1 bytes @ 0x2
  6665                           
  6666  0062                     RFM98_LoRaRxPacket@i:	
  6667                           ; 1 bytes @ 0x2
  6668                           
  6669  0062                     RFM98_LoRaTxPacket@addr:	
  6670                           ; 1 bytes @ 0x2
  6671                           
  6672  0062                     RFM98_Config@i:	
  6673                           ; 1 bytes @ 0x2
  6674                           
  6675  0062                     ___lwmod@dividend:	
  6676                           ; 1 bytes @ 0x2
  6677                           
  6678                           
  6679                           ; 2 bytes @ 0x2
  6680  0062                     	ds	1
  6681  0063                     ??_RFM98_FskEntryRx:	
  6682  0063                     ??_RFM98_FskEntryTx:	
  6683                           ; 0 bytes @ 0x3
  6684                           
  6685  0063                     RFM98_LoRaEntryRx@addr:	
  6686                           ; 0 bytes @ 0x3
  6687                           
  6688  0063                     RFM98_LoRaEntryTx@addr:	
  6689                           ; 1 bytes @ 0x3
  6690                           
  6691  0063                     RFM98_LoRaTxPacket@TxFlag:	
  6692                           ; 1 bytes @ 0x3
  6693                           
  6694                           
  6695                           ; 1 bytes @ 0x3
  6696  0063                     	ds	1
  6697  0064                     ?_SendNumberToDispBuf:	
  6698  0064                     RFParameterSelect@KeyValue:	
  6699                           ; 0 bytes @ 0x4
  6700                           
  6701  0064                     SendNumberToDispBuf@dat:	
  6702                           ; 1 bytes @ 0x4
  6703                           
  6704                           
  6705                           ; 2 bytes @ 0x4
  6706  0064                     	ds	1
  6707  0065                     RFM98_FskEntryRx@i:	
  6708  0065                     RFM98_FskEntryTx@i:	
  6709                           ; 1 bytes @ 0x5
  6710                           
  6711                           
  6712                           ; 1 bytes @ 0x5
  6713  0065                     	ds	1
  6714  0066                     ?_RFM98_Running:	
  6715  0066                     SendNumberToDispBuf@length:	
  6716                           ; 0 bytes @ 0x6
  6717                           
  6718  0066                     RFM98_Running@WorkStatus:	
  6719                           ; 1 bytes @ 0x6
  6720                           
  6721                           
  6722                           ; 1 bytes @ 0x6
  6723  0066                     	ds	1
  6724  0067                     SendNumberToDispBuf@temp:	
  6725  0067                     RFM98_Running@ParaChangeFlag:	
  6726                           ; 1 bytes @ 0x7
  6727                           
  6728                           
  6729                           ; 1 bytes @ 0x7
  6730  0067                     	ds	1
  6731  0068                     SendNumberToDispBuf@addr:	
  6732  0068                     RFM98_Running@TxFlag:	
  6733                           ; 1 bytes @ 0x8
  6734                           
  6735                           
  6736                           ; 1 bytes @ 0x8
  6737  0068                     	ds	1
  6738  0069                     ??_DisplayRFParameter:	
  6739  0069                     RFM98_Running@RxFlag:	
  6740                           ; 0 bytes @ 0x9
  6741                           
  6742                           
  6743                           ; 1 bytes @ 0x9
  6744  0069                     	ds	1
  6745  006A                     RFM98_Running@RSSI:	
  6746                           
  6747                           ; 1 bytes @ 0xA
  6748  006A                     	ds	1
  6749  006B                     RFM98_Running@mode:	
  6750                           
  6751                           ; 1 bytes @ 0xB
  6752  006B                     	ds	1
  6753  006C                     RFM98_Running@temp:	
  6754                           
  6755                           ; 1 bytes @ 0xC
  6756  006C                     	ds	1
  6757  006D                     DisplayRFParameter@TempDispBuf:	
  6758                           
  6759                           ; 2 bytes @ 0xD
  6760  006D                     	ds	2
  6761  006F                     MenuConfig@KeyValue:	
  6762                           
  6763                           ; 1 bytes @ 0xF
  6764  006F                     	ds	1
  6765                           
  6766                           	psect	text2152
  6767  089D                     __ptext2152:	
  6768 ;; =============== function _MenuConfig ends ============
  6769                           
  6770                           
  6771 ;; *************** function _RFM98_TestRx *****************
  6772 ;; Defined at:
  6773 ;;		line 901 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;		None
  6776 ;; Auto vars:     Size  Location     Type
  6777 ;;		None
  6778 ;; Return value:  Size  Location     Type
  6779 ;;		None               void
  6780 ;; Registers used:
  6781 ;;		wreg, status,2, status,0, pclath, cstack
  6782 ;; Tracked objects:
  6783 ;;		On entry : 1F/0
  6784 ;;		On exit  : 1F/0
  6785 ;;		Unchanged: FFFE0/0
  6786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6791 ;;Total ram usage:        0 bytes
  6792 ;; Hardware stack levels used:    1
  6793 ;; Hardware stack levels required when called:    5
  6794 ;; This function calls:
  6795 ;;		_RFM98_FSKRxWaitStable
  6796 ;; This function is called by:
  6797 ;;		_RFM98_Running
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800  089D                     _RFM98_TestRx:	
  6801                           
  6802                           ;DK_RFM98.c: 902: RFM98_FSKRxWaitStable();
  6803                           
  6804                           ; Regs used in _RFM98_TestRx: [wreg+status,2+status,0+pclath+cstack]
  6805  089D  20E3  3188         	fcall	_RFM98_FSKRxWaitStable
  6806                           
  6807                           ;DK_RFM98.c: 903: if(gb_WaitStableFlag==1)
  6808  089F  0B5D               	decfsz	_gb_WaitStableFlag,w
  6809  08A0  0008               	return
  6810                           
  6811                           ;DK_RFM98.c: 904: {
  6812                           ;DK_RFM98.c: 905: gb_WaitStableFlag=2;
  6813  08A1  3002               	movlw	2
  6814  08A2  00DD               	movwf	_gb_WaitStableFlag
  6815                           
  6816                           ;DK_RFM98.c: 906: gb_StatusRx=1;
  6817  08A3  01D8               	clrf	_gb_StatusRx
  6818  08A4  0AD8               	incf	_gb_StatusRx,f
  6819  08A5  0008               	return
  6820  08A6                     __end_of_RFM98_TestRx:	
  6821  08A6                     __ptext2158:	
  6822 ;; =============== function _RFM98_FskEntryTx ends ============
  6823                           
  6824                           
  6825 ;; *************** function _RFM98_FskRxPacket *****************
  6826 ;; Defined at:
  6827 ;;		line 592 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;		None
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  i               1    0[BANK0 ] unsigned char 
  6832 ;; Return value:  Size  Location     Type
  6833 ;;                  1    wreg      unsigned char 
  6834 ;; Registers used:
  6835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6836 ;; Tracked objects:
  6837 ;;		On entry : 1F/0
  6838 ;;		On exit  : 1F/0
  6839 ;;		Unchanged: FFFE0/0
  6840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6842 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6844 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6845 ;;Total ram usage:        2 bytes
  6846 ;; Hardware stack levels used:    1
  6847 ;; Hardware stack levels required when called:    5
  6848 ;; This function calls:
  6849 ;;		_RFM98_FSKRxWaitStable
  6850 ;;		_SPIBurstRead
  6851 ;;		_RFM98_FskClearFIFO
  6852 ;; This function is called by:
  6853 ;;		_RFM98_Running
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856  08A6                     _RFM98_FskRxPacket:	
  6857                           
  6858                           ;DK_RFM98.c: 593: u8 i;
  6859                           ;DK_RFM98.c: 595: RFM98_FSKRxWaitStable();
  6860                           
  6861                           ; Regs used in _RFM98_FskRxPacket: [wreg-status,0+pclath+cstack]
  6862  08A6  20E3  3188         	fcall	_RFM98_FSKRxWaitStable
  6863                           
  6864                           ;DK_RFM98.c: 596: if(gb_WaitStableFlag==1)
  6865  08A8  0B5D               	decfsz	_gb_WaitStableFlag,w
  6866  08A9  28AE               	goto	l16699
  6867                           
  6868                           ;DK_RFM98.c: 597: {
  6869                           ;DK_RFM98.c: 598: gb_WaitStableFlag=2;
  6870  08AA  3002               	movlw	2
  6871  08AB  00DD               	movwf	_gb_WaitStableFlag
  6872                           
  6873                           ;DK_RFM98.c: 599: gb_StatusRx=1;
  6874  08AC  01D8               	clrf	_gb_StatusRx
  6875  08AD  0AD8               	incf	_gb_StatusRx,f
  6876  08AE                     l16699:	
  6877                           
  6878                           ;DK_RFM98.c: 600: }
  6879                           ;DK_RFM98.c: 602: if((RB5) && (gb_StatusRx==1))
  6880  08AE  1E8D               	btfss	13,5
  6881  08AF  3400               	retlw	0
  6882  08B0  0B58               	decfsz	_gb_StatusRx,w
  6883  08B1  3400               	retlw	0
  6884                           
  6885                           ;DK_RFM98.c: 603: {
  6886                           ;DK_RFM98.c: 604: for(i=0;i<32;i++)
  6887  08B2  01E0               	clrf	RFM98_FskRxPacket@i
  6888  08B3                     l16709:	
  6889                           
  6890                           ;DK_RFM98.c: 605: gb_RxData[i] = 0x00;
  6891  08B3  0860               	movf	RFM98_FskRxPacket@i,w
  6892  08B4  220C  3188         	fcall	PL42	;call to abstracted procedure
  6893  08B6  0AE0               	incf	RFM98_FskRxPacket@i,f
  6894  08B7  0260               	subwf	RFM98_FskRxPacket@i,w
  6895  08B8  1C03               	skipc
  6896  08B9  28B3               	goto	l16709
  6897                           
  6898                           ;DK_RFM98.c: 607: SPIBurstRead(0x00, gb_RxData, 21);
  6899  08BA  3020               	movlw	_gb_RxData& (0+255)
  6900  08BB  00F4               	movwf	?_SPIBurstRead
  6901  08BC  3015               	movlw	21
  6902  08BD  00F5               	movwf	?_SPIBurstRead+1
  6903  08BE  3000               	movlw	0
  6904  08BF  21A8  3188         	fcall	_SPIBurstRead
  6905                           
  6906                           ;DK_RFM98.c: 608: RFM98_FskClearFIFO();
  6907  08C1  20D8  3188         	fcall	_RFM98_FskClearFIFO
  6908                           
  6909                           ;DK_RFM98.c: 609: for(i=0;i<17;i++)
  6910  08C3  01E0               	clrf	RFM98_FskRxPacket@i
  6911  08C4                     l16725:	
  6912                           
  6913                           ;DK_RFM98.c: 610: {
  6914                           ;DK_RFM98.c: 611: if(gb_RxData[i]!=RFM98Data[i])
  6915  08C4  0860               	movf	RFM98_FskRxPacket@i,w
  6916  08C5  2213  3188         	fcall	PL51	;call to abstracted procedure
  6917  08C7  00F9               	movwf	??_RFM98_FskRxPacket
  6918  08C8  0860               	movf	RFM98_FskRxPacket@i,w
  6919  08C9  221F  3188         	fcall	PL61	;call to abstracted procedure
  6920  08CB  0679               	xorwf	??_RFM98_FskRxPacket,w
  6921  08CC  3011               	movlw	17
  6922  08CD  1D03               	btfss	3,2
  6923  08CE  28D4               	goto	L3
  6924  08CF  0AE0               	incf	RFM98_FskRxPacket@i,f
  6925  08D0  0260               	subwf	RFM98_FskRxPacket@i,w
  6926  08D1  1C03               	skipc
  6927  08D2  28C4               	goto	l16725
  6928                           
  6929                           ;DK_RFM98.c: 613: }
  6930                           ;DK_RFM98.c: 614: if(i>=17)
  6931  08D3  3011               	movlw	17
  6932  08D4                     L3:	
  6933  08D4  0260               	subwf	RFM98_FskRxPacket@i,w
  6934  08D5  1803               	btfsc	3,0
  6935                           
  6936                           ;DK_RFM98.c: 615: return(1);
  6937  08D6  3401               	retlw	1
  6938                           
  6939                           ;DK_RFM98.c: 616: else
  6940                           ;DK_RFM98.c: 617: return(0);
  6941  08D7  3400               	retlw	0
  6942  08D8                     __end_of_RFM98_FskRxPacket:	
  6943  08D8                     __ptext2180:	
  6944 ;; =============== function _PowerUpDelay ends ============
  6945                           
  6946                           
  6947 ;; *************** function _RFM98_FskClearFIFO *****************
  6948 ;; Defined at:
  6949 ;;		line 531 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;		None
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;		None
  6954 ;; Return value:  Size  Location     Type
  6955 ;;		None               void
  6956 ;; Registers used:
  6957 ;;		wreg, status,2, status,0, pclath, cstack
  6958 ;; Tracked objects:
  6959 ;;		On entry : 1F/0
  6960 ;;		On exit  : 1F/0
  6961 ;;		Unchanged: FFFE0/0
  6962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6967 ;;Total ram usage:        0 bytes
  6968 ;; Hardware stack levels used:    1
  6969 ;; Hardware stack levels required when called:    3
  6970 ;; This function calls:
  6971 ;;		_SPIWrite
  6972 ;; This function is called by:
  6973 ;;		_RFM98_FskRxPacket
  6974 ;; This function uses a non-reentrant model
  6975 ;;
  6976  08D8                     _RFM98_FskClearFIFO:	
  6977                           
  6978                           ;DK_RFM98.c: 532: SPIWrite(0x0101);
  6979                           
  6980                           ; Regs used in _RFM98_FskClearFIFO: [wreg+status,2+status,0+pclath+cstack]
  6981  08D8  3001               	movlw	1
  6982  08D9  00F5               	movwf	?_SPIWrite
  6983  08DA  00F6               	movwf	?_SPIWrite+1
  6984  08DB  3196  26EC         	fcall	_SPIWrite
  6985                           
  6986                           ;DK_RFM98.c: 533: SPIWrite(0x0105+0x08);
  6987  08DD  300D               	movlw	13
  6988  08DE  00F5               	movwf	?_SPIWrite
  6989  08DF  3001               	movlw	1
  6990  08E0  00F6               	movwf	?_SPIWrite+1
  6991  08E1  3196  2EEC         	ljmp	l14923
  6992  08E3                     __end_of_RFM98_FskClearFIFO:	
  6993  08E3                     __ptext2169:	
  6994 ;; =============== function _RFM98_FSKTxWaitStable ends ============
  6995                           
  6996                           
  6997 ;; *************** function _RFM98_FSKRxWaitStable *****************
  6998 ;; Defined at:
  6999 ;;		line 566 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  7000 ;; Parameters:    Size  Location     Type
  7001 ;;		None
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;		None               void
  7006 ;; Registers used:
  7007 ;;		wreg, status,2, status,0, pclath, cstack
  7008 ;; Tracked objects:
  7009 ;;		On entry : 1F/0
  7010 ;;		On exit  : 1F/0
  7011 ;;		Unchanged: FFFE0/0
  7012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;Total ram usage:        2 bytes
  7018 ;; Hardware stack levels used:    1
  7019 ;; Hardware stack levels required when called:    4
  7020 ;; This function calls:
  7021 ;;		_SPIRead
  7022 ;; This function is called by:
  7023 ;;		_RFM98_FskRxPacket
  7024 ;;		_RFM98_TestRx
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027  08E3                     _RFM98_FSKRxWaitStable:	
  7028                           
  7029                           ;DK_RFM98.c: 567: if(gb_WaitStableFlag==0x0f)
  7030                           
  7031                           ; Regs used in _RFM98_FSKRxWaitStable: [wreg+status,2+status,0+pclath+cstack]
  7032  08E3  085D               	movf	_gb_WaitStableFlag,w
  7033  08E4  3A0F               	xorlw	15
  7034  08E5  1D03               	skipz
  7035  08E6  0008               	return
  7036                           
  7037                           ;DK_RFM98.c: 568: {
  7038                           ;DK_RFM98.c: 569: if(gb_SysTimer_1S!=0)
  7039  08E7  085B               	movf	_gb_SysTimer_1S,w
  7040  08E8  1903               	btfsc	3,2
  7041  08E9  28F7               	goto	l5370
  7042                           
  7043                           ;DK_RFM98.c: 570: {
  7044                           ;DK_RFM98.c: 571: if((SPIRead(0x3E)&0xC0)==0xC0)
  7045  08EA  303E               	movlw	62
  7046  08EB  3197  2711  3188   	fcall	_SPIRead
  7047  08EE  00F6               	movwf	??_RFM98_FSKRxWaitStable
  7048  08EF  39C0               	andlw	192
  7049  08F0  00F7               	movwf	??_RFM98_FSKRxWaitStable+1
  7050  08F1  3AC0               	xorlw	192
  7051  08F2  1D03               	skipz
  7052  08F3  0008               	return
  7053                           
  7054                           ;DK_RFM98.c: 572: {
  7055                           ;DK_RFM98.c: 573: gb_WaitStableFlag=1;
  7056  08F4  01DD               	clrf	_gb_WaitStableFlag
  7057  08F5  0ADD               	incf	_gb_WaitStableFlag,f
  7058  08F6  0008               	return
  7059  08F7                     l5370:	
  7060                           
  7061                           ;DK_RFM98.c: 576: else
  7062                           ;DK_RFM98.c: 577: {
  7063                           ;DK_RFM98.c: 578: gb_ErrorFlag=1;
  7064                           
  7065                           ;DK_RFM98.c: 579: gb_WaitStableFlag=0;
  7066  08F7  2A1B               	ljmp	PL58	;call to abstracted procedure
  7067  08F8                     __end_of_RFM98_FSKRxWaitStable:	
  7068  08F8                     __ptext2156:	
  7069 ;; =============== function _RFM98_EntryTestTx ends ============
  7070                           
  7071                           
  7072 ;; *************** function _RFM98_FskTxPacket *****************
  7073 ;; Defined at:
  7074 ;;		line 677 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;		None
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;  TxFlag          1    9[COMMON] unsigned char 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  1    wreg      unsigned char 
  7081 ;; Registers used:
  7082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7083 ;; Tracked objects:
  7084 ;;		On entry : 1F/0
  7085 ;;		On exit  : 1F/0
  7086 ;;		Unchanged: FFFE0/0
  7087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;Total ram usage:        1 bytes
  7093 ;; Hardware stack levels used:    1
  7094 ;; Hardware stack levels required when called:    5
  7095 ;; This function calls:
  7096 ;;		_RFM98_FSKTxWaitStable
  7097 ;;		_BurstWrite
  7098 ;;		_RFM98_Standby
  7099 ;;		_SPIWrite
  7100 ;; This function is called by:
  7101 ;;		_RFM98_Running
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104  08F8                     _RFM98_FskTxPacket:	
  7105                           
  7106                           ;DK_RFM98.c: 678: u8 TxFlag=0;
  7107                           
  7108                           ; Regs used in _RFM98_FskTxPacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7109  08F8  01F9               	clrf	RFM98_FskTxPacket@TxFlag
  7110                           
  7111                           ;DK_RFM98.c: 680: RFM98_FSKTxWaitStable();
  7112  08F9  21F7  3188         	fcall	_RFM98_FSKTxWaitStable
  7113                           
  7114                           ;DK_RFM98.c: 681: if(gb_WaitStableFlag==1)
  7115  08FB  0B5D               	decfsz	_gb_WaitStableFlag,w
  7116  08FC  2910               	goto	l16803
  7117                           
  7118                           ;DK_RFM98.c: 682: {
  7119                           ;DK_RFM98.c: 683: gb_WaitStableFlag=2;
  7120  08FD  3002               	movlw	2
  7121  08FE  00DD               	movwf	_gb_WaitStableFlag
  7122                           
  7123                           ;DK_RFM98.c: 684: if(gb_StatusTx==0)
  7124  08FF  08D9               	movf	_gb_StatusTx,f
  7125  0900  1D03               	skipz
  7126  0901  2910               	goto	l16803
  7127                           
  7128                           ;DK_RFM98.c: 685: {
  7129                           ;DK_RFM98.c: 686: gb_StatusTx=1;
  7130  0902  01D9               	clrf	_gb_StatusTx
  7131  0903  0AD9               	incf	_gb_StatusTx,f
  7132                           
  7133                           ;DK_RFM98.c: 687: gw_TxTimer=gw_RF_SentInterval;
  7134  0904  083B               	movf	_gw_RF_SentInterval+1,w
  7135  0905  00C3               	movwf	_gw_TxTimer+1
  7136  0906  083A               	movf	_gw_RF_SentInterval,w
  7137  0907  00C2               	movwf	_gw_TxTimer
  7138                           
  7139                           ;DK_RFM98.c: 688: BurstWrite(0x00, (u8 *)RFM98Data, 21);
  7140  0908  30F0               	movlw	low (_RFM98Data| (0+32768))
  7141  0909  3197  2783  3188   	fcall	PL38	;call to abstracted procedure
  7142  090C  2138  3188         	fcall	_BurstWrite
  7143                           
  7144                           ;DK_RFM98.c: 689: TxFlag=1;
  7145                           
  7146                           ;DK_RFM98.c: 690: gb_WaitStableFlag=3;
  7147  090E  222A  3188         	fcall	PL70	;call to abstracted procedure
  7148  0910                     l16803:	
  7149                           
  7150                           ;DK_RFM98.c: 691: }
  7151                           ;DK_RFM98.c: 692: }
  7152                           ;DK_RFM98.c: 693: if(gb_StatusTx==1)
  7153  0910  0B59               	decfsz	_gb_StatusTx,w
  7154  0911  2936               	goto	l16827
  7155                           
  7156                           ;DK_RFM98.c: 694: {
  7157                           ;DK_RFM98.c: 695: if(gb_WaitStableFlag==3 && RB5)
  7158  0912  085D               	movf	_gb_WaitStableFlag,w
  7159  0913  3A03               	xorlw	3
  7160  0914  1903               	btfsc	3,2
  7161  0915  1E8D               	btfss	13,5
  7162  0916  291B               	goto	l16813
  7163                           
  7164                           ;DK_RFM98.c: 696: {
  7165                           ;DK_RFM98.c: 697: gb_WaitStableFlag=0;
  7166  0917  01DD               	clrf	_gb_WaitStableFlag
  7167                           
  7168                           ;DK_RFM98.c: 698: RFM98_Standby();
  7169  0918  3197  271A  3188   	fcall	_RFM98_Standby
  7170  091B                     l16813:	
  7171                           
  7172                           ;DK_RFM98.c: 699: }
  7173                           ;DK_RFM98.c: 700: if(gw_TxTimer==0)
  7174  091B  0843               	movf	_gw_TxTimer+1,w
  7175  091C  0442               	iorwf	_gw_TxTimer,w
  7176  091D  1D03               	skipz
  7177  091E  292B               	goto	l16819
  7178                           
  7179                           ;DK_RFM98.c: 701: {
  7180                           ;DK_RFM98.c: 702: gw_TxTimer=gw_RF_SentInterval;
  7181  091F  083B               	movf	_gw_RF_SentInterval+1,w
  7182  0920  00C3               	movwf	_gw_TxTimer+1
  7183  0921  083A               	movf	_gw_RF_SentInterval,w
  7184  0922  00C2               	movwf	_gw_TxTimer
  7185                           
  7186                           ;DK_RFM98.c: 703: gb_SysTimer_1S=3;
  7187  0923  3003               	movlw	3
  7188  0924  00DB               	movwf	_gb_SysTimer_1S
  7189                           
  7190                           ;DK_RFM98.c: 704: gb_WaitStableFlag=0x0f;
  7191  0925  300F               	movlw	15
  7192  0926  00DD               	movwf	_gb_WaitStableFlag
  7193                           
  7194                           ;DK_RFM98.c: 706: SPIWrite(0x0103+0x08);
  7195  0927  2225               	fcall	PL62	;call to abstracted procedure
  7196  0928  3196  26EC  3188   	fcall	_SPIWrite
  7197  092B                     l16819:	
  7198                           
  7199                           ;DK_RFM98.c: 707: }
  7200                           ;DK_RFM98.c: 708: if(gb_WaitStableFlag==2)
  7201  092B  085D               	movf	_gb_WaitStableFlag,w
  7202  092C  3A02               	xorlw	2
  7203  092D  1D03               	skipz
  7204  092E  2936               	goto	l16827
  7205                           
  7206                           ;DK_RFM98.c: 709: {
  7207                           ;DK_RFM98.c: 710: BurstWrite(0x00, (u8 *)RFM98Data, 21);
  7208  092F  30F0               	movlw	low (_RFM98Data| (0+32768))
  7209  0930  3197  2783  3188   	fcall	PL38	;call to abstracted procedure
  7210  0933  2138  3188         	fcall	_BurstWrite
  7211                           
  7212                           ;DK_RFM98.c: 711: TxFlag=1;
  7213                           
  7214                           ;DK_RFM98.c: 712: gb_WaitStableFlag=3;
  7215  0935  222A               	fcall	PL70	;call to abstracted procedure
  7216  0936                     l16827:	
  7217                           
  7218                           ;DK_RFM98.c: 713: }
  7219                           ;DK_RFM98.c: 714: }
  7220                           ;DK_RFM98.c: 715: return TxFlag;
  7221  0936  0879               	movf	RFM98_FskTxPacket@TxFlag,w
  7222  0937  0008               	return
  7223  0938                     __end_of_RFM98_FskTxPacket:	
  7224  0938                     __ptext2181:	
  7225 ;; =============== function _RFM98_FskClearFIFO ends ============
  7226                           
  7227                           
  7228 ;; *************** function _BurstWrite *****************
  7229 ;; Defined at:
  7230 ;;		line 148 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_SPI.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  adr             1    wreg     unsigned char 
  7233 ;;  ptr             2    4[COMMON] PTR unsigned char 
  7234 ;;		 -> RFM98Data(22), 
  7235 ;;  length          1    6[COMMON] unsigned char 
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  adr             1    0[BANK0 ] unsigned char 
  7238 ;;  i               1    1[BANK0 ] unsigned char 
  7239 ;; Return value:  Size  Location     Type
  7240 ;;		None               void
  7241 ;; Registers used:
  7242 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7243 ;; Tracked objects:
  7244 ;;		On entry : 1F/0
  7245 ;;		On exit  : 1F/0
  7246 ;;		Unchanged: FFFE0/0
  7247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7248 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7249 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7251 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7252 ;;Total ram usage:        7 bytes
  7253 ;; Hardware stack levels used:    1
  7254 ;; Hardware stack levels required when called:    3
  7255 ;; This function calls:
  7256 ;;		_SPICmd8bit
  7257 ;; This function is called by:
  7258 ;;		_RFM98_LoRaTxPacket
  7259 ;;		_RFM98_FskTxPacket
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262  0938                     _BurstWrite:	
  7263                           
  7264                           ; Regs used in _BurstWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7265                           ;BurstWrite@adr stored from wreg
  7266  0938  00E0               	movwf	BurstWrite@adr
  7267                           
  7268                           ;DK_SPI.c: 149: u8 i;
  7269                           ;DK_SPI.c: 151: if(length<=1)
  7270  0939  3002               	movlw	2
  7271  093A  0276               	subwf	BurstWrite@length,w
  7272  093B  1C03               	btfss	3,0
  7273  093C  0008               	return
  7274                           
  7275                           ;DK_SPI.c: 153: else
  7276                           ;DK_SPI.c: 154: {
  7277                           ;DK_SPI.c: 155: RC3=0;
  7278  093D  118E               	bcf	14,3
  7279                           
  7280                           ;DK_SPI.c: 156: RA0=0;
  7281  093E  100C               	bcf	12,0
  7282                           
  7283                           ;DK_SPI.c: 157: SPICmd8bit(adr|0x80);
  7284  093F  0860               	movf	BurstWrite@adr,w
  7285  0940  3880               	iorlw	128
  7286  0941  21C4  3188         	fcall	_SPICmd8bit
  7287                           
  7288                           ;DK_SPI.c: 158: for(i=0;i<length;i++)
  7289  0943  01E1               	clrf	BurstWrite@i
  7290  0944                     l15521:	
  7291  0944  0876               	movf	BurstWrite@length,w
  7292  0945  0261               	subwf	BurstWrite@i,w
  7293  0946  1803               	btfsc	3,0
  7294  0947  2958               	goto	l6681
  7295                           
  7296                           ;DK_SPI.c: 159: SPICmd8bit(ptr[i]);
  7297  0948  0875               	movf	BurstWrite@ptr+1,w
  7298  0949  00F8               	movwf	??_BurstWrite+1
  7299  094A  0874               	movf	BurstWrite@ptr,w
  7300  094B  00F7               	movwf	??_BurstWrite
  7301  094C  0861               	movf	BurstWrite@i,w
  7302  094D  0777               	addwf	??_BurstWrite,w
  7303  094E  0084               	movwf	4
  7304  094F  0878               	movf	??_BurstWrite+1,w
  7305  0950  1803               	skipnc
  7306  0951  0A78               	incf	??_BurstWrite+1,w
  7307  0952  0085               	movwf	5
  7308  0953  0800               	movf	0,w	;code access
  7309  0954  21C4  3188         	fcall	_SPICmd8bit
  7310  0956  0AE1               	incf	BurstWrite@i,f
  7311  0957  2944               	goto	l15521
  7312  0958                     l6681:	
  7313                           
  7314                           ;DK_SPI.c: 160: RA0=1;
  7315  0958  140C               	bsf	12,0
  7316  0959  0008               	return
  7317  095A                     __end_of_BurstWrite:	
  7318  095A                     __ptext2162:	
  7319 ;; =============== function _RFM98_LoRaEntryTx ends ============
  7320                           
  7321                           
  7322 ;; *************** function _RFM98_LoRaRxPacket *****************
  7323 ;; Defined at:
  7324 ;;		line 317 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;		None
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  i               1    2[BANK0 ] unsigned char 
  7329 ;;  packet_size     1    1[BANK0 ] unsigned char 
  7330 ;;  addr            1    0[BANK0 ] unsigned char 
  7331 ;; Return value:  Size  Location     Type
  7332 ;;                  1    wreg      unsigned char 
  7333 ;; Registers used:
  7334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7335 ;; Tracked objects:
  7336 ;;		On entry : 1F/0
  7337 ;;		On exit  : 1F/0
  7338 ;;		Unchanged: FFFE0/0
  7339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7341 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7343 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7344 ;;Total ram usage:        4 bytes
  7345 ;; Hardware stack levels used:    1
  7346 ;; Hardware stack levels required when called:    5
  7347 ;; This function calls:
  7348 ;;		_RFM98_LoRaRxWaitStable
  7349 ;;		_SPIRead
  7350 ;;		_SPIWrite
  7351 ;;		_SPIBurstRead
  7352 ;;		_RFM98_LoRaClearIrq
  7353 ;; This function is called by:
  7354 ;;		_RFM98_Running
  7355 ;; This function uses a non-reentrant model
  7356 ;;
  7357  095A                     _RFM98_LoRaRxPacket:	
  7358                           
  7359                           ;DK_RFM98.c: 318: u8 i;
  7360                           ;DK_RFM98.c: 319: u8 addr;
  7361                           ;DK_RFM98.c: 320: u8 packet_size;
  7362                           ;DK_RFM98.c: 322: RFM98_LoRaRxWaitStable();
  7363                           
  7364                           ; Regs used in _RFM98_LoRaRxPacket: [wreg-status,0+pclath+cstack]
  7365  095A  21E5  3188         	fcall	_RFM98_LoRaRxWaitStable
  7366                           
  7367                           ;DK_RFM98.c: 323: if(gb_WaitStableFlag==1)
  7368  095C  0B5D               	decfsz	_gb_WaitStableFlag,w
  7369  095D  2962               	goto	l16517
  7370                           
  7371                           ;DK_RFM98.c: 324: {
  7372                           ;DK_RFM98.c: 325: gb_WaitStableFlag=2;
  7373  095E  3002               	movlw	2
  7374  095F  00DD               	movwf	_gb_WaitStableFlag
  7375                           
  7376                           ;DK_RFM98.c: 326: gb_StatusRx=1;
  7377  0960  01D8               	clrf	_gb_StatusRx
  7378  0961  0AD8               	incf	_gb_StatusRx,f
  7379  0962                     l16517:	
  7380                           
  7381                           ;DK_RFM98.c: 327: }
  7382                           ;DK_RFM98.c: 329: if((RB5) && (gb_StatusRx==1))
  7383  0962  1E8D               	btfss	13,5
  7384  0963  3400               	retlw	0
  7385  0964  0B58               	decfsz	_gb_StatusRx,w
  7386  0965  3400               	retlw	0
  7387                           
  7388                           ;DK_RFM98.c: 330: {
  7389                           ;DK_RFM98.c: 331: for(i=0;i<32;i++)
  7390  0966  01E2               	clrf	RFM98_LoRaRxPacket@i
  7391  0967                     l16527:	
  7392                           
  7393                           ;DK_RFM98.c: 332: gb_RxData[i] = 0x00;
  7394  0967  0862               	movf	RFM98_LoRaRxPacket@i,w
  7395  0968  220C  3188         	fcall	PL42	;call to abstracted procedure
  7396  096A  0AE2               	incf	RFM98_LoRaRxPacket@i,f
  7397  096B  0262               	subwf	RFM98_LoRaRxPacket@i,w
  7398  096C  1C03               	skipc
  7399  096D  2967               	goto	l16527
  7400                           
  7401                           ;DK_RFM98.c: 334: addr = SPIRead((u8)(0x1000>>8));
  7402  096E  3010               	movlw	16
  7403  096F  3197  2711  3188   	fcall	_SPIRead
  7404  0972  00E0               	movwf	RFM98_LoRaRxPacket@addr
  7405                           
  7406                           ;DK_RFM98.c: 335: SPIWrite(0x0D00+addr);
  7407  0973  3197  279E  3188   	fcall	PL60	;call to abstracted procedure
  7408  0976  3196  26EC  3188   	fcall	_SPIWrite
  7409                           
  7410                           ;DK_RFM98.c: 336: if(RFM98SpreadFactorTbl[gb_RateBuf_Addr]==6)
  7411  0979  3197  2770  3188   	fcall	PL24	;call to abstracted procedure
  7412  097C  1803               	skipnc
  7413  097D  3E01               	addlw	1
  7414  097E  0085               	movwf	5
  7415  097F  0800               	movf	0,w	;code access
  7416  0980  3A06               	xorlw	6
  7417  0981  1D03               	skipz
  7418  0982  2985               	goto	l16539
  7419                           
  7420                           ;DK_RFM98.c: 337: packet_size=21;
  7421  0983  3015               	movlw	21
  7422  0984  2989               	goto	L4
  7423  0985                     l16539:	
  7424                           
  7425                           ;DK_RFM98.c: 338: else
  7426                           ;DK_RFM98.c: 339: packet_size = SPIRead((u8)(0x1300>>8));
  7427  0985  3013               	movlw	19
  7428  0986  3197  2711  3188   	fcall	_SPIRead
  7429  0989                     L4:	
  7430  0989  00E1               	movwf	RFM98_LoRaRxPacket@packet_size
  7431                           
  7432                           ;DK_RFM98.c: 340: SPIBurstRead(0x00, gb_RxData, packet_size);
  7433  098A  3020               	movlw	_gb_RxData& (0+255)
  7434  098B  00F4               	movwf	?_SPIBurstRead
  7435  098C  0861               	movf	RFM98_LoRaRxPacket@packet_size,w
  7436  098D  00F5               	movwf	?_SPIBurstRead+1
  7437  098E  3000               	movlw	0
  7438  098F  21A8               	fcall	_SPIBurstRead
  7439                           
  7440                           ;DK_RFM98.c: 342: RFM98_LoRaClearIrq();
  7441  0990  3197  271F  3188   	fcall	_RFM98_LoRaClearIrq
  7442                           
  7443                           ;DK_RFM98.c: 343: for(i=0;i<17;i++)
  7444  0993  01E2               	clrf	RFM98_LoRaRxPacket@i
  7445  0994                     l16551:	
  7446                           
  7447                           ;DK_RFM98.c: 344: {
  7448                           ;DK_RFM98.c: 345: if(gb_RxData[i]!=RFM98Data[i])
  7449  0994  0862               	movf	RFM98_LoRaRxPacket@i,w
  7450  0995  2213  3188         	fcall	PL51	;call to abstracted procedure
  7451  0997  00F9               	movwf	??_RFM98_LoRaRxPacket
  7452  0998  0862               	movf	RFM98_LoRaRxPacket@i,w
  7453  0999  221F  3188         	fcall	PL61	;call to abstracted procedure
  7454  099B  0679               	xorwf	??_RFM98_LoRaRxPacket,w
  7455  099C  3011               	movlw	17
  7456  099D  1D03               	btfss	3,2
  7457  099E  29A4               	goto	L5
  7458  099F  0AE2               	incf	RFM98_LoRaRxPacket@i,f
  7459  09A0  0262               	subwf	RFM98_LoRaRxPacket@i,w
  7460  09A1  1C03               	skipc
  7461  09A2  2994               	goto	l16551
  7462                           
  7463                           ;DK_RFM98.c: 347: }
  7464                           ;DK_RFM98.c: 348: if(i>=17)
  7465  09A3  3011               	movlw	17
  7466  09A4                     L5:	
  7467  09A4  0262               	subwf	RFM98_LoRaRxPacket@i,w
  7468  09A5  1803               	btfsc	3,0
  7469                           
  7470                           ;DK_RFM98.c: 349: return(1);
  7471  09A6  3401               	retlw	1
  7472                           
  7473                           ;DK_RFM98.c: 350: else
  7474                           ;DK_RFM98.c: 351: return(0);
  7475  09A7  3400               	retlw	0
  7476  09A8                     __end_of_RFM98_LoRaRxPacket:	
  7477  09A8                     __ptext2182:	
  7478 ;; =============== function _BurstWrite ends ============
  7479                           
  7480                           
  7481 ;; *************** function _SPIBurstRead *****************
  7482 ;; Defined at:
  7483 ;;		line 124 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_SPI.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  adr             1    wreg     unsigned char 
  7486 ;;  ptr             1    4[COMMON] PTR unsigned char 
  7487 ;;		 -> gb_RxData(32), 
  7488 ;;  length          1    5[COMMON] unsigned char 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;  adr             1    7[COMMON] unsigned char 
  7491 ;;  i               1    8[COMMON] unsigned char 
  7492 ;; Return value:  Size  Location     Type
  7493 ;;		None               void
  7494 ;; Registers used:
  7495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7496 ;; Tracked objects:
  7497 ;;		On entry : 1F/0
  7498 ;;		On exit  : 1F/0
  7499 ;;		Unchanged: FFFE0/0
  7500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7501 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7504 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7505 ;;Total ram usage:        5 bytes
  7506 ;; Hardware stack levels used:    1
  7507 ;; Hardware stack levels required when called:    3
  7508 ;; This function calls:
  7509 ;;		_SPICmd8bit
  7510 ;;		_SPIRead8bit
  7511 ;; This function is called by:
  7512 ;;		_RFM98_LoRaRxPacket
  7513 ;;		_RFM98_FskRxPacket
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516  09A8                     _SPIBurstRead:	
  7517                           
  7518                           ; Regs used in _SPIBurstRead: [wreg+fsr1l-status,0+pclath+cstack]
  7519                           ;SPIBurstRead@adr stored from wreg
  7520  09A8  00F7               	movwf	SPIBurstRead@adr
  7521                           
  7522                           ;DK_SPI.c: 125: u8 i;
  7523                           ;DK_SPI.c: 126: if(length<=1)
  7524  09A9  3002               	movlw	2
  7525  09AA  0275               	subwf	SPIBurstRead@length,w
  7526  09AB  1C03               	btfss	3,0
  7527  09AC  0008               	return
  7528                           
  7529                           ;DK_SPI.c: 128: else
  7530                           ;DK_SPI.c: 129: {
  7531                           ;DK_SPI.c: 130: RC3=0;
  7532  09AD  118E               	bcf	14,3
  7533                           
  7534                           ;DK_SPI.c: 131: RA0=0;
  7535  09AE  100C               	bcf	12,0
  7536                           
  7537                           ;DK_SPI.c: 132: SPICmd8bit(adr);
  7538  09AF  0877               	movf	SPIBurstRead@adr,w
  7539  09B0  21C4  3188         	fcall	_SPICmd8bit
  7540                           
  7541                           ;DK_SPI.c: 133: for(i=0;i<length;i++)
  7542  09B2  01F8               	clrf	SPIBurstRead@i
  7543  09B3                     l15505:	
  7544  09B3  0875               	movf	SPIBurstRead@length,w
  7545  09B4  0278               	subwf	SPIBurstRead@i,w
  7546  09B5  1803               	btfsc	3,0
  7547  09B6  29C2               	goto	l6673
  7548                           
  7549                           ;DK_SPI.c: 134: ptr[i] = SPIRead8bit();
  7550  09B7  0878               	movf	SPIBurstRead@i,w
  7551  09B8  0774               	addwf	SPIBurstRead@ptr,w
  7552  09B9  00F6               	movwf	??_SPIBurstRead
  7553  09BA  0086               	movwf	6
  7554  09BB  3001               	movlw	1	; select bank2/3
  7555  09BC  0087               	movwf	7
  7556  09BD  21D6  3188         	fcall	_SPIRead8bit
  7557  09BF  0081               	movwf	1
  7558  09C0  0AF8               	incf	SPIBurstRead@i,f
  7559  09C1  29B3               	goto	l15505
  7560  09C2                     l6673:	
  7561                           
  7562                           ;DK_SPI.c: 135: RA0=1;
  7563  09C2  140C               	bsf	12,0
  7564  09C3  0008               	return
  7565  09C4                     __end_of_SPIBurstRead:	
  7566  09C4                     __ptext2205:	
  7567 ;; =============== function _SPIRead8bit ends ============
  7568                           
  7569                           
  7570 ;; *************** function _SPICmd8bit *****************
  7571 ;; Defined at:
  7572 ;;		line 23 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\DK_SPI.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;  WrPara          1    wreg     unsigned char 
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  WrPara          1    2[COMMON] unsigned char 
  7577 ;;  bitcnt          1    3[COMMON] unsigned char 
  7578 ;; Return value:  Size  Location     Type
  7579 ;;		None               void
  7580 ;; Registers used:
  7581 ;;		wreg, status,2, status,0
  7582 ;; Tracked objects:
  7583 ;;		On entry : 1F/0
  7584 ;;		On exit  : 1F/0
  7585 ;;		Unchanged: FFFE0/0
  7586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7591 ;;Total ram usage:        2 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; Hardware stack levels required when called:    2
  7594 ;; This function calls:
  7595 ;;		Nothing
  7596 ;; This function is called by:
  7597 ;;		_SPIRead
  7598 ;;		_SPIBurstRead
  7599 ;;		_BurstWrite
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602  09C4                     _SPICmd8bit:	
  7603                           
  7604                           ; Regs used in _SPICmd8bit: [wreg+status,2+status,0]
  7605                           ;SPICmd8bit@WrPara stored from wreg
  7606  09C4  00F2               	movwf	SPICmd8bit@WrPara
  7607  09C5  3008               	movlw	8
  7608                           
  7609                           ;DK_SPI.c: 24: u8 bitcnt;
  7610                           ;DK_SPI.c: 25: RA0=0;
  7611  09C6  100C               	bcf	12,0
  7612                           
  7613                           ;DK_SPI.c: 26: RC3=0;
  7614  09C7  118E               	bcf	14,3
  7615                           
  7616                           ;DK_SPI.c: 28: for(bitcnt=8; bitcnt!=0; bitcnt--)
  7617  09C8  00F3               	movwf	SPICmd8bit@bitcnt
  7618  09C9                     l6644:	
  7619                           
  7620                           ;DK_SPI.c: 29: {
  7621                           ;DK_SPI.c: 30: RC3=0;
  7622  09C9  118E               	bcf	14,3
  7623                           
  7624                           ;DK_SPI.c: 31: if(WrPara&0x80)
  7625  09CA  1FF2               	btfss	SPICmd8bit@WrPara,7
  7626  09CB  29CE               	goto	l6646
  7627                           
  7628                           ;DK_SPI.c: 32: RC4=1;
  7629  09CC  160E               	bsf	14,4
  7630  09CD  29CF               	goto	l6647
  7631  09CE                     l6646:	
  7632                           
  7633                           ;DK_SPI.c: 33: else
  7634                           ;DK_SPI.c: 34: RC4=0;
  7635  09CE  120E               	bcf	14,4
  7636  09CF                     l6647:	
  7637                           
  7638                           ;DK_SPI.c: 35: RC3=1;
  7639  09CF  158E               	bsf	14,3
  7640                           
  7641                           ;DK_SPI.c: 36: WrPara <<= 1;
  7642  09D0  35F2               	lslf	SPICmd8bit@WrPara,f
  7643  09D1  0BF3               	decfsz	SPICmd8bit@bitcnt,f
  7644  09D2  29C9               	goto	l6644
  7645                           
  7646                           ;DK_SPI.c: 37: }
  7647                           ;DK_SPI.c: 38: RC3=0;
  7648  09D3  118E               	bcf	14,3
  7649                           
  7650                           ;DK_SPI.c: 39: RC4=1;
  7651  09D4  160E               	bsf	14,4
  7652  09D5  0008               	return
  7653  09D6                     __end_of_SPICmd8bit:	
  7654  09D6                     __ptext2204:	
  7655 ;; =============== function _InitSfr ends ============
  7656                           
  7657                           
  7658 ;; *************** function _SPIRead8bit *****************
  7659 ;; Defined at:
  7660 ;;		line 50 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\DK_SPI.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;		None
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  bitcnt          1    3[COMMON] unsigned char 
  7665 ;;  RdPara          1    2[COMMON] unsigned char 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      unsigned char 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0
  7670 ;; Tracked objects:
  7671 ;;		On entry : 1F/0
  7672 ;;		On exit  : 1F/0
  7673 ;;		Unchanged: FFFE0/0
  7674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7679 ;;Total ram usage:        2 bytes
  7680 ;; Hardware stack levels used:    1
  7681 ;; Hardware stack levels required when called:    2
  7682 ;; This function calls:
  7683 ;;		Nothing
  7684 ;; This function is called by:
  7685 ;;		_SPIRead
  7686 ;;		_SPIBurstRead
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689  09D6                     _SPIRead8bit:	
  7690  09D6  3008               	movlw	8
  7691                           
  7692                           ;DK_SPI.c: 51: u8 RdPara = 0;
  7693                           
  7694                           ; Regs used in _SPIRead8bit: [wreg+status,2+status,0]
  7695  09D7  01F2               	clrf	SPIRead8bit@RdPara
  7696                           
  7697                           ;DK_SPI.c: 52: u8 bitcnt;
  7698                           ;DK_SPI.c: 54: RA0=0;
  7699  09D8  100C               	bcf	12,0
  7700                           
  7701                           ;DK_SPI.c: 55: RC4=1;
  7702  09D9  160E               	bsf	14,4
  7703                           
  7704                           ;DK_SPI.c: 56: for(bitcnt=8; bitcnt!=0; bitcnt--)
  7705  09DA  00F3               	movwf	SPIRead8bit@bitcnt
  7706  09DB                     l6651:	
  7707                           
  7708                           ;DK_SPI.c: 57: {
  7709                           ;DK_SPI.c: 58: RC3=0;
  7710  09DB  118E               	bcf	14,3
  7711                           
  7712                           ;DK_SPI.c: 59: RdPara <<= 1;
  7713  09DC  35F2               	lslf	SPIRead8bit@RdPara,f
  7714                           
  7715                           ;DK_SPI.c: 60: RC3=1;
  7716  09DD  158E               	bsf	14,3
  7717                           
  7718                           ;DK_SPI.c: 61: if(RC5)
  7719  09DE  1A8E               	btfsc	14,5
  7720                           
  7721                           ;DK_SPI.c: 62: RdPara |= 0x01;
  7722  09DF  1472               	bsf	SPIRead8bit@RdPara,0
  7723  09E0  0BF3               	decfsz	SPIRead8bit@bitcnt,f
  7724  09E1  29DB               	goto	l6651
  7725                           
  7726                           ;DK_SPI.c: 65: }
  7727                           ;DK_SPI.c: 66: RC3=0;
  7728  09E2  118E               	bcf	14,3
  7729                           
  7730                           ;DK_SPI.c: 67: return(RdPara);
  7731  09E3  0872               	movf	SPIRead8bit@RdPara,w
  7732  09E4  0008               	return
  7733  09E5                     __end_of_SPIRead8bit:	
  7734  09E5                     __ptext2173:	
  7735 ;; =============== function _RFM98_LoRaReadRSSI ends ============
  7736                           
  7737                           
  7738 ;; *************** function _RFM98_LoRaRxWaitStable *****************
  7739 ;; Defined at:
  7740 ;;		line 277 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;		None
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;		None
  7745 ;; Return value:  Size  Location     Type
  7746 ;;		None               void
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0, pclath, cstack
  7749 ;; Tracked objects:
  7750 ;;		On entry : 1F/0
  7751 ;;		On exit  : 1F/0
  7752 ;;		Unchanged: FFFE0/0
  7753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7757 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;Total ram usage:        1 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    4
  7761 ;; This function calls:
  7762 ;;		_SPIRead
  7763 ;; This function is called by:
  7764 ;;		_RFM98_LoRaRxPacket
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767  09E5                     _RFM98_LoRaRxWaitStable:	
  7768                           
  7769                           ;DK_RFM98.c: 278: if(gb_WaitStableFlag==0x0f)
  7770                           
  7771                           ; Regs used in _RFM98_LoRaRxWaitStable: [wreg+status,2+status,0+pclath+cstack]
  7772  09E5  085D               	movf	_gb_WaitStableFlag,w
  7773  09E6  3A0F               	xorlw	15
  7774  09E7  1D03               	skipz
  7775  09E8  0008               	return
  7776                           
  7777                           ;DK_RFM98.c: 279: {
  7778                           ;DK_RFM98.c: 280: if(gb_SysTimer_1S!=0)
  7779  09E9  085B               	movf	_gb_SysTimer_1S,w
  7780  09EA  1903               	btfsc	3,2
  7781  09EB  29F6               	goto	l5314
  7782                           
  7783                           ;DK_RFM98.c: 281: {
  7784                           ;DK_RFM98.c: 282: if((SPIRead((u8)(0x1800>>8))&0x04)==0x04)
  7785  09EC  3018               	movlw	24
  7786  09ED  3197  2711  3188   	fcall	_SPIRead
  7787  09F0  00F6               	movwf	??_RFM98_LoRaRxWaitStable
  7788  09F1  1D76               	btfss	??_RFM98_LoRaRxWaitStable,2
  7789  09F2  0008               	return
  7790                           
  7791                           ;DK_RFM98.c: 283: {
  7792                           ;DK_RFM98.c: 284: gb_WaitStableFlag=1;
  7793  09F3  01DD               	clrf	_gb_WaitStableFlag
  7794  09F4  0ADD               	incf	_gb_WaitStableFlag,f
  7795  09F5  0008               	return
  7796  09F6                     l5314:	
  7797                           
  7798                           ;DK_RFM98.c: 287: else
  7799                           ;DK_RFM98.c: 288: {
  7800                           ;DK_RFM98.c: 289: gb_ErrorFlag=1;
  7801                           
  7802                           ;DK_RFM98.c: 290: gb_WaitStableFlag=0;
  7803  09F6  2A1B               	ljmp	PL58	;call to abstracted procedure
  7804  09F7                     __end_of_RFM98_LoRaRxWaitStable:	
  7805  09F7                     __ptext2168:	
  7806 ;; =============== function _RFM98_TestConfig ends ============
  7807                           
  7808                           
  7809 ;; *************** function _RFM98_FSKTxWaitStable *****************
  7810 ;; Defined at:
  7811 ;;		line 652 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;		None
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;		None
  7816 ;; Return value:  Size  Location     Type
  7817 ;;		None               void
  7818 ;; Registers used:
  7819 ;;		wreg, status,2, status,0, pclath, cstack
  7820 ;; Tracked objects:
  7821 ;;		On entry : 1F/0
  7822 ;;		On exit  : 1F/0
  7823 ;;		Unchanged: FFFE0/0
  7824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7827 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;Total ram usage:        2 bytes
  7830 ;; Hardware stack levels used:    1
  7831 ;; Hardware stack levels required when called:    4
  7832 ;; This function calls:
  7833 ;;		_SPIRead
  7834 ;; This function is called by:
  7835 ;;		_RFM98_FskTxPacket
  7836 ;;		_RFM98_TestTx
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839  09F7                     _RFM98_FSKTxWaitStable:	
  7840                           
  7841                           ;DK_RFM98.c: 653: if(gb_WaitStableFlag==0x0f)
  7842                           
  7843                           ; Regs used in _RFM98_FSKTxWaitStable: [wreg+status,2+status,0+pclath+cstack]
  7844  09F7  085D               	movf	_gb_WaitStableFlag,w
  7845  09F8  3A0F               	xorlw	15
  7846  09F9  1D03               	skipz
  7847  09FA  0008               	return
  7848                           
  7849                           ;DK_RFM98.c: 654: {
  7850                           ;DK_RFM98.c: 655: if(gb_SysTimer_1S!=0)
  7851  09FB  085B               	movf	_gb_SysTimer_1S,w
  7852  09FC  1903               	btfsc	3,2
  7853  09FD  2A0B               	goto	l5397
  7854                           
  7855                           ;DK_RFM98.c: 656: {
  7856                           ;DK_RFM98.c: 657: if((SPIRead(0x3E)&0xA0)==0xA0)
  7857  09FE  303E               	movlw	62
  7858  09FF  3197  2711  3188   	fcall	_SPIRead
  7859  0A02  00F6               	movwf	??_RFM98_FSKTxWaitStable
  7860  0A03  39A0               	andlw	160
  7861  0A04  00F7               	movwf	??_RFM98_FSKTxWaitStable+1
  7862  0A05  3AA0               	xorlw	160
  7863  0A06  1D03               	skipz
  7864  0A07  0008               	return
  7865                           
  7866                           ;DK_RFM98.c: 658: {
  7867                           ;DK_RFM98.c: 659: gb_WaitStableFlag=1;
  7868  0A08  01DD               	clrf	_gb_WaitStableFlag
  7869  0A09  0ADD               	incf	_gb_WaitStableFlag,f
  7870  0A0A  0008               	return
  7871  0A0B                     l5397:	
  7872                           
  7873                           ;DK_RFM98.c: 662: else
  7874                           ;DK_RFM98.c: 663: {
  7875                           ;DK_RFM98.c: 664: gb_ErrorFlag=1;
  7876                           
  7877                           ;DK_RFM98.c: 665: gb_WaitStableFlag=0;
  7878  0A0B  2A1B               	ljmp	PL58	;call to abstracted procedure
  7879  0A0C                     __end_of_RFM98_FSKTxWaitStable:	
  7880  0A0C                     PL42:	
  7881  0A0C  3E20               	addlw	_gb_RxData& (0+255)
  7882  0A0D  0086               	movwf	6
  7883  0A0E  3001               	movlw	1	; select bank2/3
  7884  0A0F  0087               	movwf	7
  7885  0A10  3020               	movlw	32
  7886  0A11  0181               	clrf	1
  7887  0A12  0008               	return
  7888  0A13                     PL51:	
  7889  0A13  3EF0               	addlw	low (_RFM98Data| (0+32768))
  7890  0A14  0084               	movwf	4
  7891  0A15  3098               	movlw	high (_RFM98Data| (0+32768))
  7892  0A16  1803               	skipnc
  7893  0A17  3E01               	addlw	1
  7894  0A18  0085               	movwf	5
  7895  0A19  0800               	movf	0,w	;code access
  7896  0A1A  0008               	return
  7897  0A1B                     PL58:	
  7898  0A1B  01CC               	clrf	_gb_ErrorFlag
  7899  0A1C  0ACC               	incf	_gb_ErrorFlag,f
  7900  0A1D  01DD               	clrf	_gb_WaitStableFlag
  7901  0A1E  0008               	return
  7902  0A1F                     PL61:	
  7903  0A1F  3E20               	addlw	_gb_RxData& (0+255)
  7904  0A20  0086               	movwf	6
  7905  0A21  3001               	movlw	1	; select bank2/3
  7906  0A22  0087               	movwf	7
  7907  0A23  0801               	movf	1,w
  7908  0A24  0008               	return
  7909  0A25                     PL62:	
  7910  0A25  300B               	movlw	11
  7911  0A26  00F5               	movwf	?_SPIWrite
  7912  0A27  3001               	movlw	1
  7913  0A28  00F6               	movwf	?_SPIWrite+1
  7914  0A29  0008               	return
  7915  0A2A                     PL70:	
  7916  0A2A  3003               	movlw	3
  7917  0A2B  01F9               	clrf	RFM98_FskTxPacket@TxFlag
  7918  0A2C  0AF9               	incf	RFM98_FskTxPacket@TxFlag,f
  7919  0A2D  00DD               	movwf	_gb_WaitStableFlag
  7920  0A2E  0008               	return
  7921                           
  7922                           	psect	text2160
  7923  1425                     __ptext2160:	
  7924 ;; =============== function _RFM98_FskEntryRx ends ============
  7925                           
  7926                           
  7927 ;; *************** function _RFM98_LoRaTxPacket *****************
  7928 ;; Defined at:
  7929 ;;		line 417 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;		None
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;  TxFlag          1    3[BANK0 ] unsigned char 
  7934 ;;  addr            1    2[BANK0 ] unsigned char 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      unsigned char 
  7937 ;; Registers used:
  7938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 1F/0
  7941 ;;		On exit  : 1F/0
  7942 ;;		Unchanged: FFFE0/0
  7943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7945 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7947 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7948 ;;Total ram usage:        2 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    5
  7951 ;; This function calls:
  7952 ;;		_RFM98_LoRaTxWaitStable
  7953 ;;		_BurstWrite
  7954 ;;		_SPIWrite
  7955 ;;		_SPIRead
  7956 ;;		_RFM98_LoRaClearIrq
  7957 ;;		_RFM98_Standby
  7958 ;; This function is called by:
  7959 ;;		_RFM98_Running
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962  1425                     _RFM98_LoRaTxPacket:	
  7963                           
  7964                           ;DK_RFM98.c: 418: u8 TxFlag=0;
  7965                           
  7966                           ; Regs used in _RFM98_LoRaTxPacket: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7967  1425  01E3               	clrf	RFM98_LoRaTxPacket@TxFlag
  7968                           
  7969                           ;DK_RFM98.c: 419: u8 addr;
  7970                           ;DK_RFM98.c: 421: RFM98_LoRaTxWaitStable();
  7971  1426  27ED  3194         	fcall	_RFM98_LoRaTxWaitStable
  7972                           
  7973                           ;DK_RFM98.c: 422: if(gb_WaitStableFlag==1)
  7974  1428  0B5D               	decfsz	_gb_WaitStableFlag,w
  7975  1429  2C43               	goto	l16621
  7976                           
  7977                           ;DK_RFM98.c: 423: {
  7978                           ;DK_RFM98.c: 424: gb_WaitStableFlag=2;
  7979  142A  3002               	movlw	2
  7980  142B  00DD               	movwf	_gb_WaitStableFlag
  7981                           
  7982                           ;DK_RFM98.c: 425: if(gb_StatusTx==0)
  7983  142C  08D9               	movf	_gb_StatusTx,f
  7984  142D  1D03               	skipz
  7985  142E  2C43               	goto	l16621
  7986                           
  7987                           ;DK_RFM98.c: 426: {
  7988                           ;DK_RFM98.c: 427: gb_StatusTx=1;
  7989  142F  01D9               	clrf	_gb_StatusTx
  7990  1430  0AD9               	incf	_gb_StatusTx,f
  7991                           
  7992                           ;DK_RFM98.c: 428: gw_TxTimer=gw_RF_SentInterval;
  7993  1431  083B               	movf	_gw_RF_SentInterval+1,w
  7994  1432  00C3               	movwf	_gw_TxTimer+1
  7995  1433  083A               	movf	_gw_RF_SentInterval,w
  7996  1434  00C2               	movwf	_gw_TxTimer
  7997                           
  7998                           ;DK_RFM98.c: 430: BurstWrite(0x00, (u8 *)RFM98Data, 21);
  7999  1435  30F0               	movlw	low (_RFM98Data| (0+32768))
  8000  1436  2783               	fcall	PL38	;call to abstracted procedure
  8001  1437  3189  2138  3194   	fcall	_BurstWrite
  8002                           
  8003                           ;DK_RFM98.c: 431: SPIWrite(0x0100+0x03+0x08);
  8004  143A  318A  2225  3194   	fcall	PL62	;call to abstracted procedure
  8005  143D  26EC  3194         	fcall	_SPIWrite
  8006  143F  3003               	movlw	3
  8007                           
  8008                           ;DK_RFM98.c: 432: TxFlag=1;
  8009  1440  01E3               	clrf	RFM98_LoRaTxPacket@TxFlag
  8010  1441  0AE3               	incf	RFM98_LoRaTxPacket@TxFlag,f
  8011                           
  8012                           ;DK_RFM98.c: 433: gb_WaitStableFlag=3;
  8013  1442  00DD               	movwf	_gb_WaitStableFlag
  8014  1443                     l16621:	
  8015                           
  8016                           ;DK_RFM98.c: 434: }
  8017                           ;DK_RFM98.c: 435: }
  8018                           ;DK_RFM98.c: 436: if(gb_StatusTx==1)
  8019  1443  0B59               	decfsz	_gb_StatusTx,w
  8020  1444  2C72               	goto	l16651
  8021                           
  8022                           ;DK_RFM98.c: 437: {
  8023                           ;DK_RFM98.c: 438: if(gb_WaitStableFlag==3 && RB5)
  8024  1445  085D               	movf	_gb_WaitStableFlag,w
  8025  1446  3A03               	xorlw	3
  8026  1447  1903               	btfsc	3,2
  8027  1448  1E8D               	btfss	13,5
  8028  1449  2C52               	goto	l16633
  8029                           
  8030                           ;DK_RFM98.c: 439: {
  8031                           ;DK_RFM98.c: 440: SPIRead((u8)(0x1200>>8));
  8032  144A  3012               	movlw	18
  8033  144B  2711  3194         	fcall	_SPIRead
  8034                           
  8035                           ;DK_RFM98.c: 441: RFM98_LoRaClearIrq();
  8036  144D  271F  3194         	fcall	_RFM98_LoRaClearIrq
  8037                           
  8038                           ;DK_RFM98.c: 443: gb_WaitStableFlag=0;
  8039  144F  01DD               	clrf	_gb_WaitStableFlag
  8040                           
  8041                           ;DK_RFM98.c: 444: RFM98_Standby();
  8042  1450  271A  3194         	fcall	_RFM98_Standby
  8043  1452                     l16633:	
  8044                           
  8045                           ;DK_RFM98.c: 445: }
  8046                           ;DK_RFM98.c: 446: if(gw_TxTimer==0 && gb_WaitStableFlag==0)
  8047  1452  0843               	movf	_gw_TxTimer+1,w
  8048  1453  0442               	iorwf	_gw_TxTimer,w
  8049  1454  1D03               	skipz
  8050  1455  2C72               	goto	l16651
  8051  1456  08DD               	movf	_gb_WaitStableFlag,f
  8052  1457  1D03               	skipz
  8053  1458  2C72               	goto	l16651
  8054                           
  8055                           ;DK_RFM98.c: 447: {
  8056                           ;DK_RFM98.c: 448: gw_TxTimer=gw_RF_SentInterval;
  8057  1459  083B               	movf	_gw_RF_SentInterval+1,w
  8058  145A  00C3               	movwf	_gw_TxTimer+1
  8059  145B  083A               	movf	_gw_RF_SentInterval,w
  8060  145C  00C2               	movwf	_gw_TxTimer
  8061                           
  8062                           ;DK_RFM98.c: 450: addr = SPIRead((u8)(0x0E00>>8));
  8063  145D  300E               	movlw	14
  8064  145E  2711  3194         	fcall	_SPIRead
  8065  1460  00E2               	movwf	RFM98_LoRaTxPacket@addr
  8066                           
  8067                           ;DK_RFM98.c: 451: SPIWrite(0x0D00+addr);
  8068  1461  279E  3194         	fcall	PL60	;call to abstracted procedure
  8069  1463  26EC  3194         	fcall	_SPIWrite
  8070                           
  8071                           ;DK_RFM98.c: 452: BurstWrite(0x00, (u8 *)RFM98Data, 21);
  8072  1465  30F0               	movlw	low (_RFM98Data| (0+32768))
  8073  1466  2783               	fcall	PL38	;call to abstracted procedure
  8074  1467  3189  2138  3194   	fcall	_BurstWrite
  8075                           
  8076                           ;DK_RFM98.c: 453: SPIWrite(0x0100+0x03+0x08);
  8077  146A  318A  2225  3194   	fcall	PL62	;call to abstracted procedure
  8078  146D  26EC               	fcall	_SPIWrite
  8079                           
  8080                           ;DK_RFM98.c: 455: gb_WaitStableFlag=3;
  8081  146E  3003               	movlw	3
  8082  146F  00DD               	movwf	_gb_WaitStableFlag
  8083                           
  8084                           ;DK_RFM98.c: 456: TxFlag=1;
  8085  1470  01E3               	clrf	RFM98_LoRaTxPacket@TxFlag
  8086  1471  0AE3               	incf	RFM98_LoRaTxPacket@TxFlag,f
  8087  1472                     l16651:	
  8088                           
  8089                           ;DK_RFM98.c: 457: }
  8090                           ;DK_RFM98.c: 458: }
  8091                           ;DK_RFM98.c: 459: return TxFlag;
  8092  1472  0863               	movf	RFM98_LoRaTxPacket@TxFlag,w
  8093  1473  0008               	return
  8094  1474                     __end_of_RFM98_LoRaTxPacket:	
  8095  1474                     __ptext2150:	
  8096 ;; =============== function _main ends ============
  8097                           
  8098                           
  8099 ;; *************** function _RFM98_Running *****************
  8100 ;; Defined at:
  8101 ;;		line 924 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  mode            1    wreg     unsigned char 
  8104 ;;  WorkStatus      1    6[BANK0 ] unsigned char 
  8105 ;;  ParaChangeFl    1    7[BANK0 ] unsigned char 
  8106 ;;  TxFlag          1    8[BANK0 ] PTR unsigned char 
  8107 ;;		 -> main@TxFlag(1), 
  8108 ;;  RxFlag          1    9[BANK0 ] PTR unsigned char 
  8109 ;;		 -> main@RxFlag(1), 
  8110 ;;  RSSI            1   10[BANK0 ] PTR unsigned char 
  8111 ;;		 -> gb_RF_RSSI(1), 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  mode            1   11[BANK0 ] unsigned char 
  8114 ;;  temp            1   12[BANK0 ] unsigned char 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;		None               void
  8117 ;; Registers used:
  8118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8119 ;; Tracked objects:
  8120 ;;		On entry : 1F/0
  8121 ;;		On exit  : 1F/0
  8122 ;;		Unchanged: FFE00/0
  8123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8124 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8127 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8128 ;;Total ram usage:        7 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    6
  8131 ;; This function calls:
  8132 ;;		_RFM98_LoRaEntryTx
  8133 ;;		_RFM98_LoRaTxPacket
  8134 ;;		_RFM98_LoRaEntryRx
  8135 ;;		_RFM98_LoRaRxPacket
  8136 ;;		_BeepOn
  8137 ;;		_RFM98_LoRaReadRSSI
  8138 ;;		_RFM98_FskEntryTx
  8139 ;;		_RFM98_FskTxPacket
  8140 ;;		_RFM98_FskEntryRx
  8141 ;;		_RFM98_FskRxPacket
  8142 ;;		_RFM98_ReadRSSI
  8143 ;;		_RFM98_Standby
  8144 ;;		_RFM98_Sleep
  8145 ;;		_RFM98_EntryTestTx
  8146 ;;		_RFM98_TestTx
  8147 ;;		_RFM98_EntryTestRx
  8148 ;;		_RFM98_TestRx
  8149 ;; This function is called by:
  8150 ;;		_main
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153  1474                     _RFM98_Running:	
  8154                           
  8155                           ; Regs used in _RFM98_Running: [wreg-status,0+pclath+cstack]
  8156                           ;RFM98_Running@mode stored from wreg
  8157  1474  00EB               	movwf	RFM98_Running@mode
  8158                           
  8159                           ;DK_RFM98.c: 925: u8 temp;
  8160                           ;DK_RFM98.c: 926: if(WorkStatus==2)
  8161  1475  0866               	movf	RFM98_Running@WorkStatus,w
  8162  1476  3A02               	xorlw	2
  8163  1477  1903               	btfsc	3,2
  8164  1478  2C9F               	goto	l16937
  8165  1479  2CA7               	goto	l16939
  8166  147A                     l16913:	
  8167                           
  8168                           ;DK_RFM98.c: 931: if(ParaChangeFlag==1)
  8169  147A  0367               	decf	RFM98_Running@ParaChangeFlag,w
  8170  147B  1D03               	skipz
  8171  147C  2C7F               	goto	l5471
  8172                           
  8173                           ;DK_RFM98.c: 932: {
  8174                           ;DK_RFM98.c: 933: RFM98_LoRaEntryTx();
  8175  147D  25C6  3194         	fcall	_RFM98_LoRaEntryTx
  8176  147F                     l5471:	
  8177                           
  8178                           ;DK_RFM98.c: 934: }
  8179                           ;DK_RFM98.c: 935: temp=RFM98_LoRaTxPacket();
  8180  147F  2425  3194         	fcall	_RFM98_LoRaTxPacket
  8181  1481                     L2:	
  8182  1481  00EC               	movwf	RFM98_Running@temp
  8183                           
  8184                           ;DK_RFM98.c: 936: if(temp==1){*TxFlag=1;}
  8185  1482  0B6C               	decfsz	RFM98_Running@temp,w
  8186  1483  2CE4               	goto	l16981
  8187  1484  0868               	movf	RFM98_Running@TxFlag,w
  8188  1485  0086               	movwf	6
  8189  1486  0187               	clrf	7
  8190  1487  0181               	clrf	1
  8191  1488  0A81               	incf	1,f
  8192  1489  2CE4               	goto	l16981
  8193  148A                     l16921:	
  8194                           
  8195                           ;DK_RFM98.c: 939: if(ParaChangeFlag==1)
  8196  148A  0367               	decf	RFM98_Running@ParaChangeFlag,w
  8197  148B  1D03               	skipz
  8198  148C  2C8E               	goto	l16925
  8199                           
  8200                           ;DK_RFM98.c: 940: {
  8201                           ;DK_RFM98.c: 941: RFM98_LoRaEntryRx();
  8202  148D  25F0               	fcall	_RFM98_LoRaEntryRx
  8203  148E                     l16925:	
  8204                           
  8205                           ;DK_RFM98.c: 942: }
  8206                           ;DK_RFM98.c: 943: temp=RFM98_LoRaRxPacket();
  8207  148E  3189  215A  3194   	fcall	_RFM98_LoRaRxPacket
  8208  1491  00EC               	movwf	RFM98_Running@temp
  8209                           
  8210                           ;DK_RFM98.c: 944: if(temp==1)
  8211  1492  0B6C               	decfsz	RFM98_Running@temp,w
  8212  1493  2C99               	goto	l16933
  8213                           
  8214                           ;DK_RFM98.c: 945: {
  8215                           ;DK_RFM98.c: 946: *RxFlag=1;
  8216  1494  0869               	movf	RFM98_Running@RxFlag,w
  8217                           
  8218                           ;DK_RFM98.c: 947: BeepOn((u16*)MusicTab_RxSuccess);
  8219  1495  278E               	fcall	PL46	;call to abstracted procedure
  8220  1496  3186  2621  3194   	fcall	_BeepOn
  8221  1499                     l16933:	
  8222                           
  8223                           ;DK_RFM98.c: 948: }
  8224                           ;DK_RFM98.c: 950: *RSSI=RFM98_LoRaReadRSSI();
  8225  1499  086A               	movf	RFM98_Running@RSSI,w
  8226  149A  0086               	movwf	6
  8227  149B  0187               	clrf	7
  8228  149C  2731  3194         	fcall	_RFM98_LoRaReadRSSI
  8229  149E  2CC5               	goto	L1
  8230  149F                     l16937:	
  8231                           ;DK_RFM98.c: 951: break;
  8232                           
  8233  149F  086B               	movf	RFM98_Running@mode,w
  8234                           
  8235                           ; Switch size 1, requested type "space"
  8236                           ; Number of cases is 2, Range of values is 43 to 44
  8237                           ; switch strategies available:
  8238                           ; Name         Instructions Cycles
  8239                           ; simple_byte            7     4 (average)
  8240                           ; direct_byte           13     9 (fixed)
  8241                           ; jumptable            263     9 (fixed)
  8242                           ;	Chosen strategy is simple_byte
  8243  14A0  3A2B               	xorlw	43	; case 43
  8244  14A1  1903               	skipnz
  8245  14A2  2C7A               	goto	l16913
  8246  14A3  3A07               	xorlw	7	; case 44
  8247  14A4  1903               	skipnz
  8248  14A5  2C8A               	goto	l16921
  8249  14A6  2CE4               	goto	l16981
  8250  14A7                     l16939:	
  8251                           
  8252                           ;DK_RFM98.c: 954: else if(WorkStatus==0)
  8253  14A7  08E6               	movf	RFM98_Running@WorkStatus,f
  8254  14A8  1903               	btfsc	3,2
  8255  14A9  2CC7               	goto	l16967
  8256  14AA  2CCF               	goto	l16969
  8257  14AB                     l16943:	
  8258                           
  8259                           ;DK_RFM98.c: 959: if(ParaChangeFlag==1)
  8260  14AB  0B67               	decfsz	RFM98_Running@ParaChangeFlag,w
  8261  14AC  2CAE               	goto	l5481
  8262                           
  8263                           ;DK_RFM98.c: 960: {
  8264                           ;DK_RFM98.c: 961: RFM98_FskEntryTx();
  8265  14AD  2507               	fcall	_RFM98_FskEntryTx
  8266  14AE                     l5481:	
  8267                           
  8268                           ;DK_RFM98.c: 962: }
  8269                           ;DK_RFM98.c: 963: temp=RFM98_FskTxPacket();
  8270  14AE  3188  20F8  3194   	fcall	_RFM98_FskTxPacket
  8271  14B1  2C81               	goto	L2
  8272  14B2                     l16951:	
  8273                           ;DK_RFM98.c: 964: if(temp==1){*TxFlag=1;}
  8274                           
  8275                           
  8276                           ;DK_RFM98.c: 967: if(ParaChangeFlag==1)
  8277  14B2  0B67               	decfsz	RFM98_Running@ParaChangeFlag,w
  8278  14B3  2CB5               	goto	l16955
  8279                           
  8280                           ;DK_RFM98.c: 968: {
  8281                           ;DK_RFM98.c: 969: RFM98_FskEntryRx();
  8282  14B4  2539               	fcall	_RFM98_FskEntryRx
  8283  14B5                     l16955:	
  8284                           
  8285                           ;DK_RFM98.c: 970: }
  8286                           ;DK_RFM98.c: 971: temp=RFM98_FskRxPacket();
  8287  14B5  3188  20A6  3194   	fcall	_RFM98_FskRxPacket
  8288  14B8  00EC               	movwf	RFM98_Running@temp
  8289                           
  8290                           ;DK_RFM98.c: 972: if(temp==1)
  8291  14B9  0B6C               	decfsz	RFM98_Running@temp,w
  8292  14BA  2CC0               	goto	l16963
  8293                           
  8294                           ;DK_RFM98.c: 973: {
  8295                           ;DK_RFM98.c: 974: *RxFlag=1;
  8296  14BB  0869               	movf	RFM98_Running@RxFlag,w
  8297                           
  8298                           ;DK_RFM98.c: 975: BeepOn((u16*)MusicTab_RxSuccess);
  8299  14BC  278E               	fcall	PL46	;call to abstracted procedure
  8300  14BD  3186  2621  3194   	fcall	_BeepOn
  8301  14C0                     l16963:	
  8302                           
  8303                           ;DK_RFM98.c: 976: }
  8304                           ;DK_RFM98.c: 978: *RSSI=RFM98_ReadRSSI();
  8305  14C0  086A               	movf	RFM98_Running@RSSI,w
  8306  14C1  0086               	movwf	6
  8307  14C2  0187               	clrf	7
  8308  14C3  2724  3194         	fcall	_RFM98_ReadRSSI
  8309  14C5                     L1:	
  8310  14C5  0081               	movwf	1
  8311                           
  8312                           ;DK_RFM98.c: 979: break;
  8313  14C6  2CE4               	goto	l16981
  8314  14C7                     l16967:	
  8315  14C7  086B               	movf	RFM98_Running@mode,w
  8316                           
  8317                           ; Switch size 1, requested type "space"
  8318                           ; Number of cases is 2, Range of values is 37 to 38
  8319                           ; switch strategies available:
  8320                           ; Name         Instructions Cycles
  8321                           ; simple_byte            7     4 (average)
  8322                           ; direct_byte           13     9 (fixed)
  8323                           ; jumptable            263     9 (fixed)
  8324                           ;	Chosen strategy is simple_byte
  8325  14C8  3A25               	xorlw	37	; case 37
  8326  14C9  1903               	skipnz
  8327  14CA  2CAB               	goto	l16943
  8328  14CB  3A03               	xorlw	3	; case 38
  8329  14CC  1903               	skipnz
  8330  14CD  2CB2               	goto	l16951
  8331  14CE  2CE4               	goto	l16981
  8332  14CF                     l16969:	
  8333                           
  8334                           ;DK_RFM98.c: 982: else if(WorkStatus==3)
  8335  14CF  0866               	movf	RFM98_Running@WorkStatus,w
  8336  14D0  3A03               	xorlw	3
  8337  14D1  1D03               	skipz
  8338  14D2  2CDA               	goto	l16975
  8339                           
  8340                           ;DK_RFM98.c: 983: {
  8341                           ;DK_RFM98.c: 984: if(gb_WorkmodeBackup!=3)
  8342  14D3  085E               	movf	_gb_WorkmodeBackup,w
  8343  14D4  3A03               	xorlw	3
  8344  14D5  1903               	skipnz
  8345  14D6  2CE4               	goto	l16981
  8346                           
  8347                           ;DK_RFM98.c: 985: RFM98_Standby();
  8348  14D7  271A  3194         	fcall	_RFM98_Standby
  8349  14D9  2CE4               	goto	l16981
  8350  14DA                     l16975:	
  8351                           
  8352                           ;DK_RFM98.c: 987: else if(WorkStatus==4)
  8353  14DA  0866               	movf	RFM98_Running@WorkStatus,w
  8354  14DB  3A04               	xorlw	4
  8355  14DC  1D03               	skipz
  8356  14DD  2CE4               	goto	l16981
  8357                           
  8358                           ;DK_RFM98.c: 988: {
  8359                           ;DK_RFM98.c: 989: if(gb_WorkmodeBackup!=4)
  8360  14DE  085E               	movf	_gb_WorkmodeBackup,w
  8361  14DF  3A04               	xorlw	4
  8362  14E0  1903               	skipnz
  8363  14E1  2CE4               	goto	l16981
  8364                           
  8365                           ;DK_RFM98.c: 990: RFM98_Sleep();
  8366  14E2  270C  3194         	fcall	_RFM98_Sleep
  8367  14E4                     l16981:	
  8368                           
  8369                           ;DK_RFM98.c: 991: }
  8370                           ;DK_RFM98.c: 992: if(WorkStatus==2 || WorkStatus==0)
  8371  14E4  0866               	movf	RFM98_Running@WorkStatus,w
  8372  14E5  3A02               	xorlw	2
  8373  14E6  1D03               	btfss	3,2
  8374  14E7  08E6               	movf	RFM98_Running@WorkStatus,f
  8375  14E8  1D03               	skipz
  8376  14E9  2D04               	goto	l17003
  8377                           
  8378                           ;DK_RFM98.c: 993: {
  8379                           ;DK_RFM98.c: 994: if(mode==0x21)
  8380  14EA  086B               	movf	RFM98_Running@mode,w
  8381  14EB  3A21               	xorlw	33
  8382  14EC  1D03               	skipz
  8383  14ED  2CF5               	goto	l16993
  8384                           
  8385                           ;DK_RFM98.c: 995: {
  8386                           ;DK_RFM98.c: 996: if(ParaChangeFlag==1)
  8387  14EE  0B67               	decfsz	RFM98_Running@ParaChangeFlag,w
  8388  14EF  2CF2               	goto	l16991
  8389                           
  8390                           ;DK_RFM98.c: 997: {
  8391                           ;DK_RFM98.c: 998: RFM98_EntryTestTx();
  8392  14F0  27AD  3194         	fcall	_RFM98_EntryTestTx
  8393  14F2                     l16991:	
  8394                           
  8395                           ;DK_RFM98.c: 999: }
  8396                           ;DK_RFM98.c: 1000: RFM98_TestTx();
  8397  14F2  273B  3194         	fcall	_RFM98_TestTx
  8398                           
  8399                           ;DK_RFM98.c: 1001: }
  8400  14F4  2D04               	goto	l17003
  8401  14F5                     l16993:	
  8402                           
  8403                           ;DK_RFM98.c: 1002: else if(mode==0x22)
  8404  14F5  086B               	movf	RFM98_Running@mode,w
  8405  14F6  3A22               	xorlw	34
  8406  14F7  1D03               	skipz
  8407  14F8  2D04               	goto	l17003
  8408                           
  8409                           ;DK_RFM98.c: 1003: {
  8410                           ;DK_RFM98.c: 1004: if(ParaChangeFlag==1)
  8411  14F9  0B67               	decfsz	RFM98_Running@ParaChangeFlag,w
  8412  14FA  2CFC               	goto	l16999
  8413                           
  8414                           ;DK_RFM98.c: 1005: {
  8415                           ;DK_RFM98.c: 1006: RFM98_EntryTestRx();
  8416  14FB  27CE               	fcall	_RFM98_EntryTestRx
  8417  14FC                     l16999:	
  8418                           
  8419                           ;DK_RFM98.c: 1007: }
  8420                           ;DK_RFM98.c: 1008: RFM98_TestRx();
  8421  14FC  3188  209D  3194   	fcall	_RFM98_TestRx
  8422                           
  8423                           ;DK_RFM98.c: 1010: *RSSI=RFM98_ReadRSSI();
  8424  14FF  086A               	movf	RFM98_Running@RSSI,w
  8425  1500  0086               	movwf	6
  8426  1501  0187               	clrf	7
  8427  1502  2724               	fcall	_RFM98_ReadRSSI
  8428  1503  0081               	movwf	1
  8429  1504                     l17003:	
  8430                           
  8431                           ;DK_RFM98.c: 1011: }
  8432                           ;DK_RFM98.c: 1012: }
  8433                           ;DK_RFM98.c: 1013: gb_WorkmodeBackup=WorkStatus;
  8434  1504  0866               	movf	RFM98_Running@WorkStatus,w
  8435  1505  00DE               	movwf	_gb_WorkmodeBackup
  8436  1506  0008               	return
  8437  1507                     __end_of_RFM98_Running:	
  8438  1507                     __ptext2157:	
  8439 ;; =============== function _RFM98_FskTxPacket ends ============
  8440                           
  8441                           
  8442 ;; *************** function _RFM98_FskEntryTx *****************
  8443 ;; Defined at:
  8444 ;;		line 630 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;		None
  8447 ;; Auto vars:     Size  Location     Type
  8448 ;;  i               1    5[BANK0 ] unsigned char 
  8449 ;; Return value:  Size  Location     Type
  8450 ;;		None               void
  8451 ;; Registers used:
  8452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8453 ;; Tracked objects:
  8454 ;;		On entry : 1F/0
  8455 ;;		On exit  : 1F/0
  8456 ;;		Unchanged: FFE00/0
  8457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8459 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8460 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8461 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8462 ;;Total ram usage:        3 bytes
  8463 ;; Hardware stack levels used:    1
  8464 ;; Hardware stack levels required when called:    5
  8465 ;; This function calls:
  8466 ;;		_RFM98_Config
  8467 ;;		_SPIWrite
  8468 ;; This function is called by:
  8469 ;;		_RFM98_Running
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472  1507                     _RFM98_FskEntryTx:	
  8473                           
  8474                           ;DK_RFM98.c: 631: u8 i;
  8475                           ;DK_RFM98.c: 633: RFM98_Config(1);
  8476                           
  8477                           ; Regs used in _RFM98_FskEntryTx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8478  1507  3001               	movlw	1
  8479  1508  2620  3194         	fcall	_RFM98_Config
  8480                           
  8481                           ;DK_RFM98.c: 634: for(i=0;i<2;i++)
  8482  150A  01E5               	clrf	RFM98_FskEntryTx@i
  8483  150B                     l16757:	
  8484                           
  8485                           ;DK_RFM98.c: 635: SPIWrite(RFM98FSKRateTbl[gb_RateBuf_Addr][i]);
  8486  150B  0857               	movf	_gb_RateBuf_Addr,w
  8487  150C  0709               	addwf	9,w
  8488  150D  0709               	addwf	9,w
  8489  150E  3E59               	addlw	low (_RFM98FSKRateTbl| (0+32768))
  8490  150F  00E3               	movwf	??_RFM98_FskEntryTx
  8491  1510  3098               	movlw	high (_RFM98FSKRateTbl| (0+32768))
  8492  1511  1803               	skipnc
  8493  1512  0A89               	incf	9,f
  8494  1513  00E4               	movwf	??_RFM98_FskEntryTx+1
  8495  1514  3565               	lslf	RFM98_FskEntryTx@i,w
  8496  1515  0763               	addwf	??_RFM98_FskEntryTx,w
  8497  1516  0084               	movwf	4
  8498  1517  0864               	movf	??_RFM98_FskEntryTx+1,w
  8499  1518  1803               	skipnc
  8500  1519  0A64               	incf	??_RFM98_FskEntryTx+1,w
  8501  151A  0085               	movwf	5
  8502  151B  2789  3194         	fcall	PL40	;call to abstracted procedure
  8503  151D  26EC  3194         	fcall	_SPIWrite
  8504  151F  3002               	movlw	2
  8505  1520  0AE5               	incf	RFM98_FskEntryTx@i,f
  8506  1521  0265               	subwf	RFM98_FskEntryTx@i,w
  8507  1522  1C03               	skipc
  8508  1523  2D0B               	goto	l16757
  8509                           
  8510                           ;DK_RFM98.c: 636: for(i=0;i<3;i++)
  8511  1524  01E5               	clrf	RFM98_FskEntryTx@i
  8512  1525                     l16769:	
  8513                           
  8514                           ;DK_RFM98.c: 637: SPIWrite(RFM98TxTable[i]);
  8515  1525  3565               	lslf	RFM98_FskEntryTx@i,w
  8516  1526  3E90               	addlw	low (_RFM98TxTable| (0+32768))
  8517  1527  0084               	movwf	4
  8518  1528  3098               	movlw	high (_RFM98TxTable| (0+32768))
  8519  1529  2756  3194         	fcall	PL12	;call to abstracted procedure
  8520  152B  26EC  3194         	fcall	_SPIWrite
  8521  152D  3003               	movlw	3
  8522  152E  0AE5               	incf	RFM98_FskEntryTx@i,f
  8523  152F  0265               	subwf	RFM98_FskEntryTx@i,w
  8524  1530  1C03               	skipc
  8525  1531  2D25               	goto	l16769
  8526                           
  8527                           ;DK_RFM98.c: 638: SPIWrite(0x0103+0x08);
  8528  1532  300B               	movlw	11
  8529  1533  00F5               	movwf	?_SPIWrite
  8530  1534  3001               	movlw	1
  8531  1535  00F6               	movwf	?_SPIWrite+1
  8532  1536  26EC  3194         	fcall	_SPIWrite
  8533                           
  8534                           ;DK_RFM98.c: 640: gb_SysTimer_1S=3;
  8535                           
  8536                           ;DK_RFM98.c: 641: gb_StatusRx=0;
  8537                           
  8538                           ;DK_RFM98.c: 642: gb_WaitStableFlag=0x0f;
  8539  1538  2FC8               	ljmp	PL44	;call to abstracted procedure
  8540  1539                     __end_of_RFM98_FskEntryTx:	
  8541  1539                     __ptext2159:	
  8542 ;; =============== function _RFM98_FskRxPacket ends ============
  8543                           
  8544                           
  8545 ;; *************** function _RFM98_FskEntryRx *****************
  8546 ;; Defined at:
  8547 ;;		line 543 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;		None
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;  i               1    5[BANK0 ] unsigned char 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;		None               void
  8554 ;; Registers used:
  8555 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8556 ;; Tracked objects:
  8557 ;;		On entry : 1F/0
  8558 ;;		On exit  : 1F/0
  8559 ;;		Unchanged: FFE00/0
  8560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8563 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;Total ram usage:        3 bytes
  8566 ;; Hardware stack levels used:    1
  8567 ;; Hardware stack levels required when called:    5
  8568 ;; This function calls:
  8569 ;;		_RFM98_Config
  8570 ;;		_SPIWrite
  8571 ;; This function is called by:
  8572 ;;		_RFM98_Running
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575  1539                     _RFM98_FskEntryRx:	
  8576                           
  8577                           ;DK_RFM98.c: 544: u8 i;
  8578                           ;DK_RFM98.c: 546: TRISA1=1;
  8579                           
  8580                           ; Regs used in _RFM98_FskEntryRx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8581  1539  0021               	movlb	1	; select bank1
  8582  153A  3001               	movlw	1
  8583  153B  148C               	bsf	12,1
  8584                           
  8585                           ;DK_RFM98.c: 548: RFM98_Config(1);
  8586  153C  2620  3194         	fcall	_RFM98_Config
  8587                           
  8588                           ;DK_RFM98.c: 549: for(i=0;i<2;i++)
  8589  153E  01E5               	clrf	RFM98_FskEntryRx@i
  8590  153F                     l16665:	
  8591                           
  8592                           ;DK_RFM98.c: 550: SPIWrite(RFM98FSKRateTbl[gb_RateBuf_Addr][i]);
  8593  153F  0857               	movf	_gb_RateBuf_Addr,w
  8594  1540  0709               	addwf	9,w
  8595  1541  0709               	addwf	9,w
  8596  1542  3E59               	addlw	low (_RFM98FSKRateTbl| (0+32768))
  8597  1543  00E3               	movwf	??_RFM98_FskEntryRx
  8598  1544  3098               	movlw	high (_RFM98FSKRateTbl| (0+32768))
  8599  1545  1803               	skipnc
  8600  1546  0A89               	incf	9,f
  8601  1547  00E4               	movwf	??_RFM98_FskEntryRx+1
  8602  1548  3565               	lslf	RFM98_FskEntryRx@i,w
  8603  1549  0763               	addwf	??_RFM98_FskEntryRx,w
  8604  154A  0084               	movwf	4
  8605  154B  0864               	movf	??_RFM98_FskEntryRx+1,w
  8606  154C  1803               	skipnc
  8607  154D  0A64               	incf	??_RFM98_FskEntryRx+1,w
  8608  154E  0085               	movwf	5
  8609  154F  2789  3194         	fcall	PL40	;call to abstracted procedure
  8610  1551  26EC  3194         	fcall	_SPIWrite
  8611  1553  3002               	movlw	2
  8612  1554  0AE5               	incf	RFM98_FskEntryRx@i,f
  8613  1555  0265               	subwf	RFM98_FskEntryRx@i,w
  8614  1556  1C03               	skipc
  8615  1557  2D3F               	goto	l16665
  8616                           
  8617                           ;DK_RFM98.c: 551: for(i=0;i<4;i++)
  8618  1558  01E5               	clrf	RFM98_FskEntryRx@i
  8619  1559                     l16677:	
  8620                           
  8621                           ;DK_RFM98.c: 552: SPIWrite(RFM98RxTable[i]);
  8622  1559  3565               	lslf	RFM98_FskEntryRx@i,w
  8623  155A  3E7B               	addlw	low (_RFM98RxTable| (0+32768))
  8624  155B  0084               	movwf	4
  8625  155C  3098               	movlw	high (_RFM98RxTable| (0+32768))
  8626  155D  2756  3194         	fcall	PL12	;call to abstracted procedure
  8627  155F  26EC  3194         	fcall	_SPIWrite
  8628  1561  3004               	movlw	4
  8629  1562  0AE5               	incf	RFM98_FskEntryRx@i,f
  8630  1563  0265               	subwf	RFM98_FskEntryRx@i,w
  8631  1564  1C03               	skipc
  8632  1565  2D59               	goto	l16677
  8633                           
  8634                           ;DK_RFM98.c: 553: SPIWrite(0x0105+0x08);
  8635  1566  300D               	movlw	13
  8636  1567  00F5               	movwf	?_SPIWrite
  8637  1568  3001               	movlw	1
  8638  1569  00F6               	movwf	?_SPIWrite+1
  8639  156A  26EC  3194         	fcall	_SPIWrite
  8640                           
  8641                           ;DK_RFM98.c: 555: gb_SysTimer_1S=3;
  8642                           
  8643                           ;DK_RFM98.c: 556: gb_StatusTx=0;
  8644                           
  8645                           ;DK_RFM98.c: 557: gb_WaitStableFlag=0x0f;
  8646  156C  2FE7               	ljmp	PL43	;call to abstracted procedure
  8647  156D                     __end_of_RFM98_FskEntryRx:	
  8648  156D                     __ptext2167:	
  8649 ;; =============== function _RFParameterSelect ends ============
  8650                           
  8651                           
  8652 ;; *************** function _RFM98_TestConfig *****************
  8653 ;; Defined at:
  8654 ;;		line 814 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;		None
  8657 ;; Auto vars:     Size  Location     Type
  8658 ;;  i               1    0[BANK0 ] unsigned char 
  8659 ;; Return value:  Size  Location     Type
  8660 ;;		None               void
  8661 ;; Registers used:
  8662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8663 ;; Tracked objects:
  8664 ;;		On entry : 1E/1
  8665 ;;		On exit  : 1F/0
  8666 ;;		Unchanged: FFE00/0
  8667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8671 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8672 ;;Total ram usage:        3 bytes
  8673 ;; Hardware stack levels used:    1
  8674 ;; Hardware stack levels required when called:    4
  8675 ;; This function calls:
  8676 ;;		_RFM98_Sleep
  8677 ;;		___bmul
  8678 ;;		_SPIWrite
  8679 ;;		_RFM98_Standby
  8680 ;; This function is called by:
  8681 ;;		_RFM98_EntryTestTx
  8682 ;;		_RFM98_EntryTestRx
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685  156D                     _RFM98_TestConfig:	
  8686                           
  8687                           ;DK_RFM98.c: 815: u8 i;
  8688                           ;DK_RFM98.c: 817: TRISD0=0;
  8689                           
  8690                           ; Regs used in _RFM98_TestConfig: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8691                           
  8692                           ;DK_RFM98.c: 818: LATD0=0;
  8693                           
  8694                           ;DK_RFM98.c: 819: for(i=200;i!=0;i--)
  8695  156D  2797  3194         	fcall	PL56	;call to abstracted procedure
  8696  156F  00E0               	movwf	RFM98_TestConfig@i
  8697  1570                     l5433:	
  8698  1570  0000               	nop	;#
  8699  1571  0020               	movlb	0	; select bank0
  8700  1572  0BE0               	decfsz	RFM98_TestConfig@i,f
  8701  1573  2D70               	goto	l5433
  8702                           
  8703                           ;DK_RFM98.c: 821: LATD0=1;
  8704  1574  0022               	movlb	2	; select bank2
  8705  1575  30C8               	movlw	200
  8706  1576  140F               	bsf	15,0
  8707                           
  8708                           ;DK_RFM98.c: 822: for(i=200;i!=0;i--)
  8709  1577  0020               	movlb	0	; select bank0
  8710  1578  00E0               	movwf	RFM98_TestConfig@i
  8711  1579                     l5435:	
  8712  1579  0000               	nop	;#
  8713  157A  0020               	movlb	0	; select bank0
  8714  157B  0BE0               	decfsz	RFM98_TestConfig@i,f
  8715  157C  2D79               	goto	l5435
  8716                           
  8717                           ;DK_RFM98.c: 824: TRISD0=1;
  8718  157D  0021               	movlb	1	; select bank1
  8719  157E  140F               	bsf	15,0
  8720                           
  8721                           ;DK_RFM98.c: 825: for(gb_SysTimer_1S=1;gb_SysTimer_1S>0;);
  8722  157F  0020               	movlb	0	; select bank0
  8723  1580  01DB               	clrf	_gb_SysTimer_1S
  8724  1581  0ADB               	incf	_gb_SysTimer_1S,f
  8725  1582                     l16033:	
  8726  1582  08DB               	movf	_gb_SysTimer_1S,f
  8727  1583  1D03               	skipz
  8728  1584  2D82               	goto	l16033
  8729                           
  8730                           ;DK_RFM98.c: 827: RFM98_Sleep();
  8731  1585  270C  3194         	fcall	_RFM98_Sleep
  8732                           
  8733                           ;DK_RFM98.c: 828: for(i=250;i!=0;i--)
  8734  1587  30FA               	movlw	250
  8735  1588  00E0               	movwf	RFM98_TestConfig@i
  8736  1589                     l5439:	
  8737  1589  0000               	nop	;#
  8738  158A  0020               	movlb	0	; select bank0
  8739  158B  0BE0               	decfsz	RFM98_TestConfig@i,f
  8740  158C  2D89               	goto	l5439
  8741                           
  8742                           ;DK_RFM98.c: 831: for(i=0;i<3;i++)
  8743  158D  01E0               	clrf	RFM98_TestConfig@i
  8744  158E                     l16055:	
  8745                           
  8746                           ;DK_RFM98.c: 832: {
  8747                           ;DK_RFM98.c: 833: SPIWrite(RFM98FreqTbl[gb_FreqBuf_Addr][i]);
  8748  158E  3006               	movlw	6
  8749  158F  00F2               	movwf	?___bmul
  8750  1590  084F               	movf	_gb_FreqBuf_Addr,w
  8751  1591  2700  3194         	fcall	___bmul
  8752  1593  3E8A               	addlw	low (_RFM98FreqTbl| (0+32768))
  8753  1594  00F8               	movwf	??_RFM98_TestConfig
  8754  1595  3098               	movlw	high (_RFM98FreqTbl| (0+32768))
  8755  1596  2774  3194         	fcall	PL33	;call to abstracted procedure
  8756  1598  26EC  3194         	fcall	_SPIWrite
  8757  159A  3003               	movlw	3
  8758  159B  0AE0               	incf	RFM98_TestConfig@i,f
  8759  159C  0260               	subwf	RFM98_TestConfig@i,w
  8760  159D  1C03               	skipc
  8761  159E  2D8E               	goto	l16055
  8762                           
  8763                           ;DK_RFM98.c: 834: }
  8764                           ;DK_RFM98.c: 835: for(i=0;i<2;i++)
  8765  159F  01E0               	clrf	RFM98_TestConfig@i
  8766  15A0                     l16067:	
  8767                           
  8768                           ;DK_RFM98.c: 836: SPIWrite(RFM98FSKRateTbl[gb_RateBuf_Addr][i]);
  8769  15A0  0857               	movf	_gb_RateBuf_Addr,w
  8770  15A1  0709               	addwf	9,w
  8771  15A2  0709               	addwf	9,w
  8772  15A3  3E59               	addlw	low (_RFM98FSKRateTbl| (0+32768))
  8773  15A4  00F8               	movwf	??_RFM98_TestConfig
  8774  15A5  3098               	movlw	high (_RFM98FSKRateTbl| (0+32768))
  8775  15A6  2774  3194         	fcall	PL33	;call to abstracted procedure
  8776  15A8  26EC  3194         	fcall	_SPIWrite
  8777  15AA  3002               	movlw	2
  8778  15AB  0AE0               	incf	RFM98_TestConfig@i,f
  8779  15AC  0260               	subwf	RFM98_TestConfig@i,w
  8780  15AD  1C03               	skipc
  8781  15AE  2DA0               	goto	l16067
  8782                           
  8783                           ;DK_RFM98.c: 838: SPIWrite(RFM98PowerTbl[gb_PowerBuf_Addr]);
  8784  15AF  3556               	lslf	_gb_PowerBuf_Addr,w
  8785  15B0  3E73               	addlw	low (_RFM98PowerTbl| (0+32768))
  8786  15B1  0084               	movwf	4
  8787  15B2  3098               	movlw	high (_RFM98PowerTbl| (0+32768))
  8788  15B3  2756  3194         	fcall	PL12	;call to abstracted procedure
  8789  15B5  26EC  3194         	fcall	_SPIWrite
  8790                           
  8791                           ;DK_RFM98.c: 841: for(i=0;i<9;i++)
  8792  15B7  01E0               	clrf	RFM98_TestConfig@i
  8793  15B8                     l16081:	
  8794                           
  8795                           ;DK_RFM98.c: 842: SPIWrite(RFM98TestConfigTbl[i]);
  8796  15B8  3560               	lslf	RFM98_TestConfig@i,w
  8797  15B9  3E47               	addlw	low (_RFM98TestConfigTbl| (0+32768))
  8798  15BA  0084               	movwf	4
  8799  15BB  3098               	movlw	high (_RFM98TestConfigTbl| (0+32768))
  8800  15BC  2756  3194         	fcall	PL12	;call to abstracted procedure
  8801  15BE  26EC  3194         	fcall	_SPIWrite
  8802  15C0  3009               	movlw	9
  8803  15C1  0AE0               	incf	RFM98_TestConfig@i,f
  8804  15C2  0260               	subwf	RFM98_TestConfig@i,w
  8805  15C3  1C03               	skipc
  8806  15C4  2DB8               	goto	l16081
  8807                           
  8808                           ;DK_RFM98.c: 843: RFM98_Standby();
  8809  15C5  2F1A               	ljmp	l15475
  8810  15C6                     __end_of_RFM98_TestConfig:	
  8811  15C6                     __ptext2161:	
  8812 ;; =============== function _RFM98_LoRaTxPacket ends ============
  8813                           
  8814                           
  8815 ;; *************** function _RFM98_LoRaEntryTx *****************
  8816 ;; Defined at:
  8817 ;;		line 364 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;		None
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  addr            1    3[BANK0 ] unsigned char 
  8822 ;; Return value:  Size  Location     Type
  8823 ;;		None               void
  8824 ;; Registers used:
  8825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8826 ;; Tracked objects:
  8827 ;;		On entry : 1F/0
  8828 ;;		On exit  : 1F/0
  8829 ;;		Unchanged: FFE00/0
  8830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;Total ram usage:        1 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    5
  8838 ;; This function calls:
  8839 ;;		_RFM98_Config
  8840 ;;		_SPIWrite
  8841 ;;		_RFM98_LoRaClearIrq
  8842 ;;		_SPIRead
  8843 ;; This function is called by:
  8844 ;;		_RFM98_Running
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847  15C6                     _RFM98_LoRaEntryTx:	
  8848                           
  8849                           ;DK_RFM98.c: 365: u8 addr;
  8850                           ;DK_RFM98.c: 367: RFM98_Config(0);
  8851                           
  8852                           ; Regs used in _RFM98_LoRaEntryTx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8853  15C6  3000               	movlw	0
  8854  15C7  2620  3194         	fcall	_RFM98_Config
  8855                           
  8856                           ;DK_RFM98.c: 369: SPIWrite(0x4D00+0x87);
  8857  15C9  3087               	movlw	135
  8858  15CA  00F5               	movwf	?_SPIWrite
  8859  15CB  304D               	movlw	77
  8860  15CC  00F6               	movwf	?_SPIWrite+1
  8861  15CD  26EC  3194         	fcall	_SPIWrite
  8862                           
  8863                           ;DK_RFM98.c: 370: SPIWrite(0x2400);
  8864  15CF  3000               	movlw	0
  8865  15D0  00F5               	movwf	?_SPIWrite
  8866  15D1  3024               	movlw	36
  8867  15D2  00F6               	movwf	?_SPIWrite+1
  8868  15D3  26EC  3194         	fcall	_SPIWrite
  8869                           
  8870                           ;DK_RFM98.c: 371: SPIWrite(0x4000+0x41);
  8871  15D5  3041               	movlw	65
  8872  15D6  00F5               	movwf	?_SPIWrite
  8873  15D7  3040               	movlw	64
  8874  15D8  00F6               	movwf	?_SPIWrite+1
  8875  15D9  26EC  3194         	fcall	_SPIWrite
  8876                           
  8877                           ;DK_RFM98.c: 373: RFM98_LoRaClearIrq();
  8878  15DB  271F  3194         	fcall	_RFM98_LoRaClearIrq
  8879                           
  8880                           ;DK_RFM98.c: 374: SPIWrite(0x1100+0xF7);
  8881  15DD  30F7               	movlw	247
  8882  15DE  00F5               	movwf	?_SPIWrite
  8883  15DF  3011               	movlw	17
  8884  15E0  00F6               	movwf	?_SPIWrite+1
  8885  15E1  26EC  3194         	fcall	_SPIWrite
  8886                           
  8887                           ;DK_RFM98.c: 375: SPIWrite(0x2200+ 21);
  8888  15E3  27A3  3194         	fcall	PL66	;call to abstracted procedure
  8889  15E5  26EC  3194         	fcall	_SPIWrite
  8890                           
  8891                           ;DK_RFM98.c: 377: addr = SPIRead((u8)(0x0E00>>8));
  8892  15E7  300E               	movlw	14
  8893  15E8  2711  3194         	fcall	_SPIRead
  8894  15EA  00E3               	movwf	RFM98_LoRaEntryTx@addr
  8895                           
  8896                           ;DK_RFM98.c: 378: SPIWrite(0x0D00+addr);
  8897  15EB  279E  3194         	fcall	PL60	;call to abstracted procedure
  8898  15ED  26EC  3194         	fcall	_SPIWrite
  8899                           
  8900                           ;DK_RFM98.c: 380: gb_SysTimer_1S=3;
  8901                           
  8902                           ;DK_RFM98.c: 381: gb_StatusRx=0;
  8903                           
  8904                           ;DK_RFM98.c: 382: gb_WaitStableFlag=0x0f;
  8905  15EF  2FC8               	ljmp	PL44	;call to abstracted procedure
  8906  15F0                     __end_of_RFM98_LoRaEntryTx:	
  8907  15F0                     __ptext2163:	
  8908 ;; =============== function _RFM98_LoRaRxPacket ends ============
  8909                           
  8910                           
  8911 ;; *************** function _RFM98_LoRaEntryRx *****************
  8912 ;; Defined at:
  8913 ;;		line 247 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  8914 ;; Parameters:    Size  Location     Type
  8915 ;;		None
  8916 ;; Auto vars:     Size  Location     Type
  8917 ;;  addr            1    3[BANK0 ] unsigned char 
  8918 ;; Return value:  Size  Location     Type
  8919 ;;		None               void
  8920 ;; Registers used:
  8921 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8922 ;; Tracked objects:
  8923 ;;		On entry : 1F/0
  8924 ;;		On exit  : 1F/0
  8925 ;;		Unchanged: FFE00/0
  8926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8931 ;;Total ram usage:        1 bytes
  8932 ;; Hardware stack levels used:    1
  8933 ;; Hardware stack levels required when called:    5
  8934 ;; This function calls:
  8935 ;;		_RFM98_Config
  8936 ;;		_SPIWrite
  8937 ;;		_RFM98_LoRaClearIrq
  8938 ;;		_SPIRead
  8939 ;; This function is called by:
  8940 ;;		_RFM98_Running
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943  15F0                     _RFM98_LoRaEntryRx:	
  8944                           
  8945                           ;DK_RFM98.c: 248: u8 addr;
  8946                           ;DK_RFM98.c: 250: RFM98_Config(0);
  8947                           
  8948                           ; Regs used in _RFM98_LoRaEntryRx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8949  15F0  3000               	movlw	0
  8950  15F1  2620  3194         	fcall	_RFM98_Config
  8951                           
  8952                           ;DK_RFM98.c: 252: SPIWrite(0x4D00+0x84);
  8953  15F3  3084               	movlw	132
  8954  15F4  00F5               	movwf	?_SPIWrite
  8955  15F5  304D               	movlw	77
  8956  15F6  00F6               	movwf	?_SPIWrite+1
  8957  15F7  26EC  3194         	fcall	_SPIWrite
  8958                           
  8959                           ;DK_RFM98.c: 253: SPIWrite(0x2400+0xFF);
  8960  15F9  30FF               	movlw	255
  8961  15FA  00F5               	movwf	?_SPIWrite
  8962  15FB  3024               	movlw	36
  8963  15FC  00F6               	movwf	?_SPIWrite+1
  8964  15FD  26EC  3194         	fcall	_SPIWrite
  8965                           
  8966                           ;DK_RFM98.c: 254: SPIWrite(0x4000+0x01);
  8967  15FF  3001               	movlw	1
  8968  1600  00F5               	movwf	?_SPIWrite
  8969  1601  3040               	movlw	64
  8970  1602  00F6               	movwf	?_SPIWrite+1
  8971  1603  26EC  3194         	fcall	_SPIWrite
  8972                           
  8973                           ;DK_RFM98.c: 256: SPIWrite(0x1100+0x3F);
  8974  1605  303F               	movlw	63
  8975  1606  00F5               	movwf	?_SPIWrite
  8976  1607  3011               	movlw	17
  8977  1608  00F6               	movwf	?_SPIWrite+1
  8978  1609  26EC  3194         	fcall	_SPIWrite
  8979                           
  8980                           ;DK_RFM98.c: 257: RFM98_LoRaClearIrq();
  8981  160B  271F  3194         	fcall	_RFM98_LoRaClearIrq
  8982                           
  8983                           ;DK_RFM98.c: 259: SPIWrite(0x2200+ 21);
  8984  160D  27A3  3194         	fcall	PL66	;call to abstracted procedure
  8985  160F  26EC  3194         	fcall	_SPIWrite
  8986                           
  8987                           ;DK_RFM98.c: 261: addr = SPIRead((u8)(0x0F00>>8));
  8988  1611  300F               	movlw	15
  8989  1612  2711  3194         	fcall	_SPIRead
  8990  1614  00E3               	movwf	RFM98_LoRaEntryRx@addr
  8991                           
  8992                           ;DK_RFM98.c: 262: SPIWrite(0x0D00+addr);
  8993  1615  279E  3194         	fcall	PL60	;call to abstracted procedure
  8994  1617  26EC  3194         	fcall	_SPIWrite
  8995                           
  8996                           ;DK_RFM98.c: 263: SPIWrite(0x0100+0x05+0x08);
  8997  1619  300D               	movlw	13
  8998  161A  00F5               	movwf	?_SPIWrite
  8999  161B  3001               	movlw	1
  9000  161C  00F6               	movwf	?_SPIWrite+1
  9001  161D  26EC  3194         	fcall	_SPIWrite
  9002                           
  9003                           ;DK_RFM98.c: 265: gb_SysTimer_1S=3;
  9004                           
  9005                           ;DK_RFM98.c: 266: gb_StatusTx=0;
  9006                           
  9007                           ;DK_RFM98.c: 267: gb_WaitStableFlag=0x0f;
  9008  161F  2FE7               	ljmp	PL43	;call to abstracted procedure
  9009  1620                     __end_of_RFM98_LoRaEntryRx:	
  9010  1620                     __ptext2174:	
  9011 ;; =============== function _RFM98_LoRaRxWaitStable ends ============
  9012                           
  9013                           
  9014 ;; *************** function _RFM98_Config *****************
  9015 ;; Defined at:
  9016 ;;		line 725 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  mode            1    wreg     unsigned char 
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;  mode            1    0[BANK0 ] unsigned char 
  9021 ;;  tmp             1    1[BANK0 ] unsigned char 
  9022 ;;  i               1    2[BANK0 ] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;		None               void
  9025 ;; Registers used:
  9026 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 1E/0
  9029 ;;		On exit  : 1F/0
  9030 ;;		Unchanged: FFE00/0
  9031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9035 ;;      Totals:         2       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9036 ;;Total ram usage:        5 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    4
  9039 ;; This function calls:
  9040 ;;		_RFM98_Sleep
  9041 ;;		_RFM98_EntryLoRa
  9042 ;;		___bmul
  9043 ;;		_SPIWrite
  9044 ;;		_SPIRead
  9045 ;;		_RFM98_Standby
  9046 ;; This function is called by:
  9047 ;;		_RFM98_LoRaEntryRx
  9048 ;;		_RFM98_LoRaEntryTx
  9049 ;;		_RFM98_FskEntryRx
  9050 ;;		_RFM98_FskEntryTx
  9051 ;; This function uses a non-reentrant model
  9052 ;;
  9053  1620                     _RFM98_Config:	
  9054                           
  9055                           ; Regs used in _RFM98_Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9056                           ;RFM98_Config@mode stored from wreg
  9057  1620  0020               	movlb	0	; select bank0
  9058  1621  00E0               	movwf	RFM98_Config@mode
  9059                           
  9060                           ;DK_RFM98.c: 726: u8 i;
  9061                           ;DK_RFM98.c: 728: TRISD0=0;
  9062                           
  9063                           ;DK_RFM98.c: 729: LATD0=0;
  9064                           
  9065                           ;DK_RFM98.c: 730: for(i=200;i!=0;i--)
  9066  1622  2797  3194         	fcall	PL56	;call to abstracted procedure
  9067  1624  00E2               	movwf	RFM98_Config@i
  9068  1625                     l5412:	
  9069  1625  0000               	nop	;#
  9070  1626  0020               	movlb	0	; select bank0
  9071  1627  0BE2               	decfsz	RFM98_Config@i,f
  9072  1628  2E25               	goto	l5412
  9073                           
  9074                           ;DK_RFM98.c: 732: LATD0=1;
  9075  1629  0022               	movlb	2	; select bank2
  9076  162A  30C8               	movlw	200
  9077  162B  140F               	bsf	15,0
  9078                           
  9079                           ;DK_RFM98.c: 733: for(i=200;i!=0;i--)
  9080  162C  0020               	movlb	0	; select bank0
  9081  162D  00E2               	movwf	RFM98_Config@i
  9082  162E                     l5414:	
  9083  162E  0000               	nop	;#
  9084  162F  0020               	movlb	0	; select bank0
  9085  1630  0BE2               	decfsz	RFM98_Config@i,f
  9086  1631  2E2E               	goto	l5414
  9087                           
  9088                           ;DK_RFM98.c: 735: TRISD0=1;
  9089  1632  0021               	movlb	1	; select bank1
  9090  1633  140F               	bsf	15,0
  9091                           
  9092                           ;DK_RFM98.c: 736: for(gb_SysTimer_1S=1;gb_SysTimer_1S>0;);
  9093  1634  0020               	movlb	0	; select bank0
  9094  1635  01DB               	clrf	_gb_SysTimer_1S
  9095  1636  0ADB               	incf	_gb_SysTimer_1S,f
  9096  1637                     l15861:	
  9097  1637  08DB               	movf	_gb_SysTimer_1S,f
  9098  1638  1D03               	skipz
  9099  1639  2E37               	goto	l15861
  9100                           
  9101                           ;DK_RFM98.c: 738: RFM98_Sleep();
  9102  163A  270C  3194         	fcall	_RFM98_Sleep
  9103                           
  9104                           ;DK_RFM98.c: 739: for(i=250;i!=0;i--)
  9105  163C  30FA               	movlw	250
  9106  163D  00E2               	movwf	RFM98_Config@i
  9107  163E                     l5418:	
  9108  163E  0000               	nop	;#
  9109  163F  0020               	movlb	0	; select bank0
  9110  1640  0BE2               	decfsz	RFM98_Config@i,f
  9111  1641  2E3E               	goto	l5418
  9112                           
  9113                           ;DK_RFM98.c: 742: if(!mode)
  9114  1642  08E0               	movf	RFM98_Config@mode,f
  9115  1643  1D03               	skipz
  9116  1644  2EC6               	goto	l15923
  9117                           
  9118                           ;DK_RFM98.c: 743: {
  9119                           ;DK_RFM98.c: 744: RFM98_EntryLoRa();
  9120  1645  272C  3194         	fcall	_RFM98_EntryLoRa
  9121                           
  9122                           ;DK_RFM98.c: 747: for(i=0;i<3;i++)
  9123  1647  01E2               	clrf	RFM98_Config@i
  9124  1648                     l15887:	
  9125                           
  9126                           ;DK_RFM98.c: 748: {
  9127                           ;DK_RFM98.c: 749: SPIWrite(RFM98FreqTbl[gb_FreqBuf_Addr][i]);
  9128  1648  3006               	movlw	6
  9129  1649  00F2               	movwf	?___bmul
  9130  164A  084F               	movf	_gb_FreqBuf_Addr,w
  9131  164B  2700  3194         	fcall	___bmul
  9132  164D  275E  3194         	fcall	PL23	;call to abstracted procedure
  9133  164F  26EC  3194         	fcall	_SPIWrite
  9134  1651  3003               	movlw	3
  9135  1652  0AE2               	incf	RFM98_Config@i,f
  9136  1653  0262               	subwf	RFM98_Config@i,w
  9137  1654  1C03               	skipc
  9138  1655  2E48               	goto	l15887
  9139                           
  9140                           ;DK_RFM98.c: 750: }
  9141                           ;DK_RFM98.c: 753: SPIWrite(RFM98PowerTbl[gb_PowerBuf_Addr]);
  9142  1656  3556               	lslf	_gb_PowerBuf_Addr,w
  9143  1657  3E73               	addlw	low (_RFM98PowerTbl| (0+32768))
  9144  1658  0084               	movwf	4
  9145  1659  3098               	movlw	high (_RFM98PowerTbl| (0+32768))
  9146  165A  2756  3194         	fcall	PL12	;call to abstracted procedure
  9147  165C  26EC  3194         	fcall	_SPIWrite
  9148                           
  9149                           ;DK_RFM98.c: 755: SPIWrite(0x0B00+0x0B);
  9150  165E  300B               	movlw	11
  9151  165F  00F5               	movwf	?_SPIWrite
  9152  1660  00F6               	movwf	?_SPIWrite+1
  9153  1661  26EC  3194         	fcall	_SPIWrite
  9154                           
  9155                           ;DK_RFM98.c: 756: SPIWrite(0x0C00+0x23);
  9156  1663  3023               	movlw	35
  9157  1664  00F5               	movwf	?_SPIWrite
  9158  1665  300C               	movlw	12
  9159  1666  00F6               	movwf	?_SPIWrite+1
  9160  1667  26EC  3194         	fcall	_SPIWrite
  9161                           
  9162                           ;DK_RFM98.c: 758: if(RFM98SpreadFactorTbl[gb_RateBuf_Addr]==6)
  9163  1669  2770  3194         	fcall	PL24	;call to abstracted procedure
  9164  166B  1803               	skipnc
  9165  166C  3E01               	addlw	1
  9166  166D  0085               	movwf	5
  9167  166E  0800               	movf	0,w	;code access
  9168  166F  3A06               	xorlw	6
  9169  1670  1D03               	skipz
  9170  1671  2E9A               	goto	l15913
  9171                           
  9172                           ;DK_RFM98.c: 759: {
  9173                           ;DK_RFM98.c: 760: u8 tmp;
  9174                           ;DK_RFM98.c: 761: SPIWrite(0x1D00+(RFM98LoRaBwTbl[gb_BandBuf_Addr]<<4)+(0x01<<1)+0x01);
  9175  1672  0844               	movf	_gb_BandBuf_Addr,w
  9176  1673  3E69               	addlw	low (_RFM98LoRaBwTbl| (0+32768))
  9177  1674  0084               	movwf	4
  9178  1675  3098               	movlw	high (_RFM98LoRaBwTbl| (0+32768))
  9179  1676  2746  3194         	fcall	PL9	;call to abstracted procedure
  9180  1678  3003               	movlw	3
  9181  1679  07F5               	addwf	?_SPIWrite,f
  9182  167A  301D               	movlw	29
  9183  167B  3DF6               	addwfc	?_SPIWrite+1,f
  9184  167C  26EC  3194         	fcall	_SPIWrite
  9185                           
  9186                           ;DK_RFM98.c: 762: SPIWrite(0x1E00+(RFM98SpreadFactorTbl[gb_RateBuf_Addr]<<4)+(0x01<<2)+0
      +                          x03);
  9187  167E  2770  3194         	fcall	PL24	;call to abstracted procedure
  9188  1680  2746  3194         	fcall	PL9	;call to abstracted procedure
  9189  1682  27A8  3194         	fcall	PL67	;call to abstracted procedure
  9190  1684  26EC  3194         	fcall	_SPIWrite
  9191                           
  9192                           ;DK_RFM98.c: 764: tmp = SPIRead(0x31);
  9193  1686  3031               	movlw	49
  9194  1687  2711  3194         	fcall	_SPIRead
  9195  1689  00E1               	movwf	RFM98_Config@tmp
  9196                           
  9197                           ;DK_RFM98.c: 765: tmp &= 0xF8;
  9198  168A  30F8               	movlw	248
  9199  168B  05E1               	andwf	RFM98_Config@tmp,f
  9200                           
  9201                           ;DK_RFM98.c: 766: tmp |= 0x05;
  9202  168C  3005               	movlw	5
  9203  168D  04E1               	iorwf	RFM98_Config@tmp,f
  9204                           
  9205                           ;DK_RFM98.c: 767: SPIWrite(0x3100+tmp);
  9206  168E  0861               	movf	RFM98_Config@tmp,w
  9207  168F  00F5               	movwf	?_SPIWrite
  9208  1690  3031               	movlw	49
  9209  1691  01F6               	clrf	?_SPIWrite+1
  9210  1692  07F6               	addwf	?_SPIWrite+1,f
  9211  1693  26EC  3194         	fcall	_SPIWrite
  9212                           
  9213                           ;DK_RFM98.c: 768: SPIWrite(0x3700+0x0C);
  9214  1695  300C               	movlw	12
  9215  1696  00F5               	movwf	?_SPIWrite
  9216  1697  3037               	movlw	55
  9217  1698  00F6               	movwf	?_SPIWrite+1
  9218  1699  2EAC               	goto	L8
  9219  169A                     l15913:	
  9220                           ;DK_RFM98.c: 769: }
  9221                           
  9222                           
  9223                           ;DK_RFM98.c: 770: else
  9224                           ;DK_RFM98.c: 771: {
  9225                           ;DK_RFM98.c: 772: SPIWrite(0x1D00+(RFM98LoRaBwTbl[gb_BandBuf_Addr]<<4)+(0x01<<1)+0x00);
  9226  169A  0844               	movf	_gb_BandBuf_Addr,w
  9227  169B  3E69               	addlw	low (_RFM98LoRaBwTbl| (0+32768))
  9228  169C  0084               	movwf	4
  9229  169D  3098               	movlw	high (_RFM98LoRaBwTbl| (0+32768))
  9230  169E  2746  3194         	fcall	PL9	;call to abstracted procedure
  9231  16A0  3002               	movlw	2
  9232  16A1  07F5               	addwf	?_SPIWrite,f
  9233  16A2  301D               	movlw	29
  9234  16A3  3DF6               	addwfc	?_SPIWrite+1,f
  9235  16A4  26EC  3194         	fcall	_SPIWrite
  9236                           
  9237                           ;DK_RFM98.c: 773: SPIWrite(0x1E00+(RFM98SpreadFactorTbl[gb_RateBuf_Addr]<<4)+(0x01<<2)+0
      +                          x03);
  9238  16A6  2770  3194         	fcall	PL24	;call to abstracted procedure
  9239  16A8  2746  3194         	fcall	PL9	;call to abstracted procedure
  9240  16AA  27A8  3194         	fcall	PL67	;call to abstracted procedure
  9241  16AC                     L8:	
  9242  16AC  26EC  3194         	fcall	_SPIWrite
  9243                           
  9244                           ;DK_RFM98.c: 774: }
  9245                           ;DK_RFM98.c: 775: SPIWrite(0x1F00+0xFF);
  9246  16AE  30FF               	movlw	255
  9247  16AF  00F5               	movwf	?_SPIWrite
  9248  16B0  301F               	movlw	31
  9249  16B1  00F6               	movwf	?_SPIWrite+1
  9250  16B2  26EC  3194         	fcall	_SPIWrite
  9251                           
  9252                           ;DK_RFM98.c: 777: SPIWrite(0x2000 + 0);
  9253  16B4  3020               	movlw	32
  9254  16B5  01F5               	clrf	?_SPIWrite
  9255  16B6  00F6               	movwf	?_SPIWrite+1
  9256  16B7  26EC  3194         	fcall	_SPIWrite
  9257                           
  9258                           ;DK_RFM98.c: 778: SPIWrite(0x2100 + 12);
  9259  16B9  300C               	movlw	12
  9260  16BA  00F5               	movwf	?_SPIWrite
  9261  16BB  3021               	movlw	33
  9262  16BC  00F6               	movwf	?_SPIWrite+1
  9263  16BD  26EC  3194         	fcall	_SPIWrite
  9264                           
  9265                           ;DK_RFM98.c: 780: SPIWrite(0x4100+0x01);
  9266  16BF  3001               	movlw	1
  9267  16C0  00F5               	movwf	?_SPIWrite
  9268  16C1  3041               	movlw	65
  9269  16C2  00F6               	movwf	?_SPIWrite+1
  9270  16C3  26EC  3194         	fcall	_SPIWrite
  9271                           
  9272                           ;DK_RFM98.c: 782: }
  9273  16C5  2EEB               	goto	l15949
  9274  16C6                     l15923:	
  9275                           
  9276                           ;DK_RFM98.c: 783: else
  9277                           ;DK_RFM98.c: 784: {
  9278                           ;DK_RFM98.c: 785: for(i=0;i<3;i++)
  9279  16C6  01E2               	clrf	RFM98_Config@i
  9280  16C7                     l15929:	
  9281                           
  9282                           ;DK_RFM98.c: 786: {
  9283                           ;DK_RFM98.c: 787: SPIWrite(RFM98FreqTbl[gb_FreqBuf_Addr][i]);
  9284  16C7  3006               	movlw	6
  9285  16C8  00F2               	movwf	?___bmul
  9286  16C9  084F               	movf	_gb_FreqBuf_Addr,w
  9287  16CA  2700  3194         	fcall	___bmul
  9288  16CC  275E  3194         	fcall	PL23	;call to abstracted procedure
  9289  16CE  26EC  3194         	fcall	_SPIWrite
  9290  16D0  3003               	movlw	3
  9291  16D1  0AE2               	incf	RFM98_Config@i,f
  9292  16D2  0262               	subwf	RFM98_Config@i,w
  9293  16D3  1C03               	skipc
  9294  16D4  2EC7               	goto	l15929
  9295                           
  9296                           ;DK_RFM98.c: 788: }
  9297                           ;DK_RFM98.c: 789: SPIWrite(RFM98PowerTbl[gb_PowerBuf_Addr]);
  9298  16D5  3556               	lslf	_gb_PowerBuf_Addr,w
  9299  16D6  3E73               	addlw	low (_RFM98PowerTbl| (0+32768))
  9300  16D7  0084               	movwf	4
  9301  16D8  3098               	movlw	high (_RFM98PowerTbl| (0+32768))
  9302  16D9  2756  3194         	fcall	PL12	;call to abstracted procedure
  9303  16DB  26EC  3194         	fcall	_SPIWrite
  9304                           
  9305                           ;DK_RFM98.c: 791: for(i=0;i<16;i++)
  9306  16DD  01E2               	clrf	RFM98_Config@i
  9307  16DE                     l15943:	
  9308                           
  9309                           ;DK_RFM98.c: 792: SPIWrite(RFM98ConfigTbl[i]);
  9310  16DE  3562               	lslf	RFM98_Config@i,w
  9311  16DF  3E27               	addlw	low (_RFM98ConfigTbl| (0+32768))
  9312  16E0  0084               	movwf	4
  9313  16E1  3098               	movlw	high (_RFM98ConfigTbl| (0+32768))
  9314  16E2  2756  3194         	fcall	PL12	;call to abstracted procedure
  9315  16E4  26EC  3194         	fcall	_SPIWrite
  9316  16E6  3010               	movlw	16
  9317  16E7  0AE2               	incf	RFM98_Config@i,f
  9318  16E8  0262               	subwf	RFM98_Config@i,w
  9319  16E9  1C03               	skipc
  9320  16EA  2EDE               	goto	l15943
  9321  16EB                     l15949:	
  9322                           
  9323                           ;DK_RFM98.c: 793: }
  9324                           ;DK_RFM98.c: 794: RFM98_Standby();
  9325  16EB  2F1A               	ljmp	l15475
  9326  16EC                     __end_of_RFM98_Config:	
  9327  16EC                     __ptext2206:	
  9328 ;; =============== function _SPICmd8bit ends ============
  9329                           
  9330                           
  9331 ;; *************** function _SPIWrite *****************
  9332 ;; Defined at:
  9333 ;;		line 92 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\DK_SPI.c"
  9334 ;; Parameters:    Size  Location     Type
  9335 ;;  WrPara          2    5[COMMON] unsigned int 
  9336 ;; Auto vars:     Size  Location     Type
  9337 ;;  bitcnt          1    7[COMMON] unsigned char 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;		None               void
  9340 ;; Registers used:
  9341 ;;		wreg, status,2, status,0
  9342 ;; Tracked objects:
  9343 ;;		On entry : 1F/0
  9344 ;;		On exit  : 1F/0
  9345 ;;		Unchanged: FFFE0/0
  9346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;Total ram usage:        3 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    2
  9354 ;; This function calls:
  9355 ;;		Nothing
  9356 ;; This function is called by:
  9357 ;;		_RFM98_Standby
  9358 ;;		_RFM98_Sleep
  9359 ;;		_RFM98_EntryLoRa
  9360 ;;		_RFM98_LoRaClearIrq
  9361 ;;		_RFM98_LoRaEntryRx
  9362 ;;		_RFM98_LoRaRxPacket
  9363 ;;		_RFM98_LoRaEntryTx
  9364 ;;		_RFM98_LoRaTxPacket
  9365 ;;		_RFM98_FskClearFIFO
  9366 ;;		_RFM98_FskEntryRx
  9367 ;;		_RFM98_FskEntryTx
  9368 ;;		_RFM98_FskTxPacket
  9369 ;;		_RFM98_Config
  9370 ;;		_RFM98_TestConfig
  9371 ;;		_RFM98_EntryTestTx
  9372 ;;		_RFM98_EntryTestRx
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375  16EC                     _SPIWrite:	
  9376  16EC                     l14923:	
  9377                           ; Regs used in _SPIWrite: [wreg+status,2+status,0]
  9378                           
  9379  16EC  3010               	movlw	16
  9380                           
  9381                           ;DK_SPI.c: 93: u8 bitcnt;
  9382                           ;DK_SPI.c: 95: RC3=0;
  9383  16ED  118E               	bcf	14,3
  9384                           
  9385                           ;DK_SPI.c: 96: RA0=0;
  9386  16EE  100C               	bcf	12,0
  9387                           
  9388                           ;DK_SPI.c: 98: WrPara |= 0x8000;
  9389  16EF  17F6               	bsf	SPIWrite@WrPara+1,7
  9390                           
  9391                           ;DK_SPI.c: 100: for(bitcnt=16; bitcnt!=0; bitcnt--)
  9392  16F0  00F7               	movwf	SPIWrite@bitcnt
  9393  16F1                     l6661:	
  9394                           
  9395                           ;DK_SPI.c: 101: {
  9396                           ;DK_SPI.c: 102: RC3=0;
  9397  16F1  118E               	bcf	14,3
  9398                           
  9399                           ;DK_SPI.c: 103: if(WrPara&0x8000)
  9400  16F2  1FF6               	btfss	SPIWrite@WrPara+1,7
  9401  16F3  2EF6               	goto	l6663
  9402                           
  9403                           ;DK_SPI.c: 104: RC4=1;
  9404  16F4  160E               	bsf	14,4
  9405  16F5  2EF7               	goto	l6664
  9406  16F6                     l6663:	
  9407                           
  9408                           ;DK_SPI.c: 105: else
  9409                           ;DK_SPI.c: 106: RC4=0;
  9410  16F6  120E               	bcf	14,4
  9411  16F7                     l6664:	
  9412                           
  9413                           ;DK_SPI.c: 107: RC3=1;
  9414  16F7  158E               	bsf	14,3
  9415                           
  9416                           ;DK_SPI.c: 108: WrPara <<= 1;
  9417  16F8  35F5               	lslf	SPIWrite@WrPara,f
  9418  16F9  0DF6               	rlf	SPIWrite@WrPara+1,f
  9419  16FA  0BF7               	decfsz	SPIWrite@bitcnt,f
  9420  16FB  2EF1               	goto	l6661
  9421                           
  9422                           ;DK_SPI.c: 109: }
  9423                           ;DK_SPI.c: 110: RC3=0;
  9424  16FC  118E               	bcf	14,3
  9425                           
  9426                           ;DK_SPI.c: 111: RC4=1;
  9427  16FD  160E               	bsf	14,4
  9428                           
  9429                           ;DK_SPI.c: 112: RA0=1;
  9430  16FE  140C               	bsf	12,0
  9431  16FF  0008               	return
  9432  1700                     __end_of_SPIWrite:	
  9433  1700                     __ptext2198:	
  9434 ;; =============== function ___lwdiv ends ============
  9435                           
  9436                           
  9437 ;; *************** function ___bmul *****************
  9438 ;; Defined at:
  9439 ;;		line 3 in file "bmul.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  multiplier      1    wreg     unsigned char 
  9442 ;;  multiplicand    1    2[COMMON] unsigned char 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;  multiplier      1    4[COMMON] unsigned char 
  9445 ;;  product         1    3[COMMON] unsigned char 
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  1    wreg      unsigned char 
  9448 ;; Registers used:
  9449 ;;		wreg, status,2, status,0
  9450 ;; Tracked objects:
  9451 ;;		On entry : 1F/0
  9452 ;;		On exit  : 1F/0
  9453 ;;		Unchanged: FFFE0/0
  9454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9455 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;Total ram usage:        3 bytes
  9460 ;; Hardware stack levels used:    1
  9461 ;; Hardware stack levels required when called:    2
  9462 ;; This function calls:
  9463 ;;		Nothing
  9464 ;; This function is called by:
  9465 ;;		_RFM98_Config
  9466 ;;		_RFM98_TestConfig
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469  1700                     ___bmul:	
  9470                           
  9471                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9472                           ;___bmul@multiplier stored from wreg
  9473  1700  00F4               	movwf	___bmul@multiplier
  9474  1701  01F3               	clrf	___bmul@product
  9475  1702                     l15065:	
  9476  1702  0872               	movf	___bmul@multiplicand,w
  9477  1703  1874               	btfsc	___bmul@multiplier,0
  9478  1704  07F3               	addwf	___bmul@product,f
  9479  1705  35F2               	lslf	___bmul@multiplicand,f
  9480  1706  36F4               	lsrf	___bmul@multiplier,f
  9481  1707  08F4               	movf	___bmul@multiplier,f
  9482  1708  1D03               	skipz
  9483  1709  2F02               	goto	l15065
  9484  170A  0873               	movf	___bmul@product,w
  9485  170B  0008               	return
  9486  170C                     __end_of___bmul:	
  9487  170C                     __ptext2186:	
  9488 ;; =============== function _RFM98_EntryLoRa ends ============
  9489                           
  9490                           
  9491 ;; *************** function _RFM98_Sleep *****************
  9492 ;; Defined at:
  9493 ;;		line 210 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  9494 ;; Parameters:    Size  Location     Type
  9495 ;;		None
  9496 ;; Auto vars:     Size  Location     Type
  9497 ;;		None
  9498 ;; Return value:  Size  Location     Type
  9499 ;;		None               void
  9500 ;; Registers used:
  9501 ;;		wreg, status,2, status,0, pclath, cstack
  9502 ;; Tracked objects:
  9503 ;;		On entry : 1F/0
  9504 ;;		On exit  : 1F/0
  9505 ;;		Unchanged: FFFE0/0
  9506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9511 ;;Total ram usage:        0 bytes
  9512 ;; Hardware stack levels used:    1
  9513 ;; Hardware stack levels required when called:    3
  9514 ;; This function calls:
  9515 ;;		_SPIWrite
  9516 ;; This function is called by:
  9517 ;;		_RFM98_Config
  9518 ;;		_RFM98_TestConfig
  9519 ;;		_RFM98_Running
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522  170C                     _RFM98_Sleep:	
  9523                           
  9524                           ;DK_RFM98.c: 211: SPIWrite(0x0100+0x00+0x08);
  9525                           
  9526                           ; Regs used in _RFM98_Sleep: [wreg+status,2+status,0+pclath+cstack]
  9527  170C  3008               	movlw	8
  9528  170D  00F5               	movwf	?_SPIWrite
  9529  170E  3001               	movlw	1
  9530  170F  00F6               	movwf	?_SPIWrite+1
  9531  1710  2EEC               	ljmp	l14923
  9532  1711                     __end_of_RFM98_Sleep:	
  9533  1711                     __ptext2183:	
  9534 ;; =============== function _SPIBurstRead ends ============
  9535                           
  9536                           
  9537 ;; *************** function _SPIRead *****************
  9538 ;; Defined at:
  9539 ;;		line 77 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sourc
      +e\DK_SPI.c"
  9540 ;; Parameters:    Size  Location     Type
  9541 ;;  adr             1    wreg     unsigned char 
  9542 ;; Auto vars:     Size  Location     Type
  9543 ;;  adr             1    4[COMMON] unsigned char 
  9544 ;;  tmp             1    5[COMMON] unsigned char 
  9545 ;; Return value:  Size  Location     Type
  9546 ;;                  1    wreg      unsigned char 
  9547 ;; Registers used:
  9548 ;;		wreg, status,2, status,0, pclath, cstack
  9549 ;; Tracked objects:
  9550 ;;		On entry : 1F/0
  9551 ;;		On exit  : 1F/0
  9552 ;;		Unchanged: FFFE0/0
  9553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9555 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9557 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9558 ;;Total ram usage:        2 bytes
  9559 ;; Hardware stack levels used:    1
  9560 ;; Hardware stack levels required when called:    3
  9561 ;; This function calls:
  9562 ;;		_SPICmd8bit
  9563 ;;		_SPIRead8bit
  9564 ;; This function is called by:
  9565 ;;		_RFM98_LoRaEntryRx
  9566 ;;		_RFM98_LoRaRxWaitStable
  9567 ;;		_RFM98_LoRaReadRSSI
  9568 ;;		_RFM98_LoRaRxPacket
  9569 ;;		_RFM98_LoRaEntryTx
  9570 ;;		_RFM98_LoRaTxWaitStable
  9571 ;;		_RFM98_LoRaTxPacket
  9572 ;;		_RFM98_ReadRSSI
  9573 ;;		_RFM98_FSKRxWaitStable
  9574 ;;		_RFM98_FSKTxWaitStable
  9575 ;;		_RFM98_Config
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578  1711                     _SPIRead:	
  9579                           
  9580                           ; Regs used in _SPIRead: [wreg+status,2+status,0+pclath+cstack]
  9581                           ;SPIRead@adr stored from wreg
  9582  1711  00F4               	movwf	SPIRead@adr
  9583                           
  9584                           ;DK_SPI.c: 78: u8 tmp;
  9585                           ;DK_SPI.c: 79: SPICmd8bit(adr);
  9586  1712  3189  21C4  3194   	fcall	_SPICmd8bit
  9587                           
  9588                           ;DK_SPI.c: 80: tmp = SPIRead8bit();
  9589  1715  3189  21D6         	fcall	_SPIRead8bit
  9590  1717  00F5               	movwf	SPIRead@tmp
  9591                           
  9592                           ;DK_SPI.c: 81: RA0=1;
  9593  1718  140C               	bsf	12,0
  9594                           
  9595                           ;DK_SPI.c: 82: return(tmp);
  9596  1719  0008               	return
  9597  171A                     __end_of_SPIRead:	
  9598  171A                     __ptext2187:	
  9599 ;; =============== function _RFM98_Sleep ends ============
  9600                           
  9601                           
  9602 ;; *************** function _RFM98_Standby *****************
  9603 ;; Defined at:
  9604 ;;		line 199 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;		None
  9607 ;; Auto vars:     Size  Location     Type
  9608 ;;		None
  9609 ;; Return value:  Size  Location     Type
  9610 ;;		None               void
  9611 ;; Registers used:
  9612 ;;		wreg, status,2, status,0, pclath, cstack
  9613 ;; Tracked objects:
  9614 ;;		On entry : 1F/0
  9615 ;;		On exit  : 1F/0
  9616 ;;		Unchanged: FFFE0/0
  9617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9622 ;;Total ram usage:        0 bytes
  9623 ;; Hardware stack levels used:    1
  9624 ;; Hardware stack levels required when called:    3
  9625 ;; This function calls:
  9626 ;;		_SPIWrite
  9627 ;; This function is called by:
  9628 ;;		_RFM98_LoRaTxPacket
  9629 ;;		_RFM98_FskTxPacket
  9630 ;;		_RFM98_Config
  9631 ;;		_RFM98_TestConfig
  9632 ;;		_RFM98_Running
  9633 ;; This function uses a non-reentrant model
  9634 ;;
  9635  171A                     _RFM98_Standby:	
  9636  171A                     l15475:	
  9637                           ; Regs used in _RFM98_Standby: [wreg+status,2+status,0+pclath+cstack]
  9638                           
  9639                           
  9640                           ;DK_RFM98.c: 200: SPIWrite(0x0100+0x01+0x08);
  9641  171A  3009               	movlw	9
  9642  171B  00F5               	movwf	?_SPIWrite
  9643  171C  3001               	movlw	1
  9644  171D  00F6               	movwf	?_SPIWrite+1
  9645  171E  2EEC               	ljmp	l14923
  9646  171F                     __end_of_RFM98_Standby:	
  9647  171F                     __ptext2184:	
  9648 ;; =============== function _SPIRead ends ============
  9649                           
  9650                           
  9651 ;; *************** function _RFM98_LoRaClearIrq *****************
  9652 ;; Defined at:
  9653 ;;		line 236 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;		None
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;		None
  9658 ;; Return value:  Size  Location     Type
  9659 ;;		None               void
  9660 ;; Registers used:
  9661 ;;		wreg, status,2, status,0, pclath, cstack
  9662 ;; Tracked objects:
  9663 ;;		On entry : 1F/0
  9664 ;;		On exit  : 1F/0
  9665 ;;		Unchanged: FFFE0/0
  9666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9671 ;;Total ram usage:        0 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    3
  9674 ;; This function calls:
  9675 ;;		_SPIWrite
  9676 ;; This function is called by:
  9677 ;;		_RFM98_LoRaEntryRx
  9678 ;;		_RFM98_LoRaRxPacket
  9679 ;;		_RFM98_LoRaEntryTx
  9680 ;;		_RFM98_LoRaTxPacket
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683  171F                     _RFM98_LoRaClearIrq:	
  9684                           
  9685                           ;DK_RFM98.c: 237: SPIWrite(0x1200+0xFF);
  9686                           
  9687                           ; Regs used in _RFM98_LoRaClearIrq: [wreg+status,2+status,0+pclath+cstack]
  9688  171F  30FF               	movlw	255
  9689  1720  00F5               	movwf	?_SPIWrite
  9690  1721  3012               	movlw	18
  9691  1722  00F6               	movwf	?_SPIWrite+1
  9692  1723  2EEC               	ljmp	l14923
  9693  1724                     __end_of_RFM98_LoRaClearIrq:	
  9694  1724                     __ptext2170:	
  9695 ;; =============== function _RFM98_FSKRxWaitStable ends ============
  9696                           
  9697                           
  9698 ;; *************** function _RFM98_ReadRSSI *****************
  9699 ;; Defined at:
  9700 ;;		line 516 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  9701 ;; Parameters:    Size  Location     Type
  9702 ;;		None
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  temp            1    6[COMMON] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      unsigned char 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0, pclath, cstack
  9709 ;; Tracked objects:
  9710 ;;		On entry : 1F/0
  9711 ;;		On exit  : 1F/0
  9712 ;;		Unchanged: FFFE0/0
  9713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9718 ;;Total ram usage:        1 bytes
  9719 ;; Hardware stack levels used:    1
  9720 ;; Hardware stack levels required when called:    4
  9721 ;; This function calls:
  9722 ;;		_SPIRead
  9723 ;; This function is called by:
  9724 ;;		_RFM98_Running
  9725 ;; This function uses a non-reentrant model
  9726 ;;
  9727  1724                     _RFM98_ReadRSSI:	
  9728                           
  9729                           ;DK_RFM98.c: 518: temp=SPIRead(0x11);
  9730                           
  9731                           ; Regs used in _RFM98_ReadRSSI: [wreg+status,2+status,0+pclath+cstack]
  9732  1724  3011               	movlw	17
  9733  1725  2711               	fcall	_SPIRead
  9734  1726  00F6               	movwf	RFM98_ReadRSSI@temp
  9735                           
  9736                           ;DK_RFM98.c: 519: temp>>=1;
  9737  1727  36F6               	lsrf	RFM98_ReadRSSI@temp,f
  9738                           
  9739                           ;DK_RFM98.c: 520: temp=127-temp;
  9740  1728  0876               	movf	RFM98_ReadRSSI@temp,w
  9741  1729  3C7F               	sublw	127
  9742  172A  00F6               	movwf	RFM98_ReadRSSI@temp
  9743                           
  9744                           ;DK_RFM98.c: 521: return temp;
  9745  172B  0008               	return
  9746  172C                     __end_of_RFM98_ReadRSSI:	
  9747  172C                     __ptext2185:	
  9748 ;; =============== function _RFM98_LoRaClearIrq ends ============
  9749                           
  9750                           
  9751 ;; *************** function _RFM98_EntryLoRa *****************
  9752 ;; Defined at:
  9753 ;;		line 225 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;		None
  9756 ;; Auto vars:     Size  Location     Type
  9757 ;;		None
  9758 ;; Return value:  Size  Location     Type
  9759 ;;		None               void
  9760 ;; Registers used:
  9761 ;;		wreg, status,2, status,0, pclath, cstack
  9762 ;; Tracked objects:
  9763 ;;		On entry : 1F/0
  9764 ;;		On exit  : 1F/0
  9765 ;;		Unchanged: FFFE0/0
  9766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9771 ;;Total ram usage:        0 bytes
  9772 ;; Hardware stack levels used:    1
  9773 ;; Hardware stack levels required when called:    3
  9774 ;; This function calls:
  9775 ;;		_SPIWrite
  9776 ;; This function is called by:
  9777 ;;		_RFM98_Config
  9778 ;; This function uses a non-reentrant model
  9779 ;;
  9780  172C                     _RFM98_EntryLoRa:	
  9781                           
  9782                           ;DK_RFM98.c: 226: SPIWrite(0x0100+0x80+0x08);
  9783                           
  9784                           ; Regs used in _RFM98_EntryLoRa: [wreg+status,2+status,0+pclath+cstack]
  9785  172C  3088               	movlw	136
  9786  172D  00F5               	movwf	?_SPIWrite
  9787  172E  3001               	movlw	1
  9788  172F  00F6               	movwf	?_SPIWrite+1
  9789  1730  2EEC               	ljmp	l14923
  9790  1731                     __end_of_RFM98_EntryLoRa:	
  9791  1731                     __ptext2172:	
  9792 ;; =============== function _RFM98_LoRaTxWaitStable ends ============
  9793                           
  9794                           
  9795 ;; *************** function _RFM98_LoRaReadRSSI *****************
  9796 ;; Defined at:
  9797 ;;		line 302 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;		None
  9800 ;; Auto vars:     Size  Location     Type
  9801 ;;  temp            2    6[COMMON] unsigned int 
  9802 ;; Return value:  Size  Location     Type
  9803 ;;                  1    wreg      unsigned char 
  9804 ;; Registers used:
  9805 ;;		wreg, status,2, status,0, pclath, cstack
  9806 ;; Tracked objects:
  9807 ;;		On entry : 1F/0
  9808 ;;		On exit  : 1F/0
  9809 ;;		Unchanged: FFFE0/0
  9810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;Total ram usage:        2 bytes
  9816 ;; Hardware stack levels used:    1
  9817 ;; Hardware stack levels required when called:    4
  9818 ;; This function calls:
  9819 ;;		_SPIRead
  9820 ;; This function is called by:
  9821 ;;		_RFM98_Running
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824  1731                     _RFM98_LoRaReadRSSI:	
  9825                           
  9826                           ;DK_RFM98.c: 304: temp=SPIRead((u8)(0x1B00>>8));
  9827                           
  9828                           ; Regs used in _RFM98_LoRaReadRSSI: [wreg+status,2+status,0+pclath+cstack]
  9829  1731  301B               	movlw	27
  9830  1732  2711               	fcall	_SPIRead
  9831  1733  00F6               	movwf	RFM98_LoRaReadRSSI@temp
  9832  1734  30F6               	movlw	246
  9833  1735  01F7               	clrf	RFM98_LoRaReadRSSI@temp+1
  9834                           
  9835                           ;DK_RFM98.c: 305: temp=temp+127-137;
  9836  1736  07F6               	addwf	RFM98_LoRaReadRSSI@temp,f
  9837  1737  30FF               	movlw	255
  9838  1738  3DF7               	addwfc	RFM98_LoRaReadRSSI@temp+1,f
  9839                           
  9840                           ;DK_RFM98.c: 306: return (u8)temp;
  9841  1739  0876               	movf	RFM98_LoRaReadRSSI@temp,w
  9842  173A  0008               	return
  9843  173B                     __end_of_RFM98_LoRaReadRSSI:	
  9844  173B                     __ptext2154:	
  9845 ;; =============== function _RFM98_EntryTestRx ends ============
  9846                           
  9847                           
  9848 ;; *************** function _RFM98_TestTx *****************
  9849 ;; Defined at:
  9850 ;;		line 869 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
  9851 ;; Parameters:    Size  Location     Type
  9852 ;;		None
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;		None
  9855 ;; Return value:  Size  Location     Type
  9856 ;;		None               void
  9857 ;; Registers used:
  9858 ;;		wreg, status,2, status,0, pclath, cstack
  9859 ;; Tracked objects:
  9860 ;;		On entry : 1F/0
  9861 ;;		On exit  : 1F/0
  9862 ;;		Unchanged: FFFE0/0
  9863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9868 ;;Total ram usage:        0 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    5
  9871 ;; This function calls:
  9872 ;;		_RFM98_FSKTxWaitStable
  9873 ;; This function is called by:
  9874 ;;		_RFM98_Running
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877  173B                     _RFM98_TestTx:	
  9878                           
  9879                           ;DK_RFM98.c: 870: RFM98_FSKTxWaitStable();
  9880                           
  9881                           ; Regs used in _RFM98_TestTx: [wreg+status,2+status,0+pclath+cstack]
  9882  173B  3189  21F7  3194   	fcall	_RFM98_FSKTxWaitStable
  9883                           
  9884                           ;DK_RFM98.c: 871: if(gb_WaitStableFlag==1)
  9885  173E  0B5D               	decfsz	_gb_WaitStableFlag,w
  9886  173F  0008               	return
  9887                           
  9888                           ;DK_RFM98.c: 872: {
  9889                           ;DK_RFM98.c: 873: gb_WaitStableFlag=2;
  9890  1740  3002               	movlw	2
  9891  1741  00DD               	movwf	_gb_WaitStableFlag
  9892                           
  9893                           ;DK_RFM98.c: 874: gb_StatusTx=1;
  9894  1742  01D9               	clrf	_gb_StatusTx
  9895  1743  0AD9               	incf	_gb_StatusTx,f
  9896                           
  9897                           ;DK_RFM98.c: 876: RA1=1;
  9898  1744  148C               	bsf	12,1
  9899  1745  0008               	return
  9900  1746                     __end_of_RFM98_TestTx:	
  9901  1746                     PL9:	
  9902  1746  1803               	skipnc
  9903  1747  3E01               	addlw	1
  9904  1748  0085               	movwf	5
  9905  1749  0800               	movf	0,w	;code access
  9906  174A  00F5               	movwf	?_SPIWrite
  9907  174B  30F0               	movlw	240
  9908  174C  01F6               	clrf	?_SPIWrite+1
  9909  174D  0EF5               	swapf	?_SPIWrite,f
  9910  174E  0EF6               	swapf	?_SPIWrite+1,f
  9911  174F  05F6               	andwf	?_SPIWrite+1,f
  9912  1750  0875               	movf	?_SPIWrite,w
  9913  1751  390F               	andlw	15
  9914  1752  04F6               	iorwf	?_SPIWrite+1,f
  9915  1753  30F0               	movlw	240
  9916  1754  05F5               	andwf	?_SPIWrite,f
  9917  1755  0008               	return
  9918  1756                     PL12:	
  9919  1756  1803               	skipnc
  9920  1757  3E01               	addlw	1
  9921  1758  0085               	movwf	5
  9922  1759  3F00               	moviw [0]fsr0
  9923  175A  00F5               	movwf	?_SPIWrite
  9924  175B  3F01               	moviw [1]fsr0
  9925  175C  00F6               	movwf	?_SPIWrite+1
  9926  175D  0008               	return
  9927  175E                     PL23:	
  9928  175E  3E8A               	addlw	low (_RFM98FreqTbl| (0+32768))
  9929  175F  00F8               	movwf	??_RFM98_Config
  9930  1760  3098               	movlw	high (_RFM98FreqTbl| (0+32768))
  9931  1761  1803               	skipnc
  9932  1762  0A89               	incf	9,f
  9933  1763  00F9               	movwf	??_RFM98_Config+1
  9934  1764  3562               	lslf	RFM98_Config@i,w
  9935  1765  0778               	addwf	??_RFM98_Config,w
  9936  1766  0084               	movwf	4
  9937  1767  0879               	movf	??_RFM98_Config+1,w
  9938  1768  1803               	skipnc
  9939  1769  0A79               	incf	??_RFM98_Config+1,w
  9940  176A  0085               	movwf	5
  9941  176B  3F00               	moviw [0]fsr0
  9942  176C  00F5               	movwf	?_SPIWrite
  9943  176D  3F01               	moviw [1]fsr0
  9944  176E  00F6               	movwf	?_SPIWrite+1
  9945  176F  0008               	return
  9946  1770                     PL24:	
  9947  1770  0857               	movf	_gb_RateBuf_Addr,w
  9948  1771  3E83               	addlw	low (_RFM98SpreadFactorTbl| (0+32768))
  9949  1772  0084               	movwf	4
  9950  1773  3498               	retlw	high (_RFM98SpreadFactorTbl| (0+32768))
  9951  1774                     PL33:	
  9952  1774  1803               	skipnc
  9953  1775  0A89               	incf	9,f
  9954  1776  00F9               	movwf	??_RFM98_TestConfig+1
  9955  1777  3560               	lslf	RFM98_TestConfig@i,w
  9956  1778  0778               	addwf	??_RFM98_TestConfig,w
  9957  1779  0084               	movwf	4
  9958  177A  0879               	movf	??_RFM98_TestConfig+1,w
  9959  177B  1803               	skipnc
  9960  177C  0A79               	incf	??_RFM98_TestConfig+1,w
  9961  177D  0085               	movwf	5
  9962  177E  3F00               	moviw [0]fsr0
  9963  177F  00F5               	movwf	?_SPIWrite
  9964  1780  3F01               	moviw [1]fsr0
  9965  1781  00F6               	movwf	?_SPIWrite+1
  9966  1782  0008               	return
  9967  1783                     PL38:	
  9968  1783  00F4               	movwf	?_BurstWrite
  9969  1784  3098               	movlw	high (_RFM98Data| (0+32768))
  9970  1785  00F5               	movwf	?_BurstWrite+1
  9971  1786  3015               	movlw	21
  9972  1787  00F6               	movwf	?_BurstWrite+2
  9973  1788  3400               	retlw	0
  9974  1789                     PL40:	
  9975  1789  3F00               	moviw [0]fsr0
  9976  178A  00F5               	movwf	?_SPIWrite
  9977  178B  3F01               	moviw [1]fsr0
  9978  178C  00F6               	movwf	?_SPIWrite+1
  9979  178D  0008               	return
  9980  178E                     PL46:	
  9981  178E  0086               	movwf	6
  9982  178F  304A               	movlw	low (_MusicTab_RxSuccess| (0+32768))
  9983  1790  0187               	clrf	7
  9984  1791  0181               	clrf	1
  9985  1792  0A81               	incf	1,f
  9986  1793  00F2               	movwf	?_BeepOn
  9987  1794  3099               	movlw	high (_MusicTab_RxSuccess| (0+32768))
  9988  1795  00F3               	movwf	?_BeepOn+1
  9989  1796  0008               	return
  9990  1797                     PL56:	
  9991  1797  0021               	movlb	1	; select bank1
  9992  1798  100F               	bcf	15,0
  9993  1799  0022               	movlb	2	; select bank2
  9994  179A  30C8               	movlw	200
  9995  179B  100F               	bcf	15,0
  9996  179C  0020               	movlb	0	; select bank0
  9997  179D  0008               	return
  9998  179E                     PL60:	
  9999  179E  00F5               	movwf	?_SPIWrite
 10000  179F  300D               	movlw	13
 10001  17A0  01F6               	clrf	?_SPIWrite+1
 10002  17A1  07F6               	addwf	?_SPIWrite+1,f
 10003  17A2  0008               	return
 10004  17A3                     PL66:	
 10005  17A3  3015               	movlw	21
 10006  17A4  00F5               	movwf	?_SPIWrite
 10007  17A5  3022               	movlw	34
 10008  17A6  00F6               	movwf	?_SPIWrite+1
 10009  17A7  0008               	return
 10010  17A8                     PL67:	
 10011  17A8  3007               	movlw	7
 10012  17A9  07F5               	addwf	?_SPIWrite,f
 10013  17AA  301E               	movlw	30
 10014  17AB  3DF6               	addwfc	?_SPIWrite+1,f
 10015  17AC  0008               	return
 10016  17AD                     __ptext2155:	
 10017 ;; =============== function _RFM98_TestTx ends ============
 10018                           
 10019                           
 10020 ;; *************** function _RFM98_EntryTestTx *****************
 10021 ;; Defined at:
 10022 ;;		line 853 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;		None
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;  i               1    1[BANK0 ] unsigned char 
 10027 ;; Return value:  Size  Location     Type
 10028 ;;		None               void
 10029 ;; Registers used:
 10030 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10031 ;; Tracked objects:
 10032 ;;		On entry : 1F/0
 10033 ;;		On exit  : 1F/0
 10034 ;;		Unchanged: FFE00/0
 10035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10039 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10040 ;;Total ram usage:        1 bytes
 10041 ;; Hardware stack levels used:    1
 10042 ;; Hardware stack levels required when called:    5
 10043 ;; This function calls:
 10044 ;;		_RFM98_TestConfig
 10045 ;;		_SPIWrite
 10046 ;; This function is called by:
 10047 ;;		_RFM98_Running
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050  17AD                     _RFM98_EntryTestTx:	
 10051                           
 10052                           ;DK_RFM98.c: 854: u8 i;
 10053                           ;DK_RFM98.c: 856: TRISA1=0;
 10054                           
 10055                           ; Regs used in _RFM98_EntryTestTx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10056  17AD  0021               	movlb	1	; select bank1
 10057  17AE  108C               	bcf	12,1
 10058                           
 10059                           ;DK_RFM98.c: 857: RA1=0;
 10060  17AF  0020               	movlb	0	; select bank0
 10061  17B0  108C               	bcf	12,1
 10062                           
 10063                           ;DK_RFM98.c: 858: RFM98_TestConfig();
 10064  17B1  256D  3194         	fcall	_RFM98_TestConfig
 10065                           
 10066                           ;DK_RFM98.c: 859: for(i=0;i<3;i++)
 10067  17B3  01E1               	clrf	RFM98_EntryTestTx@i
 10068  17B4                     l16841:	
 10069                           
 10070                           ;DK_RFM98.c: 860: SPIWrite(RFM98TxTable[i]);
 10071  17B4  3561               	lslf	RFM98_EntryTestTx@i,w
 10072  17B5  3E90               	addlw	low (_RFM98TxTable| (0+32768))
 10073  17B6  0084               	movwf	4
 10074  17B7  3098               	movlw	high (_RFM98TxTable| (0+32768))
 10075  17B8  2756  3194         	fcall	PL12	;call to abstracted procedure
 10076  17BA  26EC  3194         	fcall	_SPIWrite
 10077  17BC  3003               	movlw	3
 10078  17BD  0AE1               	incf	RFM98_EntryTestTx@i,f
 10079  17BE  0261               	subwf	RFM98_EntryTestTx@i,w
 10080  17BF  1C03               	skipc
 10081  17C0  2FB4               	goto	l16841
 10082                           
 10083                           ;DK_RFM98.c: 861: SPIWrite(0x0100+0x20+0x08+0x03);
 10084  17C1  302B               	movlw	43
 10085  17C2  00F5               	movwf	?_SPIWrite
 10086  17C3  3001               	movlw	1
 10087  17C4  00F6               	movwf	?_SPIWrite+1
 10088  17C5  26EC  3194         	fcall	_SPIWrite
 10089                           
 10090                           ;DK_RFM98.c: 863: gb_SysTimer_1S=3;
 10091                           
 10092                           ;DK_RFM98.c: 864: gb_StatusRx=0;
 10093                           
 10094                           ;DK_RFM98.c: 865: gb_WaitStableFlag=0x0f;
 10095  17C7  2FC8               	ljmp	PL44	;call to abstracted procedure
 10096  17C8                     __end_of_RFM98_EntryTestTx:	
 10097  17C8                     PL44:	
 10098  17C8  3003               	movlw	3
 10099  17C9  00DB               	movwf	_gb_SysTimer_1S
 10100  17CA  300F               	movlw	15
 10101  17CB  01D8               	clrf	_gb_StatusRx
 10102  17CC  00DD               	movwf	_gb_WaitStableFlag
 10103  17CD  0008               	return
 10104  17CE                     __ptext2153:	
 10105 ;; =============== function _RFM98_TestRx ends ============
 10106                           
 10107                           
 10108 ;; *************** function _RFM98_EntryTestRx *****************
 10109 ;; Defined at:
 10110 ;;		line 887 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;		None
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;  i               1    1[BANK0 ] unsigned char 
 10115 ;; Return value:  Size  Location     Type
 10116 ;;		None               void
 10117 ;; Registers used:
 10118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10119 ;; Tracked objects:
 10120 ;;		On entry : 1F/0
 10121 ;;		On exit  : 1F/0
 10122 ;;		Unchanged: FFE00/0
 10123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10127 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10128 ;;Total ram usage:        1 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; Hardware stack levels required when called:    5
 10131 ;; This function calls:
 10132 ;;		_RFM98_TestConfig
 10133 ;;		_SPIWrite
 10134 ;; This function is called by:
 10135 ;;		_RFM98_Running
 10136 ;; This function uses a non-reentrant model
 10137 ;;
 10138  17CE                     _RFM98_EntryTestRx:	
 10139                           
 10140                           ;DK_RFM98.c: 888: u8 i;
 10141                           ;DK_RFM98.c: 889: TRISA1=1;
 10142                           
 10143                           ; Regs used in _RFM98_EntryTestRx: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10144  17CE  0021               	movlb	1	; select bank1
 10145  17CF  148C               	bsf	12,1
 10146                           
 10147                           ;DK_RFM98.c: 890: RFM98_TestConfig();
 10148  17D0  256D  3194         	fcall	_RFM98_TestConfig
 10149                           
 10150                           ;DK_RFM98.c: 891: for(i=0;i<4;i++)
 10151  17D2  01E1               	clrf	RFM98_EntryTestRx@i
 10152  17D3                     l16875:	
 10153                           
 10154                           ;DK_RFM98.c: 892: SPIWrite(RFM98RxTable[i]);
 10155  17D3  3561               	lslf	RFM98_EntryTestRx@i,w
 10156  17D4  3E7B               	addlw	low (_RFM98RxTable| (0+32768))
 10157  17D5  0084               	movwf	4
 10158  17D6  3098               	movlw	high (_RFM98RxTable| (0+32768))
 10159  17D7  2756  3194         	fcall	PL12	;call to abstracted procedure
 10160  17D9  26EC  3194         	fcall	_SPIWrite
 10161  17DB  3004               	movlw	4
 10162  17DC  0AE1               	incf	RFM98_EntryTestRx@i,f
 10163  17DD  0261               	subwf	RFM98_EntryTestRx@i,w
 10164  17DE  1C03               	skipc
 10165  17DF  2FD3               	goto	l16875
 10166                           
 10167                           ;DK_RFM98.c: 893: SPIWrite(0x0105+0x08);
 10168  17E0  300D               	movlw	13
 10169  17E1  00F5               	movwf	?_SPIWrite
 10170  17E2  3001               	movlw	1
 10171  17E3  00F6               	movwf	?_SPIWrite+1
 10172  17E4  26EC  3194         	fcall	_SPIWrite
 10173                           
 10174                           ;DK_RFM98.c: 895: gb_SysTimer_1S=3;
 10175                           
 10176                           ;DK_RFM98.c: 896: gb_StatusTx=0;
 10177                           
 10178                           ;DK_RFM98.c: 897: gb_WaitStableFlag=0x0f;
 10179  17E6  2FE7               	ljmp	PL43	;call to abstracted procedure
 10180  17E7                     __end_of_RFM98_EntryTestRx:	
 10181  17E7                     PL43:	
 10182  17E7  3003               	movlw	3
 10183  17E8  00DB               	movwf	_gb_SysTimer_1S
 10184  17E9  300F               	movlw	15
 10185  17EA  01D9               	clrf	_gb_StatusTx
 10186  17EB  00DD               	movwf	_gb_WaitStableFlag
 10187  17EC  0008               	return
 10188  17ED                     __ptext2171:	
 10189 ;; =============== function _RFM98_ReadRSSI ends ============
 10190                           
 10191                           
 10192 ;; *************** function _RFM98_LoRaTxWaitStable *****************
 10193 ;; Defined at:
 10194 ;;		line 391 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_RFM98.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;		None
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;  temp            1    6[COMMON] unsigned char 
 10199 ;; Return value:  Size  Location     Type
 10200 ;;		None               void
 10201 ;; Registers used:
 10202 ;;		wreg, status,2, status,0, pclath, cstack
 10203 ;; Tracked objects:
 10204 ;;		On entry : 1F/0
 10205 ;;		On exit  : 1F/0
 10206 ;;		Unchanged: FFFE0/0
 10207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10212 ;;Total ram usage:        1 bytes
 10213 ;; Hardware stack levels used:    1
 10214 ;; Hardware stack levels required when called:    4
 10215 ;; This function calls:
 10216 ;;		_SPIRead
 10217 ;; This function is called by:
 10218 ;;		_RFM98_LoRaTxPacket
 10219 ;; This function uses a non-reentrant model
 10220 ;;
 10221  17ED                     _RFM98_LoRaTxWaitStable:	
 10222                           
 10223                           ;DK_RFM98.c: 392: u8 temp;
 10224                           ;DK_RFM98.c: 393: if(gb_WaitStableFlag==0x0f)
 10225                           
 10226                           ; Regs used in _RFM98_LoRaTxWaitStable: [wreg+status,2+status,0+pclath+cstack]
 10227  17ED  085D               	movf	_gb_WaitStableFlag,w
 10228  17EE  3A0F               	xorlw	15
 10229  17EF  1D03               	skipz
 10230  17F0  0008               	return
 10231                           
 10232                           ;DK_RFM98.c: 394: {
 10233                           ;DK_RFM98.c: 395: if(gb_SysTimer_1S!=0)
 10234  17F1  085B               	movf	_gb_SysTimer_1S,w
 10235  17F2  1903               	btfsc	3,2
 10236  17F3  2FFE               	goto	l5342
 10237                           
 10238                           ;DK_RFM98.c: 396: {
 10239                           ;DK_RFM98.c: 397: temp=SPIRead((u8)(0x2200>>8));
 10240  17F4  3022               	movlw	34
 10241  17F5  2711  3194         	fcall	_SPIRead
 10242  17F7  00F6               	movwf	RFM98_LoRaTxWaitStable@temp
 10243                           
 10244                           ;DK_RFM98.c: 398: if(temp==21)
 10245  17F8  3A15               	xorlw	21
 10246  17F9  1D03               	skipz
 10247  17FA  0008               	return
 10248                           
 10249                           ;DK_RFM98.c: 399: {
 10250                           ;DK_RFM98.c: 400: gb_WaitStableFlag=1;
 10251  17FB  01DD               	clrf	_gb_WaitStableFlag
 10252  17FC  0ADD               	incf	_gb_WaitStableFlag,f
 10253  17FD  0008               	return
 10254  17FE                     l5342:	
 10255                           
 10256                           ;DK_RFM98.c: 403: else
 10257                           ;DK_RFM98.c: 404: {
 10258                           ;DK_RFM98.c: 405: gb_ErrorFlag=1;
 10259                           
 10260                           ;DK_RFM98.c: 406: gb_WaitStableFlag=0;
 10261  17FE  318A  2A1B         	ljmp	PL58	;call to abstracted procedure
 10262  1800                     __end_of_RFM98_LoRaTxWaitStable:	
 10263                           
 10264                           	psect	text2165
 10265  11D1                     __ptext2165:	
 10266 ;; =============== function _WorkModeSelect ends ============
 10267                           
 10268                           
 10269 ;; *************** function _ModemSelect *****************
 10270 ;; Defined at:
 10271 ;;		line 686 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;  KeyValue        1    wreg     unsigned char 
 10274 ;; Auto vars:     Size  Location     Type
 10275 ;;  KeyValue        1    2[BANK0 ] unsigned char 
 10276 ;; Return value:  Size  Location     Type
 10277 ;;		None               void
 10278 ;; Registers used:
 10279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10280 ;; Tracked objects:
 10281 ;;		On entry : 1F/0
 10282 ;;		On exit  : 1C/0
 10283 ;;		Unchanged: FFE00/0
 10284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10287 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10288 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10289 ;;Total ram usage:        3 bytes
 10290 ;; Hardware stack levels used:    1
 10291 ;; Hardware stack levels required when called:    5
 10292 ;; This function calls:
 10293 ;;		_BeepOn
 10294 ;;		_InitSystemParameter
 10295 ;;		_SaveRFParameterToFlash
 10296 ;; This function is called by:
 10297 ;;		_MenuConfig
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300  11D1                     _ModemSelect:	
 10301                           
 10302                           ; Regs used in _ModemSelect: [wreg-status,0+pclath+cstack]
 10303                           ;ModemSelect@KeyValue stored from wreg
 10304  11D1  00E2               	movwf	ModemSelect@KeyValue
 10305                           
 10306                           ;DK_PIC16_App.c: 687: if(KeyValue==0x04)
 10307  11D2  3A04               	xorlw	4
 10308  11D3  1D03               	skipz
 10309  11D4  29E9               	goto	l16215
 10310                           
 10311                           ;DK_PIC16_App.c: 688: {
 10312                           ;DK_PIC16_App.c: 689: BeepOn((u16*)MusicTab_KeyMove);
 10313  11D5  3042               	movlw	low (_MusicTab_KeyMove| (0+32768))
 10314  11D6  00F2               	movwf	?_BeepOn
 10315  11D7  3099               	movlw	high (_MusicTab_KeyMove| (0+32768))
 10316  11D8  00F3               	movwf	?_BeepOn+1
 10317  11D9  3186  2621  3191   	fcall	_BeepOn
 10318                           
 10319                           ;DK_PIC16_App.c: 691: if(gb_Modem_Addr){gb_Modem_Addr--;}
 10320  11DC  087A               	movf	_gb_Modem_Addr,w
 10321  11DD  1903               	btfsc	3,2
 10322  11DE  29E1               	goto	l16209
 10323  11DF                     l16207:	
 10324  11DF  03FA               	decf	_gb_Modem_Addr,f
 10325  11E0  0008               	return
 10326  11E1                     l16209:	
 10327                           
 10328                           ;DK_PIC16_App.c: 695: {
 10329                           ;DK_PIC16_App.c: 696: gb_Modem_Addr++;
 10330  11E1  0AFA               	incf	_gb_Modem_Addr,f
 10331                           
 10332                           ;DK_PIC16_App.c: 697: if(RF_ModemBuf[gb_Modem_Addr]==0)
 10333  11E2  082D               	movf	_RF_ModemBuf+1,w
 10334  11E3  22C7  3191         	fcall	PL11	;call to abstracted procedure
 10335  11E5  3800               	iorlw	0
 10336  11E6  1903               	btfsc	3,2
 10337  11E7  29DF               	goto	l16207
 10338  11E8  29E1               	goto	l16209
 10339  11E9                     l16215:	
 10340                           
 10341                           ;DK_PIC16_App.c: 705: else if(KeyValue==0x08)
 10342  11E9  0862               	movf	ModemSelect@KeyValue,w
 10343  11EA  3A08               	xorlw	8
 10344  11EB  1D03               	skipz
 10345  11EC  29FB               	goto	l16225
 10346                           
 10347                           ;DK_PIC16_App.c: 706: {
 10348                           ;DK_PIC16_App.c: 707: BeepOn((u16*)MusicTab_KeyMove);
 10349  11ED  3042               	movlw	low (_MusicTab_KeyMove| (0+32768))
 10350  11EE  00F2               	movwf	?_BeepOn
 10351  11EF  3099               	movlw	high (_MusicTab_KeyMove| (0+32768))
 10352  11F0  00F3               	movwf	?_BeepOn+1
 10353  11F1  3186  2621  3191   	fcall	_BeepOn
 10354                           
 10355                           ;DK_PIC16_App.c: 709: gb_Modem_Addr++;
 10356  11F4  0AFA               	incf	_gb_Modem_Addr,f
 10357                           
 10358                           ;DK_PIC16_App.c: 710: if(RF_ModemBuf[gb_Modem_Addr]==0){gb_Modem_Addr=0;}
 10359  11F5  082D               	movf	_RF_ModemBuf+1,w
 10360  11F6  22C7               	fcall	PL11	;call to abstracted procedure
 10361  11F7  3800               	iorlw	0
 10362  11F8  1903               	btfsc	3,2
 10363  11F9  01FA               	clrf	_gb_Modem_Addr
 10364  11FA  0008               	return
 10365  11FB                     l16225:	
 10366                           
 10367                           ;DK_PIC16_App.c: 712: else if(KeyValue==0x02)
 10368  11FB  0862               	movf	ModemSelect@KeyValue,w
 10369  11FC  3A02               	xorlw	2
 10370  11FD  1D03               	skipz
 10371  11FE  2A2C               	goto	l16253
 10372                           
 10373                           ;DK_PIC16_App.c: 713: {
 10374                           ;DK_PIC16_App.c: 714: BeepOn((u16*)MusicTab_KeyOK);
 10375  11FF  301A               	movlw	low (_MusicTab_KeyOK| (0+32768))
 10376  1200  00F2               	movwf	?_BeepOn
 10377  1201  3099               	movlw	high (_MusicTab_KeyOK| (0+32768))
 10378  1202  00F3               	movwf	?_BeepOn+1
 10379  1203  3186  2621  3191   	fcall	_BeepOn
 10380                           
 10381                           ;DK_PIC16_App.c: 716: gb_ParameterChangeFlag=2;
 10382  1206  3002               	movlw	2
 10383  1207  00D5               	movwf	_gb_ParameterChangeFlag
 10384                           
 10385                           ;DK_PIC16_App.c: 717: gb_SystemMode=0x24;
 10386  1208  3024               	movlw	36
 10387  1209  00FB               	movwf	_gb_SystemMode
 10388                           
 10389                           ;DK_PIC16_App.c: 719: if(gb_Modem_Addr_Backup!=gb_Modem_Addr)
 10390  120A  0852               	movf	_gb_Modem_Addr_Backup,w
 10391  120B  067A               	xorwf	_gb_Modem_Addr,w
 10392  120C  1903               	skipnz
 10393  120D  2A29               	goto	l16249
 10394                           
 10395                           ;DK_PIC16_App.c: 720: {
 10396                           ;DK_PIC16_App.c: 721: if(RF_ModemBuf[gb_Modem_Addr]==0x10)
 10397  120E  082D               	movf	_RF_ModemBuf+1,w
 10398  120F  22C7  3191         	fcall	PL11	;call to abstracted procedure
 10399  1211  3A10               	xorlw	16
 10400  1212  1D03               	skipz
 10401  1213  2A18               	goto	l16241
 10402                           
 10403                           ;DK_PIC16_App.c: 722: {
 10404                           ;DK_PIC16_App.c: 723: gb_FreqBuf_Addr=0;
 10405  1214  01CF               	clrf	_gb_FreqBuf_Addr
 10406                           
 10407                           ;DK_PIC16_App.c: 724: gb_RateBuf_Addr=1;
 10408  1215  01D7               	clrf	_gb_RateBuf_Addr
 10409  1216  0AD7               	incf	_gb_RateBuf_Addr,f
 10410  1217  2A26               	goto	L7
 10411  1218                     l16241:	
 10412                           ;DK_PIC16_App.c: 728: }
 10413                           
 10414                           ;DK_PIC16_App.c: 727: gb_BandBuf_Addr=0;
 10415                           
 10416                           ;DK_PIC16_App.c: 726: gb_FdevBuf_Addr=0;
 10417                           
 10418                           ;DK_PIC16_App.c: 725: gb_PowerBuf_Addr=0;
 10419                           
 10420                           
 10421                           ;DK_PIC16_App.c: 729: else if(RF_ModemBuf[gb_Modem_Addr]==0x11)
 10422  1218  082D               	movf	_RF_ModemBuf+1,w
 10423  1219  22C7  3191         	fcall	PL11	;call to abstracted procedure
 10424  121B  3A11               	xorlw	17
 10425  121C  1903               	btfsc	3,2
 10426  121D  2A29               	goto	l16249
 10427                           
 10428                           ;DK_PIC16_App.c: 732: else if(RF_ModemBuf[gb_Modem_Addr]==0x12)
 10429  121E  082D               	movf	_RF_ModemBuf+1,w
 10430  121F  22C7  3191         	fcall	PL11	;call to abstracted procedure
 10431  1221  3A12               	xorlw	18
 10432  1222  1D03               	skipz
 10433  1223  2A29               	goto	l16249
 10434                           
 10435                           ;DK_PIC16_App.c: 733: {
 10436                           ;DK_PIC16_App.c: 734: gb_FreqBuf_Addr=0;
 10437  1224  01CF               	clrf	_gb_FreqBuf_Addr
 10438                           
 10439                           ;DK_PIC16_App.c: 735: gb_RateBuf_Addr=0;
 10440  1225  01D7               	clrf	_gb_RateBuf_Addr
 10441  1226                     L7:	
 10442                           
 10443                           ;DK_PIC16_App.c: 736: gb_PowerBuf_Addr=0;
 10444  1226  01D6               	clrf	_gb_PowerBuf_Addr
 10445                           
 10446                           ;DK_PIC16_App.c: 737: gb_FdevBuf_Addr=0;
 10447  1227  01CD               	clrf	_gb_FdevBuf_Addr
 10448                           
 10449                           ;DK_PIC16_App.c: 738: gb_BandBuf_Addr=0;
 10450  1228  01C4               	clrf	_gb_BandBuf_Addr
 10451  1229                     l16249:	
 10452                           
 10453                           ;DK_PIC16_App.c: 739: }
 10454                           ;DK_PIC16_App.c: 740: }
 10455                           ;DK_PIC16_App.c: 741: InitSystemParameter();
 10456  1229  2235               	fcall	_InitSystemParameter
 10457                           
 10458                           ;DK_PIC16_App.c: 742: SaveRFParameterToFlash();
 10459  122A  3186  2E5F         	ljmp	l15531
 10460  122C                     l16253:	
 10461                           ;DK_PIC16_App.c: 743: }
 10462                           
 10463                           
 10464                           ;DK_PIC16_App.c: 744: else if(KeyValue!=0x00)
 10465  122C  0862               	movf	ModemSelect@KeyValue,w
 10466  122D  1903               	btfsc	3,2
 10467  122E  0008               	return
 10468                           
 10469                           ;DK_PIC16_App.c: 745: {
 10470                           ;DK_PIC16_App.c: 746: BeepOn((u16*)MusicTab_KeyErr);
 10471  122F  303A               	movlw	low (_MusicTab_KeyErr| (0+32768))
 10472  1230  00F2               	movwf	?_BeepOn
 10473  1231  3099               	movlw	high (_MusicTab_KeyErr| (0+32768))
 10474  1232  00F3               	movwf	?_BeepOn+1
 10475  1233  3186  2E21         	ljmp	l14899
 10476  1235                     __end_of_ModemSelect:	
 10477  1235                     __ptext2209:	
 10478 ;; =============== function _BeepOn ends ============
 10479                           
 10480                           
 10481 ;; *************** function _InitSystemParameter *****************
 10482 ;; Defined at:
 10483 ;;		line 245 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;		None
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;		None
 10488 ;; Return value:  Size  Location     Type
 10489 ;;		None               void
 10490 ;; Registers used:
 10491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 10492 ;; Tracked objects:
 10493 ;;		On entry : 1D/0
 10494 ;;		On exit  : 1F/0
 10495 ;;		Unchanged: FFFE0/0
 10496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10501 ;;Total ram usage:        2 bytes
 10502 ;; Hardware stack levels used:    1
 10503 ;; Hardware stack levels required when called:    2
 10504 ;; This function calls:
 10505 ;;		Nothing
 10506 ;; This function is called by:
 10507 ;;		_ModuleSelectModeEntryCheck
 10508 ;;		_ModemSelect
 10509 ;; This function uses a non-reentrant model
 10510 ;;
 10511  1235                     _InitSystemParameter:	
 10512  1235                     l14849:	
 10513                           ; Regs used in _InitSystemParameter: [wreg-fsr0h+status,2+status,0+pclath]
 10514                           
 10515                           
 10516                           ;DK_PIC16_App.c: 246: gw_SendDataCount=0;
 10517  1235  0020               	movlb	0	; select bank0
 10518  1236  01BE               	clrf	_gw_SendDataCount
 10519  1237  01BF               	clrf	_gw_SendDataCount+1
 10520                           
 10521                           ;DK_PIC16_App.c: 247: gw_ReceiveDataCount=0;
 10522  1238  01BC               	clrf	_gw_ReceiveDataCount
 10523  1239  01BD               	clrf	_gw_ReceiveDataCount+1
 10524                           
 10525                           ;DK_PIC16_App.c: 249: if(RF_ModemBuf[1]==0 && gb_SystemMode==0x04){gb_SystemMode=0x24;}
 10526  123A  082D               	movf	_RF_ModemBuf+1,w
 10527  123B  00F3               	movwf	??_InitSystemParameter+1
 10528  123C  082C               	movf	_RF_ModemBuf,w
 10529  123D  00F2               	movwf	??_InitSystemParameter
 10530  123E  3E01               	addlw	1
 10531  123F  0084               	movwf	4
 10532  1240  0873               	movf	??_InitSystemParameter+1,w
 10533  1241  1803               	skipnc
 10534  1242  0A73               	incf	??_InitSystemParameter+1,w
 10535  1243  0085               	movwf	5
 10536  1244  0800               	movf	0,w	;code access
 10537  1245  3800               	iorlw	0
 10538  1246  1D03               	skipz
 10539  1247  2A4E               	goto	l3845
 10540  1248  087B               	movf	_gb_SystemMode,w
 10541  1249  3A04               	xorlw	4
 10542  124A  1D03               	skipz
 10543  124B  2A4E               	goto	l3845
 10544  124C  3024               	movlw	36
 10545  124D  00FB               	movwf	_gb_SystemMode
 10546  124E                     l3845:	
 10547                           
 10548                           ;DK_PIC16_App.c: 251: gw_RF_SentInterval=500;
 10549  124E  30F4               	movlw	244
 10550  124F  00BA               	movwf	_gw_RF_SentInterval
 10551  1250  3001               	movlw	1
 10552  1251  00BB               	movwf	_gw_RF_SentInterval+1
 10553                           
 10554                           ;DK_PIC16_App.c: 253: RF_ModemBuf=(u8*)C_RFM98_ModemBuf;
 10555  1252  306F               	movlw	low (_C_RFM98_ModemBuf| (0+32768))
 10556  1253  00AC               	movwf	_RF_ModemBuf
 10557  1254  3099               	movlw	high (_C_RFM98_ModemBuf| (0+32768))
 10558  1255  00AD               	movwf	_RF_ModemBuf+1
 10559                           
 10560                           ;DK_PIC16_App.c: 254: if(RF_ModemBuf[gb_Modem_Addr]==0x10)
 10561  1256  22D3  3191         	fcall	PL21	;call to abstracted procedure
 10562  1258  3A10               	xorlw	16
 10563  1259  1D03               	skipz
 10564  125A  2A6D               	goto	l14861
 10565                           
 10566                           ;DK_PIC16_App.c: 255: {
 10567                           ;DK_PIC16_App.c: 256: RF_ModuleName=(u8*)C_RFM98_ModuleName;
 10568  125B  3057               	movlw	low (_C_RFM98_ModuleName| (0+32768))
 10569                           
 10570                           ;DK_PIC16_App.c: 257: RF_FreqBuf=(u16*)C_RFM98_FreqBuf;
 10571  125C  22E8  3191         	fcall	PL50	;call to abstracted procedure
 10572                           
 10573                           ;DK_PIC16_App.c: 258: RF_RateBuf=(u8*)C_RFM98_RateBuf;
 10574  125E  3066               	movlw	low (_C_RFM98_RateBuf| (0+32768))
 10575  125F  00B4               	movwf	_RF_RateBuf
 10576  1260  3099               	movlw	high (_C_RFM98_RateBuf| (0+32768))
 10577  1261  00B5               	movwf	_RF_RateBuf+1
 10578                           
 10579                           ;DK_PIC16_App.c: 259: RF_PowerBuf=(u8*)C_RFM98_PowerBuf;
 10580                           
 10581                           ;DK_PIC16_App.c: 260: RF_FdevBuf=(u8*)C_RFM98_FdevBuf;
 10582  1262  22DF  3191         	fcall	PL47	;call to abstracted procedure
 10583                           
 10584                           ;DK_PIC16_App.c: 261: RF_BandBuf=(u8*)C_RFM98_BandBuf;
 10585  1264  3072               	movlw	low (_C_RFM98_BandBuf| (0+32768))
 10586  1265  00A4               	movwf	_RF_BandBuf
 10587  1266  3099               	movlw	high (_C_RFM98_BandBuf| (0+32768))
 10588  1267  00A5               	movwf	_RF_BandBuf+1
 10589                           
 10590                           ;DK_PIC16_App.c: 262: RF_RSSIBuf=(u8*)C_RFM98_RSSIBuf;
 10591  1268  3061               	movlw	low (_C_RFM98_RSSIBuf| (0+32768))
 10592  1269  00B2               	movwf	_RF_RSSIBuf
 10593  126A  3099               	movlw	high (_C_RFM98_RSSIBuf| (0+32768))
 10594  126B  00B3               	movwf	_RF_RSSIBuf+1
 10595                           
 10596                           ;DK_PIC16_App.c: 263: }
 10597  126C  2A88               	goto	l3847
 10598  126D                     l14861:	
 10599                           
 10600                           ;DK_PIC16_App.c: 264: else if(RF_ModemBuf[gb_Modem_Addr]==0x12)
 10601  126D  082D               	movf	_RF_ModemBuf+1,w
 10602  126E  22D3  3191         	fcall	PL21	;call to abstracted procedure
 10603  1270  3A12               	xorlw	18
 10604  1271  1D03               	skipz
 10605  1272  2A88               	goto	l3847
 10606                           
 10607                           ;DK_PIC16_App.c: 265: {
 10608                           ;DK_PIC16_App.c: 266: RF_ModuleName=(u8*)C_RFM98_ModuleName;
 10609  1273  3057               	movlw	low (_C_RFM98_ModuleName| (0+32768))
 10610                           
 10611                           ;DK_PIC16_App.c: 267: RF_FreqBuf=(u16*)C_RFM98_FreqBuf;
 10612  1274  22E8  3191         	fcall	PL50	;call to abstracted procedure
 10613                           
 10614                           ;DK_PIC16_App.c: 268: RF_PowerBuf=(u8*)C_RFM98_PowerBuf;
 10615                           
 10616                           ;DK_PIC16_App.c: 269: RF_FdevBuf=(u8*)C_RFM98_FdevBuf;
 10617  1276  22DF  3191         	fcall	PL47	;call to abstracted procedure
 10618                           
 10619                           ;DK_PIC16_App.c: 270: RF_RateBuf=(u8*)C_RFM98_SpreadFactorBuf;
 10620  1278  3032               	movlw	low (_C_RFM98_SpreadFactorBuf| (0+32768))
 10621  1279  00B4               	movwf	_RF_RateBuf
 10622  127A  3099               	movlw	high (_C_RFM98_SpreadFactorBuf| (0+32768))
 10623  127B  00B5               	movwf	_RF_RateBuf+1
 10624                           
 10625                           ;DK_PIC16_App.c: 271: RF_LoRaBandWidthBuf=(u16*)C_RFM98_LoRaBandBuf;
 10626  127C  30DA               	movlw	low (_C_RFM98_LoRaBandBuf| (0+32768))
 10627  127D  00AA               	movwf	_RF_LoRaBandWidthBuf
 10628  127E  3098               	movlw	high (_C_RFM98_LoRaBandBuf| (0+32768))
 10629  127F  00AB               	movwf	_RF_LoRaBandWidthBuf+1
 10630                           
 10631                           ;DK_PIC16_App.c: 272: RF_RSSIBuf=(u8*)C_RFM98_LoRaRSSIBuf;
 10632  1280  3052               	movlw	low (_C_RFM98_LoRaRSSIBuf| (0+32768))
 10633  1281  00B2               	movwf	_RF_RSSIBuf
 10634  1282  3099               	movlw	high (_C_RFM98_LoRaRSSIBuf| (0+32768))
 10635  1283  00B3               	movwf	_RF_RSSIBuf+1
 10636                           
 10637                           ;DK_PIC16_App.c: 273: gb_RateBuf_Addr=3;
 10638  1284  3003               	movlw	3
 10639  1285  00D7               	movwf	_gb_RateBuf_Addr
 10640                           
 10641                           ;DK_PIC16_App.c: 274: gb_BandBuf_Addr=7;
 10642  1286  3007               	movlw	7
 10643  1287  00C4               	movwf	_gb_BandBuf_Addr
 10644  1288                     l3847:	
 10645                           
 10646                           ;DK_PIC16_App.c: 275: }
 10647                           ;DK_PIC16_App.c: 277: if(gb_FirstPowerUpFlag==1)
 10648  1288  0B4E               	decfsz	_gb_FirstPowerUpFlag,w
 10649  1289  0008               	return
 10650                           
 10651                           ;DK_PIC16_App.c: 278: {
 10652                           ;DK_PIC16_App.c: 279: if((gb_SystemMode>=0x25 && gb_SystemMode<=0x2D) || (gb_SystemMode>
      +                          =0x21 && gb_SystemMode<=0x23))
 10653  128A  3025               	movlw	37
 10654  128B  027B               	subwf	_gb_SystemMode,w
 10655  128C  1C03               	skipc
 10656  128D  2A92               	goto	l14869
 10657  128E  302E               	movlw	46
 10658  128F  027B               	subwf	_gb_SystemMode,w
 10659  1290  1C03               	skipc
 10660  1291  2AA3               	goto	l14879
 10661  1292                     l14869:	
 10662  1292  3021               	movlw	33
 10663  1293  027B               	subwf	_gb_SystemMode,w
 10664  1294  1C03               	skipc
 10665  1295  2ABB               	goto	l14889
 10666  1296  3024               	movlw	36
 10667  1297  027B               	subwf	_gb_SystemMode,w
 10668  1298  1C03               	btfss	3,0
 10669  1299  2AA3               	goto	l14879
 10670  129A  2ABB               	goto	l14889
 10671  129B                     l14873:	
 10672                           
 10673                           ;DK_PIC16_App.c: 284: gb_ModuleWorkMode=0;
 10674  129B  01D4               	clrf	_gb_ModuleWorkMode
 10675                           
 10676                           ;DK_PIC16_App.c: 285: break;
 10677  129C  2AB0               	goto	l14881
 10678  129D                     l3858:	
 10679                           ;DK_PIC16_App.c: 286: case 0x11:
 10680                           
 10681                           
 10682                           ;DK_PIC16_App.c: 287: gb_ModuleWorkMode=1;
 10683  129D  01D4               	clrf	_gb_ModuleWorkMode
 10684  129E  0AD4               	incf	_gb_ModuleWorkMode,f
 10685                           
 10686                           ;DK_PIC16_App.c: 288: break;
 10687  129F  2AB0               	goto	l14881
 10688  12A0                     l14875:	
 10689                           
 10690                           ;DK_PIC16_App.c: 290: gb_ModuleWorkMode=2;
 10691  12A0  3002               	movlw	2
 10692  12A1  00D4               	movwf	_gb_ModuleWorkMode
 10693                           
 10694                           ;DK_PIC16_App.c: 291: break;
 10695  12A2  2AB0               	goto	l14881
 10696  12A3                     l14879:	
 10697  12A3  082D               	movf	_RF_ModemBuf+1,w
 10698  12A4  22D3  3191         	fcall	PL21	;call to abstracted procedure
 10699                           
 10700                           ; Switch size 1, requested type "space"
 10701                           ; Number of cases is 3, Range of values is 16 to 18
 10702                           ; switch strategies available:
 10703                           ; Name         Instructions Cycles
 10704                           ; simple_byte           10     6 (average)
 10705                           ; direct_byte           15     9 (fixed)
 10706                           ; jumptable            263     9 (fixed)
 10707                           ;	Chosen strategy is simple_byte
 10708  12A6  3A10               	xorlw	16	; case 16
 10709  12A7  1903               	skipnz
 10710  12A8  2A9B               	goto	l14873
 10711  12A9  3A01               	xorlw	1	; case 17
 10712  12AA  1903               	skipnz
 10713  12AB  2A9D               	goto	l3858
 10714  12AC  3A03               	xorlw	3	; case 18
 10715  12AD  1903               	skipnz
 10716  12AE  2AA0               	goto	l14875
 10717  12AF  2AB0               	goto	l14881
 10718  12B0                     l14881:	
 10719                           
 10720                           ;DK_PIC16_App.c: 294: if(gb_SystemMode==0x23){gb_ModuleWorkMode=4;}
 10721  12B0  087B               	movf	_gb_SystemMode,w
 10722  12B1  3A23               	xorlw	35
 10723  12B2  1D03               	skipz
 10724  12B3  2AB6               	goto	l14885
 10725  12B4  3004               	movlw	4
 10726  12B5  00D4               	movwf	_gb_ModuleWorkMode
 10727  12B6                     l14885:	
 10728                           
 10729                           ;DK_PIC16_App.c: 296: gb_ModuleWorkEnableFlag=1;
 10730  12B6  01D3               	clrf	_gb_ModuleWorkEnableFlag
 10731  12B7  0AD3               	incf	_gb_ModuleWorkEnableFlag,f
 10732                           
 10733                           ;DK_PIC16_App.c: 297: gb_ParameterChangeFlag=1;
 10734  12B8  01D5               	clrf	_gb_ParameterChangeFlag
 10735  12B9  0AD5               	incf	_gb_ParameterChangeFlag,f
 10736                           
 10737                           ;DK_PIC16_App.c: 298: }
 10738  12BA  0008               	return
 10739  12BB                     l14889:	
 10740                           
 10741                           ;DK_PIC16_App.c: 299: else
 10742                           ;DK_PIC16_App.c: 300: {
 10743                           ;DK_PIC16_App.c: 301: if(gb_SystemMode==0x02)
 10744  12BB  087B               	movf	_gb_SystemMode,w
 10745  12BC  3A02               	xorlw	2
 10746  12BD  1D03               	skipz
 10747  12BE  2AC1               	goto	l14893
 10748                           
 10749                           ;DK_PIC16_App.c: 302: {
 10750                           ;DK_PIC16_App.c: 303: gb_SysMode_Set=0x51;
 10751  12BF  3051               	movlw	81
 10752  12C0  00DA               	movwf	_gb_SysMode_Set
 10753  12C1                     l14893:	
 10754  12C1  3003               	movlw	3
 10755                           
 10756                           ;DK_PIC16_App.c: 304: }
 10757                           ;DK_PIC16_App.c: 305: gb_ModuleWorkEnableFlag=0;
 10758  12C2  01D3               	clrf	_gb_ModuleWorkEnableFlag
 10759                           
 10760                           ;DK_PIC16_App.c: 306: gb_ModuleWorkMode=3;
 10761  12C3  00D4               	movwf	_gb_ModuleWorkMode
 10762                           
 10763                           ;DK_PIC16_App.c: 307: gb_ParameterChangeFlag=2;
 10764  12C4  3002               	movlw	2
 10765  12C5  00D5               	movwf	_gb_ParameterChangeFlag
 10766  12C6  0008               	return
 10767  12C7                     __end_of_InitSystemParameter:	
 10768  12C7                     PL11:	
 10769  12C7  00E1               	movwf	??_ModemSelect+1
 10770  12C8  082C               	movf	_RF_ModemBuf,w
 10771  12C9  00E0               	movwf	??_ModemSelect
 10772  12CA  087A               	movf	_gb_Modem_Addr,w
 10773  12CB  0760               	addwf	??_ModemSelect,w
 10774  12CC  0084               	movwf	4
 10775  12CD  0861               	movf	??_ModemSelect+1,w
 10776  12CE  1803               	skipnc
 10777  12CF  0A61               	incf	??_ModemSelect+1,w
 10778  12D0  0085               	movwf	5
 10779  12D1  0800               	movf	0,w	;code access
 10780  12D2  0008               	return
 10781  12D3                     PL21:	
 10782  12D3  00F3               	movwf	??_InitSystemParameter+1
 10783  12D4  082C               	movf	_RF_ModemBuf,w
 10784  12D5  00F2               	movwf	??_InitSystemParameter
 10785  12D6  087A               	movf	_gb_Modem_Addr,w
 10786  12D7  0772               	addwf	??_InitSystemParameter,w
 10787  12D8  0084               	movwf	4
 10788  12D9  0873               	movf	??_InitSystemParameter+1,w
 10789  12DA  1803               	skipnc
 10790  12DB  0A73               	incf	??_InitSystemParameter+1,w
 10791  12DC  0085               	movwf	5
 10792  12DD  0800               	movf	0,w	;code access
 10793  12DE  0008               	return
 10794  12DF                     PL47:	
 10795  12DF  305C               	movlw	low (_C_RFM98_PowerBuf| (0+32768))
 10796  12E0  00B0               	movwf	_RF_PowerBuf
 10797  12E1  3099               	movlw	high (_C_RFM98_PowerBuf| (0+32768))
 10798  12E2  00B1               	movwf	_RF_PowerBuf+1
 10799  12E3  3074               	movlw	low (_C_RFM98_FdevBuf| (0+32768))
 10800  12E4  00A6               	movwf	_RF_FdevBuf
 10801  12E5  3099               	movlw	high (_C_RFM98_FdevBuf| (0+32768))
 10802  12E6  00A7               	movwf	_RF_FdevBuf+1
 10803  12E7  0008               	return
 10804  12E8                     PL50:	
 10805  12E8  00AE               	movwf	_RF_ModuleName
 10806  12E9  3099               	movlw	high (_C_RFM98_ModuleName| (0+32768))
 10807  12EA  00AF               	movwf	_RF_ModuleName+1
 10808  12EB  306B               	movlw	low (_C_RFM98_FreqBuf| (0+32768))
 10809  12EC  00A8               	movwf	_RF_FreqBuf
 10810  12ED  3099               	movlw	high (_C_RFM98_FreqBuf| (0+32768))
 10811  12EE  00A9               	movwf	_RF_FreqBuf+1
 10812  12EF  0008               	return
 10813                           
 10814                           	psect	text2176
 10815  0A2F                     __ptext2176:	
 10816 ;; =============== function _PowerOnMusic ends ============
 10817                           
 10818                           
 10819 ;; *************** function _DisplayRFParameter *****************
 10820 ;; Defined at:
 10821 ;;		line 319 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;		None
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;  TempDispBuf     2   13[BANK0 ] PTR unsigned char 
 10826 ;;		 -> STR_19(7), STR_18(7), STR_17(7), STR_16(7), 
 10827 ;;		 -> STR_15(7), STR_14(7), STR_13(7), STR_12(7), 
 10828 ;;		 -> STR_11(7), STR_10(7), STR_9(7), STR_8(7), 
 10829 ;;		 -> STR_7(7), STR_6(7), STR_5(7), 
 10830 ;; Return value:  Size  Location     Type
 10831 ;;		None               void
 10832 ;; Registers used:
 10833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10834 ;; Tracked objects:
 10835 ;;		On entry : 1C/0
 10836 ;;		On exit  : 1F/0
 10837 ;;		Unchanged: FFE00/0
 10838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10843 ;;Total ram usage:        6 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:    4
 10846 ;; This function calls:
 10847 ;;		_SendStringToDispBuf
 10848 ;;		_BeepOn
 10849 ;;		_SendNumberToDispBuf
 10850 ;;		___lwdiv
 10851 ;; This function is called by:
 10852 ;;		_MenuConfig
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855  0A2F                     _DisplayRFParameter:	
 10856                           
 10857                           ;DK_PIC16_App.c: 320: u8 *TempDispBuf;
 10858                           ;DK_PIC16_App.c: 321: if(gb_ErrorFlag!=1)
 10859                           
 10860                           ; Regs used in _DisplayRFParameter: [wreg-status,0+pclath+cstack]
 10861  0A2F  0020               	movlb	0	; select bank0
 10862  0A30  0B4C               	decfsz	_gb_ErrorFlag,w
 10863  0A31  2AD2               	goto	l15693
 10864  0A32  2B04               	goto	l15695
 10865  0A33                     l15567:	
 10866                           
 10867                           ;DK_PIC16_App.c: 326: if(RF_ModemBuf[gb_Modem_Addr]==0x10)
 10868  0A33  082D               	movf	_RF_ModemBuf+1,w
 10869  0A34  2777  318A         	fcall	PL10	;call to abstracted procedure
 10870  0A36  2769  318A         	fcall	PL7	;call to abstracted procedure
 10871  0A38  3A10               	xorlw	16
 10872  0A39  1D03               	skipz
 10873  0A3A  2A3F               	goto	l15571
 10874                           
 10875                           ;DK_PIC16_App.c: 327: {
 10876                           ;DK_PIC16_App.c: 328: SendStringToDispBuf(25, (u8*)"sel-FS");
 10877  0A3B  30E6               	movlw	low (STR_1| (0+32768))
 10878  0A3C  00F4               	movwf	?_SendStringToDispBuf
 10879  0A3D  3099               	movlw	high (STR_1| (0+32768))
 10880  0A3E  2A56               	goto	L9
 10881  0A3F                     l15571:	
 10882                           ;DK_PIC16_App.c: 329: }
 10883                           
 10884                           
 10885                           ;DK_PIC16_App.c: 330: else if(RF_ModemBuf[gb_Modem_Addr]==0x11)
 10886  0A3F  082D               	movf	_RF_ModemBuf+1,w
 10887  0A40  2777  318A         	fcall	PL10	;call to abstracted procedure
 10888  0A42  2769  318A         	fcall	PL7	;call to abstracted procedure
 10889  0A44  3A11               	xorlw	17
 10890  0A45  1D03               	skipz
 10891  0A46  2A4B               	goto	l15575
 10892                           
 10893                           ;DK_PIC16_App.c: 331: {
 10894                           ;DK_PIC16_App.c: 332: SendStringToDispBuf(25, (u8*)"sel-OO");
 10895  0A47  30CA               	movlw	low (STR_2| (0+32768))
 10896  0A48  00F4               	movwf	?_SendStringToDispBuf
 10897  0A49  3099               	movlw	high (STR_2| (0+32768))
 10898  0A4A  2A56               	goto	L9
 10899  0A4B                     l15575:	
 10900                           ;DK_PIC16_App.c: 333: }
 10901                           
 10902                           
 10903                           ;DK_PIC16_App.c: 334: else if(RF_ModemBuf[gb_Modem_Addr]==0x12)
 10904  0A4B  082D               	movf	_RF_ModemBuf+1,w
 10905  0A4C  2777  318A         	fcall	PL10	;call to abstracted procedure
 10906  0A4E  2769  318A         	fcall	PL7	;call to abstracted procedure
 10907  0A50  3A12               	xorlw	18
 10908  0A51  1D03               	skipz
 10909  0A52  2A5A               	goto	l15579
 10910                           
 10911                           ;DK_PIC16_App.c: 335: {
 10912                           ;DK_PIC16_App.c: 336: SendStringToDispBuf(25, (u8*)"sel-Lr");
 10913  0A53  30ED               	movlw	low (STR_3| (0+32768))
 10914  0A54  00F4               	movwf	?_SendStringToDispBuf
 10915  0A55  3099               	movlw	high (STR_3| (0+32768))
 10916  0A56                     L9:	
 10917  0A56  00F5               	movwf	?_SendStringToDispBuf+1
 10918  0A57  3019               	movlw	25
 10919  0A58  2499  318A         	fcall	_SendStringToDispBuf
 10920  0A5A                     l15579:	
 10921                           
 10922                           ;DK_PIC16_App.c: 337: }
 10923                           ;DK_PIC16_App.c: 338: gb_DispFlashFlag=2;
 10924  0A5A  3002               	movlw	2
 10925  0A5B                     L10:	
 10926  0A5B  0020               	movlb	0	; select bank0
 10927  0A5C  00CA               	movwf	_gb_DispFlashFlag
 10928                           
 10929                           ;DK_PIC16_App.c: 340: _DispSeg.u32Bits.Bit19=0;
 10930  0A5D  11A2               	bcf	__DispSeg+2,3
 10931                           
 10932                           ;DK_PIC16_App.c: 341: _DispSeg.u32Bits.Bit20=0;
 10933  0A5E  1222               	bcf	__DispSeg+2,4
 10934                           
 10935                           ;DK_PIC16_App.c: 342: _DispSeg.u32Bits.Bit15=0;
 10936  0A5F  13A1               	bcf	__DispSeg+1,7
 10937                           
 10938                           ;DK_PIC16_App.c: 343: _DispSeg.u32Bits.Bit17=0;
 10939  0A60  10A2               	bcf	__DispSeg+2,1
 10940                           
 10941                           ;DK_PIC16_App.c: 344: _DispSeg.u32Bits.Bit18=0;
 10942  0A61  1122               	bcf	__DispSeg+2,2
 10943                           
 10944                           ;DK_PIC16_App.c: 345: _DispSeg.u32Bits.Bit23=0;_DispSeg.u32Bits.Bit16=0;
 10945  0A62  13A2               	bcf	__DispSeg+2,7
 10946  0A63  1022               	bcf	__DispSeg+2,0
 10947                           
 10948                           ;DK_PIC16_App.c: 346: _DispSeg.u32Bits.Bit5=0;_DispSeg.u32Bits.Bit6=0;_DispSeg.u32Bits.B
      +                          it7=0;_DispSeg.u32Bits.Bit8=0;
 10949  0A64  12A0               	bcf	__DispSeg,5
 10950  0A65  1320               	bcf	__DispSeg,6
 10951  0A66  13A0               	bcf	__DispSeg,7
 10952  0A67  1021               	bcf	__DispSeg+1,0
 10953                           
 10954                           ;DK_PIC16_App.c: 348: _DispSeg.u32Bits.Bit10=1;
 10955                           
 10956                           ;DK_PIC16_App.c: 349: SendStringToDispBuf(18, RF_ModuleName);_DispSeg.u32Bits.Bit9=1;
 10957  0A68  27E3  318A         	fcall	PL55	;call to abstracted procedure
 10958  0A6A  2499               	fcall	_SendStringToDispBuf
 10959  0A6B  0020               	movlb	0	; select bank0
 10960  0A6C  14A1               	bsf	__DispSeg+1,1
 10961  0A6D  0008               	return
 10962  0A6E                     l15611:	
 10963                           
 10964                           ;DK_PIC16_App.c: 353: SendStringToDispBuf(25, (u8*)"sel-RF");
 10965  0A6E  30C3               	movlw	low (STR_4| (0+32768))
 10966  0A6F  00F4               	movwf	?_SendStringToDispBuf
 10967  0A70  3099               	movlw	high (STR_4| (0+32768))
 10968  0A71  00F5               	movwf	?_SendStringToDispBuf+1
 10969  0A72  3019               	movlw	25
 10970  0A73  2499  318A         	fcall	_SendStringToDispBuf
 10971                           
 10972                           ;DK_PIC16_App.c: 354: gb_DispFlashFlag=5;
 10973  0A75  3005               	movlw	5
 10974  0A76  2A5B               	goto	L10
 10975  0A77                     l15645:	
 10976                           ;DK_PIC16_App.c: 365: SendStringToDispBuf(18, RF_ModuleName);_DispSeg.u32Bits.Bit9=1;
 10977                           
 10978                           ;DK_PIC16_App.c: 364: _DispSeg.u32Bits.Bit10=1;
 10979                           
 10980                           ;DK_PIC16_App.c: 362: _DispSeg.u32Bits.Bit5=0;_DispSeg.u32Bits.Bit6=0;_DispSeg.u32Bits.B
      +                          it7=0;_DispSeg.u32Bits.Bit8=0;
 10981                           
 10982                           ;DK_PIC16_App.c: 361: _DispSeg.u32Bits.Bit23=0;_DispSeg.u32Bits.Bit16=0;
 10983                           
 10984                           ;DK_PIC16_App.c: 360: _DispSeg.u32Bits.Bit18=0;
 10985                           
 10986                           ;DK_PIC16_App.c: 359: _DispSeg.u32Bits.Bit17=0;
 10987                           
 10988                           ;DK_PIC16_App.c: 358: _DispSeg.u32Bits.Bit15=0;
 10989                           
 10990                           ;DK_PIC16_App.c: 357: _DispSeg.u32Bits.Bit20=0;
 10991                           
 10992                           ;DK_PIC16_App.c: 356: _DispSeg.u32Bits.Bit19=0;
 10993                           
 10994                           
 10995                           ;DK_PIC16_App.c: 369: TempDispBuf=(u8*)" set  ";
 10996  0A77  307D               	movlw	low (STR_5| (0+32768))
 10997  0A78  00ED               	movwf	DisplayRFParameter@TempDispBuf
 10998  0A79  3099               	movlw	high (STR_5| (0+32768))
 10999  0A7A  00EE               	movwf	DisplayRFParameter@TempDispBuf+1
 11000                           
 11001                           ;DK_PIC16_App.c: 370: gb_DispFlashFlag=2;
 11002  0A7B  3002               	movlw	2
 11003  0A7C  2AD0               	goto	L25
 11004  0A7D                     l15647:	
 11005                           ;DK_PIC16_App.c: 371: break;
 11006                           
 11007                           
 11008                           ;DK_PIC16_App.c: 373: TempDispBuf=(u8*)"FS--T ";
 11009  0A7D  30B5               	movlw	low (STR_6| (0+32768))
 11010  0A7E  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11011  0A7F  3099               	movlw	high (STR_6| (0+32768))
 11012  0A80  2AAC               	goto	L22
 11013  0A81                     l15649:	
 11014                           ;DK_PIC16_App.c: 374: break;
 11015                           
 11016                           
 11017                           ;DK_PIC16_App.c: 376: TempDispBuf=(u8*)"FS--R ";
 11018  0A81  3099               	movlw	low (STR_7| (0+32768))
 11019  0A82  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11020  0A83  3099               	movlw	high (STR_7| (0+32768))
 11021  0A84  2AAC               	goto	L22
 11022  0A85                     l15651:	
 11023                           ;DK_PIC16_App.c: 377: break;
 11024                           
 11025                           
 11026                           ;DK_PIC16_App.c: 379: TempDispBuf=(u8*)"FS--TR";
 11027  0A85  30DF               	movlw	low (STR_8| (0+32768))
 11028  0A86  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11029  0A87  3099               	movlw	high (STR_8| (0+32768))
 11030  0A88  2AAC               	goto	L22
 11031  0A89                     l15653:	
 11032                           ;DK_PIC16_App.c: 380: break;
 11033                           
 11034                           
 11035                           ;DK_PIC16_App.c: 382: TempDispBuf=(u8*)"OO--T ";
 11036  0A89  30A7               	movlw	low (STR_9| (0+32768))
 11037  0A8A  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11038  0A8B  3099               	movlw	high (STR_9| (0+32768))
 11039  0A8C  2AAC               	goto	L22
 11040  0A8D                     l15655:	
 11041                           ;DK_PIC16_App.c: 383: break;
 11042                           
 11043                           
 11044                           ;DK_PIC16_App.c: 385: TempDispBuf=(u8*)"OO--R ";
 11045  0A8D  308B               	movlw	low (STR_10| (0+32768))
 11046  0A8E  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11047  0A8F  3099               	movlw	high (STR_10| (0+32768))
 11048  0A90  2AAC               	goto	L22
 11049  0A91                     l15657:	
 11050                           ;DK_PIC16_App.c: 386: break;
 11051                           
 11052                           
 11053                           ;DK_PIC16_App.c: 388: TempDispBuf=(u8*)"OO--TR";
 11054  0A91  30D1               	movlw	low (STR_11| (0+32768))
 11055  0A92  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11056  0A93  3099               	movlw	high (STR_11| (0+32768))
 11057  0A94  2AAC               	goto	L22
 11058  0A95                     l15659:	
 11059                           ;DK_PIC16_App.c: 389: break;
 11060                           
 11061                           
 11062                           ;DK_PIC16_App.c: 391: TempDispBuf=(u8*)"LR--T ";
 11063  0A95  30AE               	movlw	low (STR_12| (0+32768))
 11064  0A96  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11065  0A97  3099               	movlw	high (STR_12| (0+32768))
 11066  0A98  2AAC               	goto	L22
 11067  0A99                     l15661:	
 11068                           ;DK_PIC16_App.c: 392: break;
 11069                           
 11070                           
 11071                           ;DK_PIC16_App.c: 394: TempDispBuf=(u8*)"LR--R ";
 11072  0A99  3092               	movlw	low (STR_13| (0+32768))
 11073  0A9A  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11074  0A9B  3099               	movlw	high (STR_13| (0+32768))
 11075  0A9C  2AAC               	goto	L22
 11076  0A9D                     l15663:	
 11077                           ;DK_PIC16_App.c: 395: break;
 11078                           
 11079                           
 11080                           ;DK_PIC16_App.c: 397: TempDispBuf=(u8*)"LR--TR";
 11081  0A9D  30D8               	movlw	low (STR_14| (0+32768))
 11082  0A9E  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11083  0A9F  3099               	movlw	high (STR_14| (0+32768))
 11084  0AA0  2AAC               	goto	L22
 11085  0AA1                     l15665:	
 11086                           ;DK_PIC16_App.c: 398: break;
 11087                           
 11088                           
 11089                           ;DK_PIC16_App.c: 400: TempDispBuf=(u8*)" T--T ";
 11090  0AA1  30BC               	movlw	low (STR_15| (0+32768))
 11091  0AA2  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11092  0AA3  3099               	movlw	high (STR_15| (0+32768))
 11093  0AA4  2AAC               	goto	L22
 11094  0AA5                     l15667:	
 11095                           ;DK_PIC16_App.c: 401: break;
 11096                           
 11097                           
 11098                           ;DK_PIC16_App.c: 403: TempDispBuf=(u8*)" T--R ";
 11099  0AA5  30A0               	movlw	low (STR_16| (0+32768))
 11100  0AA6  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11101  0AA7  3099               	movlw	high (STR_16| (0+32768))
 11102  0AA8  2AAC               	goto	L22
 11103  0AA9                     l15669:	
 11104                           ;DK_PIC16_App.c: 404: break;
 11105                           
 11106                           
 11107                           ;DK_PIC16_App.c: 409: TempDispBuf=(u8*)"SLEEP ";
 11108  0AA9  3084               	movlw	low (STR_17| (0+32768))
 11109  0AAA  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11110  0AAB  3099               	movlw	high (STR_17| (0+32768))
 11111  0AAC                     L22:	
 11112  0AAC  00EE               	movwf	DisplayRFParameter@TempDispBuf+1
 11113                           
 11114                           ;DK_PIC16_App.c: 410: break;
 11115  0AAD  2B11               	goto	l15699
 11116  0AAE                     l15671:	
 11117                           
 11118                           ;DK_PIC16_App.c: 412: TempDispBuf=(u8*)" set  ";
 11119  0AAE  307D               	movlw	low (STR_5| (0+32768))
 11120  0AAF  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11121  0AB0  3099               	movlw	high (STR_5| (0+32768))
 11122  0AB1  00EE               	movwf	DisplayRFParameter@TempDispBuf+1
 11123                           
 11124                           ;DK_PIC16_App.c: 413: if(gb_SysMode_Set==0x51){gb_DispFlashFlag=1;}
 11125  0AB2  085A               	movf	_gb_SysMode_Set,w
 11126  0AB3  3A51               	xorlw	81
 11127  0AB4  1D03               	skipz
 11128  0AB5  2AB9               	goto	l15675
 11129  0AB6  01CA               	clrf	_gb_DispFlashFlag
 11130  0AB7  0ACA               	incf	_gb_DispFlashFlag,f
 11131  0AB8  2B11               	goto	l15699
 11132  0AB9                     l15675:	
 11133                           
 11134                           ;DK_PIC16_App.c: 414: else if(gb_SysMode_Set==0x52){gb_DispFlashFlag=6;}
 11135  0AB9  085A               	movf	_gb_SysMode_Set,w
 11136  0ABA  3A52               	xorlw	82
 11137  0ABB  1D03               	skipz
 11138  0ABC  2ABF               	goto	l15679
 11139  0ABD  3006               	movlw	6
 11140  0ABE  2AD0               	goto	L25
 11141  0ABF                     l15679:	
 11142                           
 11143                           ;DK_PIC16_App.c: 415: else if(gb_SysMode_Set==0x53){gb_DispFlashFlag=7;}
 11144  0ABF  085A               	movf	_gb_SysMode_Set,w
 11145  0AC0  3A53               	xorlw	83
 11146  0AC1  1D03               	skipz
 11147  0AC2  2AC5               	goto	l15683
 11148  0AC3  3007               	movlw	7
 11149  0AC4  2AD0               	goto	L25
 11150  0AC5                     l15683:	
 11151                           
 11152                           ;DK_PIC16_App.c: 416: else if(gb_SysMode_Set==0x54){gb_DispFlashFlag=8;}
 11153  0AC5  085A               	movf	_gb_SysMode_Set,w
 11154  0AC6  3A54               	xorlw	84
 11155  0AC7  1D03               	skipz
 11156  0AC8  2ACB               	goto	l15687
 11157  0AC9  3008               	movlw	8
 11158  0ACA  2AD0               	goto	L25
 11159  0ACB                     l15687:	
 11160                           
 11161                           ;DK_PIC16_App.c: 417: else if(gb_SysMode_Set==0x55){gb_DispFlashFlag=9;}
 11162  0ACB  085A               	movf	_gb_SysMode_Set,w
 11163  0ACC  3A55               	xorlw	85
 11164  0ACD  1D03               	skipz
 11165  0ACE  2B11               	goto	l15699
 11166  0ACF  3009               	movlw	9
 11167  0AD0                     L25:	
 11168  0AD0  00CA               	movwf	_gb_DispFlashFlag
 11169  0AD1  2B11               	goto	l15699
 11170  0AD2                     l15693:	
 11171  0AD2  087B               	movf	_gb_SystemMode,w
 11172                           
 11173                           ; Switch size 1, requested type "space"
 11174                           ; Number of cases is 16, Range of values is 1 to 45
 11175                           ; switch strategies available:
 11176                           ; Name         Instructions Cycles
 11177                           ; simple_byte           49    25 (average)
 11178                           ; direct_byte           99     9 (fixed)
 11179                           ; jumptable            263     9 (fixed)
 11180                           ;	Chosen strategy is simple_byte
 11181  0AD3  3A01               	xorlw	1	; case 1
 11182  0AD4  1903               	skipnz
 11183  0AD5  2A6E               	goto	l15611
 11184  0AD6  3A03               	xorlw	3	; case 2
 11185  0AD7  1903               	skipnz
 11186  0AD8  2AAE               	goto	l15671
 11187  0AD9  3A06               	xorlw	6	; case 4
 11188  0ADA  1903               	skipnz
 11189  0ADB  2A33               	goto	l15567
 11190  0ADC  3A25               	xorlw	37	; case 33
 11191  0ADD  1903               	skipnz
 11192  0ADE  2AA1               	goto	l15665
 11193  0ADF  3A03               	xorlw	3	; case 34
 11194  0AE0  1903               	skipnz
 11195  0AE1  2AA5               	goto	l15667
 11196  0AE2  3A01               	xorlw	1	; case 35
 11197  0AE3  1903               	skipnz
 11198  0AE4  2AA9               	goto	l15669
 11199  0AE5  3A07               	xorlw	7	; case 36
 11200  0AE6  1903               	skipnz
 11201  0AE7  2A77               	goto	l15645
 11202  0AE8  3A01               	xorlw	1	; case 37
 11203  0AE9  1903               	skipnz
 11204  0AEA  2A7D               	goto	l15647
 11205  0AEB  3A03               	xorlw	3	; case 38
 11206  0AEC  1903               	skipnz
 11207  0AED  2A81               	goto	l15649
 11208  0AEE  3A01               	xorlw	1	; case 39
 11209  0AEF  1903               	skipnz
 11210  0AF0  2A85               	goto	l15651
 11211  0AF1  3A0F               	xorlw	15	; case 40
 11212  0AF2  1903               	skipnz
 11213  0AF3  2A89               	goto	l15653
 11214  0AF4  3A01               	xorlw	1	; case 41
 11215  0AF5  1903               	skipnz
 11216  0AF6  2A8D               	goto	l15655
 11217  0AF7  3A03               	xorlw	3	; case 42
 11218  0AF8  1903               	skipnz
 11219  0AF9  2A91               	goto	l15657
 11220  0AFA  3A01               	xorlw	1	; case 43
 11221  0AFB  1903               	skipnz
 11222  0AFC  2A95               	goto	l15659
 11223  0AFD  3A07               	xorlw	7	; case 44
 11224  0AFE  1903               	skipnz
 11225  0AFF  2A99               	goto	l15661
 11226  0B00  3A01               	xorlw	1	; case 45
 11227  0B01  1903               	skipnz
 11228  0B02  2A9D               	goto	l15663
 11229  0B03  2B11               	goto	l15699
 11230  0B04                     l15695:	
 11231                           
 11232                           ;DK_PIC16_App.c: 421: else
 11233                           ;DK_PIC16_App.c: 422: {
 11234                           ;DK_PIC16_App.c: 423: TempDispBuf=(u8*)" Err  ";
 11235  0B04  3076               	movlw	low (STR_19| (0+32768))
 11236  0B05  00ED               	movwf	DisplayRFParameter@TempDispBuf
 11237  0B06  3099               	movlw	high (STR_19| (0+32768))
 11238  0B07  00EE               	movwf	DisplayRFParameter@TempDispBuf+1
 11239                           
 11240                           ;DK_PIC16_App.c: 424: gb_DispFlashFlag=2;
 11241  0B08  3002               	movlw	2
 11242  0B09  00CA               	movwf	_gb_DispFlashFlag
 11243                           
 11244                           ;DK_PIC16_App.c: 425: BeepOn((u16*)MusicTab_Error);
 11245  0B0A  3006               	movlw	low (_MusicTab_Error| (0+32768))
 11246  0B0B  00F2               	movwf	?_BeepOn
 11247  0B0C  3099               	movlw	high (_MusicTab_Error| (0+32768))
 11248  0B0D  00F3               	movwf	?_BeepOn+1
 11249  0B0E  3186  2621  318A   	fcall	_BeepOn
 11250  0B11                     l15699:	
 11251                           
 11252                           ;DK_PIC16_App.c: 426: }
 11253                           ;DK_PIC16_App.c: 427: SendStringToDispBuf(25, TempDispBuf);
 11254  0B11  086E               	movf	DisplayRFParameter@TempDispBuf+1,w
 11255  0B12  00F5               	movwf	?_SendStringToDispBuf+1
 11256  0B13  086D               	movf	DisplayRFParameter@TempDispBuf,w
 11257  0B14  00F4               	movwf	?_SendStringToDispBuf
 11258  0B15  3019               	movlw	25
 11259  0B16  2499  318A         	fcall	_SendStringToDispBuf
 11260                           
 11261                           ;DK_PIC16_App.c: 429: _DispSeg.u32Bits.Bit10=1;
 11262  0B18  0020               	movlb	0	; select bank0
 11263                           
 11264                           ;DK_PIC16_App.c: 430: SendStringToDispBuf(18, RF_ModuleName);_DispSeg.u32Bits.Bit9=1;
 11265  0B19  27E3  318A         	fcall	PL55	;call to abstracted procedure
 11266  0B1B  2499  318A         	fcall	_SendStringToDispBuf
 11267  0B1D  0020               	movlb	0	; select bank0
 11268  0B1E  14A1               	bsf	__DispSeg+1,1
 11269                           
 11270                           ;DK_PIC16_App.c: 431: switch(RF_FreqBuf[gb_FreqBuf_Addr])
 11271  0B1F  2B31               	goto	l15709
 11272  0B20                     l3902:	
 11273                           ;DK_PIC16_App.c: 432: {
 11274                           ;DK_PIC16_App.c: 433: case 315:
 11275                           
 11276                           
 11277                           ;DK_PIC16_App.c: 434: _DispSeg.u32Bits.Bit5=1;_DispSeg.u32Bits.Bit6=0;_DispSeg.u32Bits.B
      +                          it7=0;_DispSeg.u32Bits.Bit8=0;
 11278  0B20  16A0               	bsf	__DispSeg,5
 11279  0B21  1320               	bcf	__DispSeg,6
 11280  0B22  2B25               	goto	L26
 11281  0B23                     l3904:	
 11282                           ;DK_PIC16_App.c: 436: case 434:
 11283                           
 11284                           ;DK_PIC16_App.c: 435: break;
 11285                           
 11286                           
 11287                           ;DK_PIC16_App.c: 437: _DispSeg.u32Bits.Bit5=0;_DispSeg.u32Bits.Bit6=1;_DispSeg.u32Bits.B
      +                          it7=0;_DispSeg.u32Bits.Bit8=0;
 11288  0B23  12A0               	bcf	__DispSeg,5
 11289  0B24  1720               	bsf	__DispSeg,6
 11290  0B25                     L26:	
 11291  0B25  13A0               	bcf	__DispSeg,7
 11292  0B26  2B2A               	goto	L27
 11293  0B27                     l3905:	
 11294                           ;DK_PIC16_App.c: 439: case 868:
 11295                           
 11296                           ;DK_PIC16_App.c: 438: break;
 11297                           
 11298                           
 11299                           ;DK_PIC16_App.c: 440: _DispSeg.u32Bits.Bit5=0;_DispSeg.u32Bits.Bit6=0;_DispSeg.u32Bits.B
      +                          it7=1;_DispSeg.u32Bits.Bit8=0;
 11300  0B27  12A0               	bcf	__DispSeg,5
 11301  0B28  1320               	bcf	__DispSeg,6
 11302  0B29  17A0               	bsf	__DispSeg,7
 11303  0B2A                     L27:	
 11304  0B2A  1021               	bcf	__DispSeg+1,0
 11305                           
 11306                           ;DK_PIC16_App.c: 441: break;
 11307  0B2B  2B54               	goto	l15711
 11308  0B2C                     l3906:	
 11309                           ;DK_PIC16_App.c: 442: case 915:
 11310                           
 11311                           
 11312                           ;DK_PIC16_App.c: 443: _DispSeg.u32Bits.Bit5=0;_DispSeg.u32Bits.Bit6=0;_DispSeg.u32Bits.B
      +                          it7=0;_DispSeg.u32Bits.Bit8=1;
 11313  0B2C  12A0               	bcf	__DispSeg,5
 11314  0B2D  1320               	bcf	__DispSeg,6
 11315  0B2E  13A0               	bcf	__DispSeg,7
 11316  0B2F  1421               	bsf	__DispSeg+1,0
 11317                           
 11318                           ;DK_PIC16_App.c: 444: break;
 11319  0B30  2B54               	goto	l15711
 11320  0B31                     l15709:	
 11321  0B31  0829               	movf	_RF_FreqBuf+1,w
 11322  0B32  00EA               	movwf	??_DisplayRFParameter+1
 11323  0B33  0828               	movf	_RF_FreqBuf,w
 11324  0B34  00E9               	movwf	??_DisplayRFParameter
 11325  0B35  354F               	lslf	_gb_FreqBuf_Addr,w
 11326  0B36  0769               	addwf	??_DisplayRFParameter,w
 11327  0B37  2771  318A         	fcall	PL8	;call to abstracted procedure
 11328  0B39  3F00               	moviw [0]fsr0
 11329  0B3A  00EB               	movwf	??_DisplayRFParameter+2
 11330  0B3B  3F01               	moviw [1]fsr0
 11331  0B3C  00EC               	movwf	??_DisplayRFParameter+3
 11332                           
 11333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 11334                           ; Switch size 1, requested type "space"
 11335                           ; Number of cases is 2, Range of values is 1 to 3
 11336                           ; switch strategies available:
 11337                           ; Name         Instructions Cycles
 11338                           ; simple_byte            7     4 (average)
 11339                           ; direct_byte           15     9 (fixed)
 11340                           ; jumptable            263     9 (fixed)
 11341                           ;	Chosen strategy is simple_byte
 11342  0B3D  3A01               	xorlw	1	; case 1
 11343  0B3E  1903               	skipnz
 11344  0B3F  2B44               	goto	l17143
 11345  0B40  3A02               	xorlw	2	; case 3
 11346  0B41  1903               	skipnz
 11347  0B42  2B4C               	goto	l17145
 11348  0B43  2B54               	goto	l15711
 11349  0B44                     l17143:	
 11350                           
 11351                           ; Switch size 1, requested type "space"
 11352                           ; Number of cases is 2, Range of values is 59 to 178
 11353                           ; switch strategies available:
 11354                           ; Name         Instructions Cycles
 11355                           ; simple_byte            7     4 (average)
 11356                           ; direct_byte          249     9 (fixed)
 11357                           ; jumptable            263     9 (fixed)
 11358                           ;	Chosen strategy is simple_byte
 11359  0B44  086B               	movf	??_DisplayRFParameter+2,w
 11360  0B45  3A3B               	xorlw	59	; case 59
 11361  0B46  1903               	skipnz
 11362  0B47  2B20               	goto	l3902
 11363  0B48  3A89               	xorlw	137	; case 178
 11364  0B49  1903               	skipnz
 11365  0B4A  2B23               	goto	l3904
 11366  0B4B  2B54               	goto	l15711
 11367  0B4C                     l17145:	
 11368                           
 11369                           ; Switch size 1, requested type "space"
 11370                           ; Number of cases is 2, Range of values is 100 to 147
 11371                           ; switch strategies available:
 11372                           ; Name         Instructions Cycles
 11373                           ; simple_byte            7     4 (average)
 11374                           ; direct_byte          105     9 (fixed)
 11375                           ; jumptable            263     9 (fixed)
 11376                           ;	Chosen strategy is simple_byte
 11377  0B4C  086B               	movf	??_DisplayRFParameter+2,w
 11378  0B4D  3A64               	xorlw	100	; case 100
 11379  0B4E  1903               	skipnz
 11380  0B4F  2B27               	goto	l3905
 11381  0B50  3AF7               	xorlw	247	; case 147
 11382  0B51  1903               	skipnz
 11383  0B52  2B2C               	goto	l3906
 11384  0B53  2B54               	goto	l15711
 11385  0B54                     l15711:	
 11386                           
 11387                           ;DK_PIC16_App.c: 446: SendNumberToDispBuf(12,RF_RateBuf[gb_RateBuf_Addr]);
 11388  0B54  0835               	movf	_RF_RateBuf+1,w
 11389  0B55  00EA               	movwf	??_DisplayRFParameter+1
 11390  0B56  0834               	movf	_RF_RateBuf,w
 11391  0B57  00E9               	movwf	??_DisplayRFParameter
 11392  0B58  0857               	movf	_gb_RateBuf_Addr,w
 11393  0B59  2769  318A         	fcall	PL7	;call to abstracted procedure
 11394  0B5B  00E4               	movwf	?_SendNumberToDispBuf
 11395  0B5C  300C               	movlw	12
 11396  0B5D  01E5               	clrf	?_SendNumberToDispBuf+1
 11397  0B5E  2538  318A         	fcall	_SendNumberToDispBuf
 11398                           
 11399                           ;DK_PIC16_App.c: 447: if(RF_ModemBuf[gb_Modem_Addr]==0x12)
 11400  0B60  082D               	movf	_RF_ModemBuf+1,w
 11401  0B61  2777  318A         	fcall	PL10	;call to abstracted procedure
 11402  0B63  2769  318A         	fcall	PL7	;call to abstracted procedure
 11403  0B65  3A12               	xorlw	18
 11404  0B66  1D03               	skipz
 11405  0B67  2B6B               	goto	l3907
 11406                           
 11407                           ;DK_PIC16_App.c: 448: {
 11408                           ;DK_PIC16_App.c: 449: _DispSeg.u32Bits.Bit23=0;_DispSeg.u32Bits.Bit16=0;
 11409  0B68  13A2               	bcf	__DispSeg+2,7
 11410  0B69  1022               	bcf	__DispSeg+2,0
 11411                           
 11412                           ;DK_PIC16_App.c: 450: }
 11413  0B6A  2B6D               	goto	l15717
 11414  0B6B                     l3907:	
 11415                           
 11416                           ;DK_PIC16_App.c: 451: else
 11417                           ;DK_PIC16_App.c: 452: {
 11418                           ;DK_PIC16_App.c: 453: _DispSeg.u32Bits.Bit23=1;_DispSeg.u32Bits.Bit16=1;
 11419  0B6B  17A2               	bsf	__DispSeg+2,7
 11420  0B6C  1422               	bsf	__DispSeg+2,0
 11421  0B6D                     l15717:	
 11422                           
 11423                           ;DK_PIC16_App.c: 454: }
 11424                           ;DK_PIC16_App.c: 456: if(RF_FdevBuf[0]==0 && RF_ModemBuf[gb_Modem_Addr]!=0x12)
 11425  0B6D  3187  2748  318A   	fcall	PL14	;call to abstracted procedure
 11426  0B70  1D03               	skipz
 11427  0B71  2BA3               	goto	l15733
 11428  0B72  082D               	movf	_RF_ModemBuf+1,w
 11429  0B73  2777  318A         	fcall	PL10	;call to abstracted procedure
 11430  0B75  2769  318A         	fcall	PL7	;call to abstracted procedure
 11431  0B77  3A12               	xorlw	18
 11432  0B78  1903               	skipnz
 11433  0B79  2BA3               	goto	l15733
 11434                           
 11435                           ;DK_PIC16_App.c: 457: {
 11436                           ;DK_PIC16_App.c: 458: SendStringToDispBuf(29,(u8*)"    ");_DispSeg.u32Bits.Bit19=0;
 11437  0B7A  30F4               	movlw	low (STR_20| (0+32768))
 11438  0B7B  00F4               	movwf	?_SendStringToDispBuf
 11439  0B7C  3099               	movlw	high (STR_20| (0+32768))
 11440  0B7D  00F5               	movwf	?_SendStringToDispBuf+1
 11441  0B7E  301D               	movlw	29
 11442  0B7F  2499  318A         	fcall	_SendStringToDispBuf
 11443  0B81  0020               	movlb	0	; select bank0
 11444  0B82  11A2               	bcf	__DispSeg+2,3
 11445                           
 11446                           ;DK_PIC16_App.c: 459: SendNumberToDispBuf(0,gw_ReceiveDataCount);_DispSeg.u32Bits.Bit20=
      +                          1;
 11447  0B83  27E9  318A         	fcall	PL59	;call to abstracted procedure
 11448  0B85  2538  318A         	fcall	_SendNumberToDispBuf
 11449  0B87  30F6               	movlw	low ((STR_20+2)| (0+32768))
 11450  0B88  1622               	bsf	__DispSeg+2,4
 11451                           
 11452                           ;DK_PIC16_App.c: 460: SendStringToDispBuf(14,(u8*)"  ");_DispSeg.u32Bits.Bit15=0;
 11453  0B89  00F4               	movwf	?_SendStringToDispBuf
 11454  0B8A  3099               	movlw	high ((STR_20+2)| (0+32768))
 11455  0B8B  00F5               	movwf	?_SendStringToDispBuf+1
 11456  0B8C  300E               	movlw	14
 11457  0B8D  2499  318A         	fcall	_SendStringToDispBuf
 11458  0B8F  0020               	movlb	0	; select bank0
 11459  0B90  30F5               	movlw	low ((STR_20+1)| (0+32768))
 11460  0B91  13A1               	bcf	__DispSeg+1,7
 11461                           
 11462                           ;DK_PIC16_App.c: 461: SendStringToDispBuf(5,(u8*)"   ");_DispSeg.u32Bits.Bit17=0;
 11463  0B92  27FC  318A         	fcall	PL69	;call to abstracted procedure
 11464  0B94  2499  318A         	fcall	_SendStringToDispBuf
 11465  0B96  0020               	movlb	0	; select bank0
 11466  0B97  10A2               	bcf	__DispSeg+2,1
 11467                           
 11468                           ;DK_PIC16_App.c: 462: SendNumberToDispBuf(8,RF_BandBuf[gb_BandBuf_Addr]);_DispSeg.u32Bit
      +                          s.Bit18=1;
 11469  0B98  27AA  318A         	fcall	PL29	;call to abstracted procedure
 11470  0B9A  2769  318A         	fcall	PL7	;call to abstracted procedure
 11471  0B9C  00E4               	movwf	?_SendNumberToDispBuf
 11472  0B9D  3008               	movlw	8
 11473  0B9E  01E5               	clrf	?_SendNumberToDispBuf+1
 11474  0B9F  2538  318A         	fcall	_SendNumberToDispBuf
 11475  0BA1  1522               	bsf	__DispSeg+2,2
 11476                           
 11477                           ;DK_PIC16_App.c: 463: }
 11478  0BA2  2C49               	goto	l15785
 11479  0BA3                     l15733:	
 11480                           
 11481                           ;DK_PIC16_App.c: 464: else if(RF_BandBuf[0]==0 && RF_ModemBuf[gb_Modem_Addr]!=0x12)
 11482  0BA3  3187  274F  318A   	fcall	PL15	;call to abstracted procedure
 11483  0BA6  1D03               	skipz
 11484  0BA7  2BDD               	goto	l15749
 11485  0BA8  082D               	movf	_RF_ModemBuf+1,w
 11486  0BA9  2777  318A         	fcall	PL10	;call to abstracted procedure
 11487  0BAB  2769  318A         	fcall	PL7	;call to abstracted procedure
 11488  0BAD  3A12               	xorlw	18
 11489  0BAE  1903               	skipnz
 11490  0BAF  2BDD               	goto	l15749
 11491                           
 11492                           ;DK_PIC16_App.c: 465: {
 11493                           ;DK_PIC16_App.c: 466: SendNumberToDispBuf(29,gw_SendDataCount);_DispSeg.u32Bits.Bit19=1;
 11494  0BB0  083F               	movf	_gw_SendDataCount+1,w
 11495  0BB1  27F8  318A         	fcall	PL68	;call to abstracted procedure
 11496  0BB3  2538  318A         	fcall	_SendNumberToDispBuf
 11497  0BB5  30F4               	movlw	low (STR_20| (0+32768))
 11498  0BB6  15A2               	bsf	__DispSeg+2,3
 11499                           
 11500                           ;DK_PIC16_App.c: 467: SendStringToDispBuf(0,(u8*)"    ");_DispSeg.u32Bits.Bit20=0;
 11501  0BB7  00F4               	movwf	?_SendStringToDispBuf
 11502  0BB8  3099               	movlw	high (STR_20| (0+32768))
 11503  0BB9  00F5               	movwf	?_SendStringToDispBuf+1
 11504  0BBA  3000               	movlw	0
 11505  0BBB  2499  318A         	fcall	_SendStringToDispBuf
 11506  0BBD  0020               	movlb	0	; select bank0
 11507  0BBE  1222               	bcf	__DispSeg+2,4
 11508                           
 11509                           ;DK_PIC16_App.c: 468: SendNumberToDispBuf(14,RF_PowerBuf[gb_PowerBuf_Addr]);_DispSeg.u32
      +                          Bits.Bit15=1;
 11510  0BBF  27A4  318A         	fcall	PL28	;call to abstracted procedure
 11511  0BC1  2769  318A         	fcall	PL7	;call to abstracted procedure
 11512  0BC3  00E4               	movwf	?_SendNumberToDispBuf
 11513  0BC4  300E               	movlw	14
 11514  0BC5  01E5               	clrf	?_SendNumberToDispBuf+1
 11515  0BC6  2538  318A         	fcall	_SendNumberToDispBuf
 11516  0BC8  17A1               	bsf	__DispSeg+1,7
 11517                           
 11518                           ;DK_PIC16_App.c: 469: SendNumberToDispBuf(5,RF_FdevBuf[gb_FdevBuf_Addr]);_DispSeg.u32Bit
      +                          s.Bit17=1;
 11519  0BC9  27B5  318A         	fcall	PL31	;call to abstracted procedure
 11520  0BCB  2769  318A         	fcall	PL7	;call to abstracted procedure
 11521  0BCD  00E4               	movwf	?_SendNumberToDispBuf
 11522  0BCE  3005               	movlw	5
 11523  0BCF  01E5               	clrf	?_SendNumberToDispBuf+1
 11524  0BD0  2538  318A         	fcall	_SendNumberToDispBuf
 11525  0BD2  30F5               	movlw	low ((STR_20+1)| (0+32768))
 11526  0BD3  14A2               	bsf	__DispSeg+2,1
 11527                           
 11528                           ;DK_PIC16_App.c: 470: SendStringToDispBuf(8,(u8*)"   ");_DispSeg.u32Bits.Bit18=0;
 11529  0BD4  00F4               	movwf	?_SendStringToDispBuf
 11530  0BD5  3099               	movlw	high ((STR_20+1)| (0+32768))
 11531  0BD6  00F5               	movwf	?_SendStringToDispBuf+1
 11532  0BD7  3008               	movlw	8
 11533  0BD8  2499  318A         	fcall	_SendStringToDispBuf
 11534  0BDA  0020               	movlb	0	; select bank0
 11535  0BDB  1122               	bcf	__DispSeg+2,2
 11536                           
 11537                           ;DK_PIC16_App.c: 471: }
 11538  0BDC  2C49               	goto	l15785
 11539  0BDD                     l15749:	
 11540                           
 11541                           ;DK_PIC16_App.c: 472: else
 11542                           ;DK_PIC16_App.c: 473: {
 11543                           ;DK_PIC16_App.c: 474: SendNumberToDispBuf(29,gw_SendDataCount);_DispSeg.u32Bits.Bit19=1;
 11544  0BDD  083F               	movf	_gw_SendDataCount+1,w
 11545  0BDE  27F8  318A         	fcall	PL68	;call to abstracted procedure
 11546  0BE0  2538  318A         	fcall	_SendNumberToDispBuf
 11547  0BE2  15A2               	bsf	__DispSeg+2,3
 11548                           
 11549                           ;DK_PIC16_App.c: 475: SendNumberToDispBuf(0,gw_ReceiveDataCount);_DispSeg.u32Bits.Bit20=
      +                          1;
 11550  0BE3  27E9  318A         	fcall	PL59	;call to abstracted procedure
 11551  0BE5  2538  318A         	fcall	_SendNumberToDispBuf
 11552  0BE7  1622               	bsf	__DispSeg+2,4
 11553                           
 11554                           ;DK_PIC16_App.c: 476: SendNumberToDispBuf(14,RF_PowerBuf[gb_PowerBuf_Addr]);_DispSeg.u32
      +                          Bits.Bit15=1;
 11555  0BE8  27A4  318A         	fcall	PL28	;call to abstracted procedure
 11556  0BEA  2769  318A         	fcall	PL7	;call to abstracted procedure
 11557  0BEC  00E4               	movwf	?_SendNumberToDispBuf
 11558  0BED  300E               	movlw	14
 11559  0BEE  01E5               	clrf	?_SendNumberToDispBuf+1
 11560  0BEF  2538  318A         	fcall	_SendNumberToDispBuf
 11561  0BF1  17A1               	bsf	__DispSeg+1,7
 11562                           
 11563                           ;DK_PIC16_App.c: 477: if(RF_ModemBuf[gb_Modem_Addr]==0x12)
 11564  0BF2  082D               	movf	_RF_ModemBuf+1,w
 11565  0BF3  2777  318A         	fcall	PL10	;call to abstracted procedure
 11566  0BF5  2769  318A         	fcall	PL7	;call to abstracted procedure
 11567  0BF7  3A12               	xorlw	18
 11568  0BF8  1D03               	skipz
 11569  0BF9  2C34               	goto	l15777
 11570                           
 11571                           ;DK_PIC16_App.c: 478: {
 11572                           ;DK_PIC16_App.c: 479: SendStringToDispBuf(5,(u8*)"   ");_DispSeg.u32Bits.Bit17=0;
 11573  0BFA  30F5               	movlw	low ((STR_20+1)| (0+32768))
 11574  0BFB  27FC  318A         	fcall	PL69	;call to abstracted procedure
 11575  0BFD  2499  318A         	fcall	_SendStringToDispBuf
 11576  0BFF  0020               	movlb	0	; select bank0
 11577  0C00  10A2               	bcf	__DispSeg+2,1
 11578                           
 11579                           ;DK_PIC16_App.c: 480: if(RF_LoRaBandWidthBuf[gb_BandBuf_Addr]<1000)
 11580  0C01  082B               	movf	_RF_LoRaBandWidthBuf+1,w
 11581  0C02  2788  318A         	fcall	PL20	;call to abstracted procedure
 11582  0C04  2771  318A         	fcall	PL8	;call to abstracted procedure
 11583  0C06  3F00               	moviw [0]fsr0
 11584  0C07  00EB               	movwf	??_DisplayRFParameter+2
 11585  0C08  3F01               	moviw [1]fsr0
 11586  0C09  00EC               	movwf	??_DisplayRFParameter+3
 11587  0C0A  3003               	movlw	3
 11588  0C0B  026C               	subwf	??_DisplayRFParameter+3,w
 11589  0C0C  30E8               	movlw	232
 11590  0C0D  1903               	skipnz
 11591  0C0E  026B               	subwf	??_DisplayRFParameter+2,w
 11592  0C0F  1803               	skipnc
 11593  0C10  2C20               	goto	l15771
 11594                           
 11595                           ;DK_PIC16_App.c: 481: {
 11596                           ;DK_PIC16_App.c: 482: SendNumberToDispBuf(8,RF_LoRaBandWidthBuf[gb_BandBuf_Addr]);_DispS
      +                          eg.u32Bits.Bit18=1; _DispSeg.u32Bits.Bit25=1;
 11597  0C11  082B               	movf	_RF_LoRaBandWidthBuf+1,w
 11598  0C12  2788  318A         	fcall	PL20	;call to abstracted procedure
 11599  0C14  2771  318A         	fcall	PL8	;call to abstracted procedure
 11600  0C16  3F00               	moviw [0]fsr0
 11601  0C17  00E4               	movwf	?_SendNumberToDispBuf
 11602  0C18  3F01               	moviw [1]fsr0
 11603  0C19  00E5               	movwf	?_SendNumberToDispBuf+1
 11604  0C1A  3008               	movlw	8
 11605  0C1B  2538  318A         	fcall	_SendNumberToDispBuf
 11606  0C1D  1522               	bsf	__DispSeg+2,2
 11607  0C1E  14A3               	bsf	__DispSeg+3,1
 11608                           
 11609                           ;DK_PIC16_App.c: 483: }
 11610  0C1F  2C49               	goto	l15785
 11611  0C20                     l15771:	
 11612                           
 11613                           ;DK_PIC16_App.c: 484: else
 11614                           ;DK_PIC16_App.c: 485: {
 11615                           ;DK_PIC16_App.c: 486: SendNumberToDispBuf(8,RF_LoRaBandWidthBuf[gb_BandBuf_Addr]/10);_Di
      +                          spSeg.u32Bits.Bit18=1; _DispSeg.u32Bits.Bit25=0;
 11616  0C20  300A               	movlw	10
 11617  0C21  00F2               	movwf	?___lwdiv
 11618  0C22  01F3               	clrf	?___lwdiv+1
 11619  0C23  082B               	movf	_RF_LoRaBandWidthBuf+1,w
 11620  0C24  2788  318A         	fcall	PL20	;call to abstracted procedure
 11621  0C26  2771  318A         	fcall	PL8	;call to abstracted procedure
 11622  0C28  3F00               	moviw [0]fsr0
 11623  0C29  00F4               	movwf	?___lwdiv+2
 11624  0C2A  3F01               	moviw [1]fsr0
 11625  0C2B  00F5               	movwf	?___lwdiv+3
 11626  0C2C  2713  318A         	fcall	___lwdiv
 11627  0C2E  0873               	movf	?___lwdiv+1,w
 11628  0C2F  00E5               	movwf	?_SendNumberToDispBuf+1
 11629  0C30  0872               	movf	?___lwdiv,w
 11630  0C31  00E4               	movwf	?_SendNumberToDispBuf
 11631  0C32  3008               	movlw	8
 11632  0C33  2C45               	goto	L28
 11633  0C34                     l15777:	
 11634                           
 11635                           ;DK_PIC16_App.c: 489: else
 11636                           ;DK_PIC16_App.c: 490: {
 11637                           ;DK_PIC16_App.c: 491: SendNumberToDispBuf(5,RF_FdevBuf[gb_FdevBuf_Addr]);_DispSeg.u32Bit
      +                          s.Bit17=1;
 11638  0C34  27B5  318A         	fcall	PL31	;call to abstracted procedure
 11639  0C36  2769  318A         	fcall	PL7	;call to abstracted procedure
 11640  0C38  00E4               	movwf	?_SendNumberToDispBuf
 11641  0C39  3005               	movlw	5
 11642  0C3A  01E5               	clrf	?_SendNumberToDispBuf+1
 11643  0C3B  2538  318A         	fcall	_SendNumberToDispBuf
 11644  0C3D  14A2               	bsf	__DispSeg+2,1
 11645                           
 11646                           ;DK_PIC16_App.c: 492: SendNumberToDispBuf(8,RF_BandBuf[gb_BandBuf_Addr]);_DispSeg.u32Bit
      +                          s.Bit18=1;_DispSeg.u32Bits.Bit25=0;
 11647  0C3E  27AA  318A         	fcall	PL29	;call to abstracted procedure
 11648  0C40  2769  318A         	fcall	PL7	;call to abstracted procedure
 11649  0C42  00E4               	movwf	?_SendNumberToDispBuf
 11650  0C43  3008               	movlw	8
 11651  0C44  01E5               	clrf	?_SendNumberToDispBuf+1
 11652  0C45                     L28:	
 11653  0C45  2538  318A         	fcall	_SendNumberToDispBuf
 11654  0C47  1522               	bsf	__DispSeg+2,2
 11655  0C48  10A3               	bcf	__DispSeg+3,1
 11656  0C49                     l15785:	
 11657                           
 11658                           ;DK_PIC16_App.c: 493: }
 11659                           ;DK_PIC16_App.c: 494: }
 11660                           ;DK_PIC16_App.c: 496: if(RF_RSSIBuf[0]!=0 &&(gb_SystemMode==0x26||gb_SystemMode==0x22||g
      +                          b_SystemMode==0x2C||gb_SystemMode==0x29))
 11661  0C49  0832               	movf	_RF_RSSIBuf,w
 11662  0C4A  0084               	movwf	4
 11663  0C4B  0833               	movf	_RF_RSSIBuf+1,w
 11664  0C4C  0085               	movwf	5
 11665  0C4D  0800               	movf	0,w	;code access
 11666  0C4E  3A00               	xorlw	0
 11667  0C4F  1903               	skipnz
 11668  0C50  2C93               	goto	l3917
 11669  0C51  087B               	movf	_gb_SystemMode,w
 11670  0C52  3A26               	xorlw	38
 11671  0C53  1903               	skipnz
 11672  0C54  2C61               	goto	l3919
 11673  0C55  087B               	movf	_gb_SystemMode,w
 11674  0C56  3A22               	xorlw	34
 11675  0C57  1903               	skipnz
 11676  0C58  2C61               	goto	l3919
 11677  0C59  087B               	movf	_gb_SystemMode,w
 11678  0C5A  3A2C               	xorlw	44
 11679  0C5B  1903               	skipnz
 11680  0C5C  2C61               	goto	l3919
 11681  0C5D  087B               	movf	_gb_SystemMode,w
 11682  0C5E  3A29               	xorlw	41
 11683  0C5F  1D03               	skipz
 11684  0C60  2C93               	goto	l3917
 11685  0C61                     l3919:	
 11686                           
 11687                           ;DK_PIC16_App.c: 497: {
 11688                           ;DK_PIC16_App.c: 498: _DispSeg.u32Bits.Bit0=1;
 11689  0C61  1420               	bsf	__DispSeg,0
 11690                           
 11691                           ;DK_PIC16_App.c: 499: if(gb_RF_RSSI!=0xff)
 11692  0C62  085F               	movf	_gb_RF_RSSI,w
 11693  0C63  3AFF               	xorlw	255
 11694  0C64  1903               	skipnz
 11695  0C65  0008               	return
 11696                           
 11697                           ;DK_PIC16_App.c: 500: {
 11698                           ;DK_PIC16_App.c: 501: _DispSeg.u32Bits.Bit1=1;
 11699  0C66  14A0               	bsf	__DispSeg,1
 11700                           
 11701                           ;DK_PIC16_App.c: 502: _DispSeg.u32Bits.Bit2=1;
 11702  0C67  1520               	bsf	__DispSeg,2
 11703                           
 11704                           ;DK_PIC16_App.c: 503: _DispSeg.u32Bits.Bit3=1;
 11705  0C68  15A0               	bsf	__DispSeg,3
 11706                           
 11707                           ;DK_PIC16_App.c: 504: _DispSeg.u32Bits.Bit4=1;
 11708  0C69  1620               	bsf	__DispSeg,4
 11709                           
 11710                           ;DK_PIC16_App.c: 505: if(gb_RF_RSSI<RF_RSSIBuf[3]){_DispSeg.u32Bits.Bit4=0;}
 11711  0C6A  0833               	movf	_RF_RSSIBuf+1,w
 11712  0C6B  00EA               	movwf	??_DisplayRFParameter+1
 11713  0C6C  0832               	movf	_RF_RSSIBuf,w
 11714  0C6D  00E9               	movwf	??_DisplayRFParameter
 11715  0C6E  3E03               	addlw	3
 11716  0C6F  2771  318A         	fcall	PL8	;call to abstracted procedure
 11717  0C71  0800               	movf	0,w	;code access
 11718  0C72  025F               	subwf	_gb_RF_RSSI,w
 11719  0C73  1C03               	btfss	3,0
 11720  0C74  1220               	bcf	__DispSeg,4
 11721                           
 11722                           ;DK_PIC16_App.c: 506: if(gb_RF_RSSI<RF_RSSIBuf[2]){_DispSeg.u32Bits.Bit3=0;}
 11723  0C75  0833               	movf	_RF_RSSIBuf+1,w
 11724  0C76  00EA               	movwf	??_DisplayRFParameter+1
 11725  0C77  0832               	movf	_RF_RSSIBuf,w
 11726  0C78  00E9               	movwf	??_DisplayRFParameter
 11727  0C79  3E02               	addlw	2
 11728  0C7A  2771  318A         	fcall	PL8	;call to abstracted procedure
 11729  0C7C  0800               	movf	0,w	;code access
 11730  0C7D  025F               	subwf	_gb_RF_RSSI,w
 11731  0C7E  1C03               	btfss	3,0
 11732  0C7F  11A0               	bcf	__DispSeg,3
 11733                           
 11734                           ;DK_PIC16_App.c: 507: if(gb_RF_RSSI<RF_RSSIBuf[1]){_DispSeg.u32Bits.Bit2=0;}
 11735  0C80  0833               	movf	_RF_RSSIBuf+1,w
 11736  0C81  00EA               	movwf	??_DisplayRFParameter+1
 11737  0C82  0832               	movf	_RF_RSSIBuf,w
 11738  0C83  00E9               	movwf	??_DisplayRFParameter
 11739  0C84  3E01               	addlw	1
 11740  0C85  2771               	fcall	PL8	;call to abstracted procedure
 11741  0C86  0800               	movf	0,w	;code access
 11742  0C87  025F               	subwf	_gb_RF_RSSI,w
 11743  0C88  1C03               	btfss	3,0
 11744  0C89  1120               	bcf	__DispSeg,2
 11745                           
 11746                           ;DK_PIC16_App.c: 508: if(gb_RF_RSSI<RF_RSSIBuf[0]){_DispSeg.u32Bits.Bit1=0;}
 11747  0C8A  0832               	movf	_RF_RSSIBuf,w
 11748  0C8B  0084               	movwf	4
 11749  0C8C  0833               	movf	_RF_RSSIBuf+1,w
 11750  0C8D  0085               	movwf	5
 11751  0C8E  0800               	movf	0,w	;code access
 11752  0C8F  025F               	subwf	_gb_RF_RSSI,w
 11753  0C90  1C03               	btfss	3,0
 11754  0C91  10A0               	bcf	__DispSeg,1
 11755  0C92  0008               	return
 11756  0C93                     l3917:	
 11757                           
 11758                           ;DK_PIC16_App.c: 512: else
 11759                           ;DK_PIC16_App.c: 513: {
 11760                           ;DK_PIC16_App.c: 514: _DispSeg.u32Bits.Bit0=0;_DispSeg.u32Bits.Bit1=0;_DispSeg.u32Bits.B
      +                          it2=0;_DispSeg.u32Bits.Bit3=0;_DispSeg.u32Bits.Bit4=0;
 11761  0C93  1020               	bcf	__DispSeg,0
 11762  0C94  10A0               	bcf	__DispSeg,1
 11763  0C95  1120               	bcf	__DispSeg,2
 11764  0C96  11A0               	bcf	__DispSeg,3
 11765  0C97  1220               	bcf	__DispSeg,4
 11766  0C98  0008               	return
 11767  0C99                     __end_of_DisplayRFParameter:	
 11768  0C99                     __ptext2192:	
 11769 ;; =============== function _SendNumberToDispBuf ends ============
 11770                           
 11771                           
 11772 ;; *************** function _SendStringToDispBuf *****************
 11773 ;; Defined at:
 11774 ;;		line 201 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_LCD.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;  addr            1    wreg     unsigned char 
 11777 ;;  datBuf          2    4[COMMON] PTR unsigned char 
 11778 ;;		 -> NULL(0), STR_25(4), STR_24(4), STR_23(5), 
 11779 ;;		 -> STR_22(4), STR_21(3), STR_20(5), STR_19(7), 
 11780 ;;		 -> STR_18(7), STR_17(7), STR_16(7), STR_15(7), 
 11781 ;;		 -> STR_14(7), STR_13(7), STR_12(7), STR_11(7), 
 11782 ;;		 -> STR_10(7), STR_9(7), STR_8(7), STR_7(7), 
 11783 ;;		 -> STR_6(7), STR_5(7), STR_4(7), STR_3(7), 
 11784 ;;		 -> STR_2(7), STR_1(7), C_RFM98_ModuleName(5), 
 11785 ;; Auto vars:     Size  Location     Type
 11786 ;;  addr            1    9[COMMON] unsigned char 
 11787 ;;  length          1    8[COMMON] unsigned char 
 11788 ;;  i               1    7[COMMON] unsigned char 
 11789 ;;  j               1    6[COMMON] unsigned char 
 11790 ;; Return value:  Size  Location     Type
 11791 ;;		None               void
 11792 ;; Registers used:
 11793 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11794 ;; Tracked objects:
 11795 ;;		On entry : 1C/0
 11796 ;;		On exit  : 0/0
 11797 ;;		Unchanged: FFE00/0
 11798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11800 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Totals:         6       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;Total ram usage:       11 bytes
 11804 ;; Hardware stack levels used:    1
 11805 ;; Hardware stack levels required when called:    3
 11806 ;; This function calls:
 11807 ;;		_AsciiToDisplay
 11808 ;; This function is called by:
 11809 ;;		_DisplayRFParameter
 11810 ;; This function uses a non-reentrant model
 11811 ;;
 11812  0C99                     _SendStringToDispBuf:	
 11813                           
 11814                           ; Regs used in _SendStringToDispBuf: [wreg-status,0+pclath+cstack]
 11815                           ;SendStringToDispBuf@addr stored from wreg
 11816  0C99  00F9               	movwf	SendStringToDispBuf@addr
 11817                           
 11818                           ;DK_LCD.c: 202: u8 i,j=0;
 11819  0C9A  01F6               	clrf	SendStringToDispBuf@j
 11820                           
 11821                           ;DK_LCD.c: 203: u8 length=0;
 11822  0C9B  01F8               	clrf	SendStringToDispBuf@length
 11823                           
 11824                           ;DK_LCD.c: 205: switch(addr)
 11825  0C9C  2CA6               	goto	l15229
 11826  0C9D                     l15211:	
 11827                           
 11828                           ;DK_LCD.c: 208: length=6;
 11829  0C9D  3006               	movlw	6
 11830  0C9E  2CA4               	goto	L34
 11831  0C9F                     l15213:	
 11832                           ;DK_LCD.c: 209: break;
 11833                           
 11834                           
 11835                           ;DK_LCD.c: 211: length=4;
 11836  0C9F  3004               	movlw	4
 11837  0CA0  2CA4               	goto	L34
 11838  0CA1                     l15219:	
 11839                           ;DK_LCD.c: 212: break;
 11840                           
 11841                           
 11842                           ;DK_LCD.c: 220: length=2;
 11843  0CA1  3002               	movlw	2
 11844  0CA2  2CA4               	goto	L34
 11845  0CA3                     l15221:	
 11846                           ;DK_LCD.c: 221: break;
 11847                           
 11848                           
 11849                           ;DK_LCD.c: 223: length=3;
 11850  0CA3  3003               	movlw	3
 11851  0CA4                     L34:	
 11852  0CA4  00F8               	movwf	SendStringToDispBuf@length
 11853                           
 11854                           ;DK_LCD.c: 224: break;
 11855  0CA5  2CC0               	goto	l15231
 11856  0CA6                     l15229:	
 11857  0CA6  0879               	movf	SendStringToDispBuf@addr,w
 11858                           
 11859                           ; Switch size 1, requested type "space"
 11860                           ; Number of cases is 8, Range of values is 0 to 29
 11861                           ; switch strategies available:
 11862                           ; Name         Instructions Cycles
 11863                           ; simple_byte           25    13 (average)
 11864                           ; direct_byte           66     6 (fixed)
 11865                           ; jumptable            260     6 (fixed)
 11866                           ; rangetable            34     4 (fixed)
 11867                           ; spacedrange           65     6 (fixed)
 11868                           ; locatedrange          30     3 (fixed)
 11869                           ;	Chosen strategy is simple_byte
 11870  0CA7  3A00               	xorlw	0	; case 0
 11871  0CA8  1903               	skipnz
 11872  0CA9  2C9F               	goto	l15213
 11873  0CAA  3A05               	xorlw	5	; case 5
 11874  0CAB  1903               	skipnz
 11875  0CAC  2CA3               	goto	l15221
 11876  0CAD  3A0D               	xorlw	13	; case 8
 11877  0CAE  1903               	skipnz
 11878  0CAF  2CA3               	goto	l15221
 11879  0CB0  3A04               	xorlw	4	; case 12
 11880  0CB1  1903               	skipnz
 11881  0CB2  2CA3               	goto	l15221
 11882  0CB3  3A02               	xorlw	2	; case 14
 11883  0CB4  1903               	skipnz
 11884  0CB5  2CA1               	goto	l15219
 11885  0CB6  3A1C               	xorlw	28	; case 18
 11886  0CB7  1903               	skipnz
 11887  0CB8  2C9F               	goto	l15213
 11888  0CB9  3A0B               	xorlw	11	; case 25
 11889  0CBA  1903               	skipnz
 11890  0CBB  2C9D               	goto	l15211
 11891  0CBC  3A04               	xorlw	4	; case 29
 11892  0CBD  1903               	skipnz
 11893  0CBE  2C9F               	goto	l15213
 11894  0CBF  2CC0               	goto	l15231
 11895  0CC0                     l15231:	
 11896                           
 11897                           ;DK_LCD.c: 232: if(addr==12)
 11898  0CC0  0879               	movf	SendStringToDispBuf@addr,w
 11899  0CC1  3A0C               	xorlw	12
 11900  0CC2  1D03               	skipz
 11901  0CC3  2CEA               	goto	l15237
 11902                           
 11903                           ;DK_LCD.c: 233: {
 11904                           ;DK_LCD.c: 234: DispBuf[addr]=AsciiToDisplay(datBuf[0]);
 11905  0CC4  0879               	movf	SendStringToDispBuf@addr,w
 11906  0CC5  3EA0               	addlw	_DispBuf& (0+255)
 11907  0CC6  0086               	movwf	6
 11908  0CC7  0187               	clrf	7
 11909  0CC8  0874               	movf	SendStringToDispBuf@datBuf,w
 11910  0CC9  0084               	movwf	4
 11911  0CCA  0875               	movf	SendStringToDispBuf@datBuf+1,w
 11912  0CCB  0085               	movwf	5
 11913  0CCC  0800               	movf	0,w	;code access
 11914  0CCD  26D2  318A         	fcall	_AsciiToDisplay
 11915  0CCF  0081               	movwf	1
 11916                           
 11917                           ;DK_LCD.c: 235: DispBuf[addr-1]=AsciiToDisplay(datBuf[1]);
 11918  0CD0  0879               	movf	SendStringToDispBuf@addr,w
 11919  0CD1  3E9F               	addlw	(_DispBuf+-1)& (0+255)
 11920  0CD2  0086               	movwf	6
 11921  0CD3  0187               	clrf	7
 11922  0CD4  0875               	movf	SendStringToDispBuf@datBuf+1,w
 11923  0CD5  0020               	movlb	0	; select bank0
 11924  0CD6  00E1               	movwf	??_SendStringToDispBuf+1
 11925  0CD7  0874               	movf	SendStringToDispBuf@datBuf,w
 11926  0CD8  00E0               	movwf	??_SendStringToDispBuf
 11927  0CD9  3E01               	addlw	1
 11928  0CDA  27C2  318A         	fcall	PL39	;call to abstracted procedure
 11929  0CDC  26D2  318A         	fcall	_AsciiToDisplay
 11930  0CDE  0081               	movwf	1
 11931                           
 11932                           ;DK_LCD.c: 236: DispBuf[4]=AsciiToDisplay(datBuf[2]);
 11933  0CDF  0875               	movf	SendStringToDispBuf@datBuf+1,w
 11934  0CE0  00E1               	movwf	??_SendStringToDispBuf+1
 11935  0CE1  0874               	movf	SendStringToDispBuf@datBuf,w
 11936  0CE2  00E0               	movwf	??_SendStringToDispBuf
 11937  0CE3  3E02               	addlw	2
 11938  0CE4  27C2  318A         	fcall	PL39	;call to abstracted procedure
 11939  0CE6  26D2               	fcall	_AsciiToDisplay
 11940  0CE7  0021               	movlb	1	; select bank1
 11941  0CE8  00A4               	movwf	(_DispBuf^(0+128)+4)
 11942                           
 11943                           ;DK_LCD.c: 237: }
 11944  0CE9  0008               	return
 11945  0CEA                     l15237:	
 11946                           
 11947                           ;DK_LCD.c: 238: else if(addr==29 || addr==25 || addr==18 || addr==14)
 11948  0CEA  0879               	movf	SendStringToDispBuf@addr,w
 11949  0CEB  3A1D               	xorlw	29
 11950  0CEC  1903               	skipnz
 11951  0CED  2CFA               	goto	l15245
 11952  0CEE  0879               	movf	SendStringToDispBuf@addr,w
 11953  0CEF  3A19               	xorlw	25
 11954  0CF0  1903               	skipnz
 11955  0CF1  2CFA               	goto	l15245
 11956  0CF2  0879               	movf	SendStringToDispBuf@addr,w
 11957  0CF3  3A12               	xorlw	18
 11958  0CF4  1903               	skipnz
 11959  0CF5  2CFA               	goto	l15245
 11960  0CF6  0879               	movf	SendStringToDispBuf@addr,w
 11961  0CF7  3A0E               	xorlw	14
 11962  0CF8  1D03               	skipz
 11963  0CF9  2D1B               	goto	l15255
 11964  0CFA                     l15245:	
 11965                           
 11966                           ;DK_LCD.c: 239: {
 11967                           ;DK_LCD.c: 240: for(i=addr;i>addr-length;i--){DispBuf[i]=AsciiToDisplay(datBuf[j++]);}
 11968  0CFA  0879               	movf	SendStringToDispBuf@addr,w
 11969  0CFB  00F7               	movwf	SendStringToDispBuf@i
 11970  0CFC                     l15253:	
 11971  0CFC  0879               	movf	SendStringToDispBuf@addr,w
 11972  0CFD  0020               	movlb	0	; select bank0
 11973  0CFE  00E0               	movwf	??_SendStringToDispBuf
 11974  0CFF  01E1               	clrf	??_SendStringToDispBuf+1
 11975  0D00  0861               	movf	??_SendStringToDispBuf+1,w
 11976  0D01  00E3               	movwf	??_SendStringToDispBuf+3
 11977  0D02  0878               	movf	SendStringToDispBuf@length,w
 11978  0D03  0260               	subwf	??_SendStringToDispBuf,w
 11979  0D04  00E2               	movwf	??_SendStringToDispBuf+2
 11980  0D05  1C03               	skipc
 11981  0D06  03E3               	decf	??_SendStringToDispBuf+3,f
 11982  0D07  0863               	movf	??_SendStringToDispBuf+3,w
 11983  0D08  3A80               	xorlw	128
 11984  0D09  00E4               	movwf	??_SendStringToDispBuf+4
 11985  0D0A  3080               	movlw	128
 11986  0D0B  0264               	subwf	??_SendStringToDispBuf+4,w
 11987  0D0C  1D03               	skipz
 11988  0D0D  2D10               	goto	u9195
 11989  0D0E  0877               	movf	SendStringToDispBuf@i,w
 11990  0D0F  0262               	subwf	??_SendStringToDispBuf+2,w
 11991  0D10                     u9195:	
 11992  0D10  1803               	btfsc	3,0
 11993  0D11  0008               	return
 11994  0D12  0877               	movf	SendStringToDispBuf@i,w
 11995  0D13  2793  318A         	fcall	PL27	;call to abstracted procedure
 11996  0D15  26D2  318A         	fcall	_AsciiToDisplay
 11997  0D17  0081               	movwf	1
 11998  0D18  0AF6               	incf	SendStringToDispBuf@j,f
 11999  0D19  03F7               	decf	SendStringToDispBuf@i,f
 12000  0D1A  2CFC               	goto	l15253
 12001  0D1B                     l15255:	
 12002                           
 12003                           ;DK_LCD.c: 242: else if(length!=0)
 12004  0D1B  0878               	movf	SendStringToDispBuf@length,w
 12005  0D1C  1903               	btfsc	3,2
 12006  0D1D  0008               	return
 12007                           
 12008                           ;DK_LCD.c: 243: {
 12009                           ;DK_LCD.c: 244: for(i=addr;i<addr+length;i++){DispBuf[i]=AsciiToDisplay(datBuf[j++]);}
 12010  0D1E  0879               	movf	SendStringToDispBuf@addr,w
 12011  0D1F  00F7               	movwf	SendStringToDispBuf@i
 12012  0D20                     l15265:	
 12013  0D20  0879               	movf	SendStringToDispBuf@addr,w
 12014  0D21  0778               	addwf	SendStringToDispBuf@length,w
 12015  0D22  0020               	movlb	0	; select bank0
 12016  0D23  00E0               	movwf	??_SendStringToDispBuf
 12017  0D24  01E1               	clrf	??_SendStringToDispBuf+1
 12018  0D25  0DE1               	rlf	??_SendStringToDispBuf+1,f
 12019  0D26  0861               	movf	??_SendStringToDispBuf+1,w
 12020  0D27  3A80               	xorlw	128
 12021  0D28  3C80               	sublw	128
 12022  0D29  1D03               	skipz
 12023  0D2A  2D2D               	goto	u9215
 12024  0D2B  0860               	movf	??_SendStringToDispBuf,w
 12025  0D2C  0277               	subwf	SendStringToDispBuf@i,w
 12026  0D2D                     u9215:	
 12027  0D2D  1803               	btfsc	3,0
 12028  0D2E  0008               	return
 12029  0D2F  0877               	movf	SendStringToDispBuf@i,w
 12030  0D30  2793  318A         	fcall	PL27	;call to abstracted procedure
 12031  0D32  26D2  318A         	fcall	_AsciiToDisplay
 12032  0D34  0081               	movwf	1
 12033  0D35  0AF6               	incf	SendStringToDispBuf@j,f
 12034  0D36  0AF7               	incf	SendStringToDispBuf@i,f
 12035  0D37  2D20               	goto	l15265
 12036  0D38                     __end_of_SendStringToDispBuf:	
 12037  0D38                     __ptext2191:	
 12038 ;; =============== function _LCD_Display ends ============
 12039                           
 12040                           
 12041 ;; *************** function _SendNumberToDispBuf *****************
 12042 ;; Defined at:
 12043 ;;		line 256 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_LCD.c"
 12044 ;; Parameters:    Size  Location     Type
 12045 ;;  addr            1    wreg     unsigned char 
 12046 ;;  dat             2    4[BANK0 ] unsigned int 
 12047 ;; Auto vars:     Size  Location     Type
 12048 ;;  addr            1    8[BANK0 ] unsigned char 
 12049 ;;  temp            1    7[BANK0 ] unsigned char 
 12050 ;;  length          1    6[BANK0 ] unsigned char 
 12051 ;; Return value:  Size  Location     Type
 12052 ;;		None               void
 12053 ;; Registers used:
 12054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12055 ;; Tracked objects:
 12056 ;;		On entry : 1F/0
 12057 ;;		On exit  : 1F/0
 12058 ;;		Unchanged: FFFE0/0
 12059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12061 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12063 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12064 ;;Total ram usage:        5 bytes
 12065 ;; Hardware stack levels used:    1
 12066 ;; Hardware stack levels required when called:    3
 12067 ;; This function calls:
 12068 ;;		___lwmod
 12069 ;;		___lwdiv
 12070 ;;		_AsciiToDisplay
 12071 ;; This function is called by:
 12072 ;;		_DisplayRFParameter
 12073 ;; This function uses a non-reentrant model
 12074 ;;
 12075  0D38                     _SendNumberToDispBuf:	
 12076                           
 12077                           ; Regs used in _SendNumberToDispBuf: [wreg-status,0+pclath+cstack]
 12078                           ;SendNumberToDispBuf@addr stored from wreg
 12079  0D38  00E8               	movwf	SendNumberToDispBuf@addr
 12080                           
 12081                           ;DK_LCD.c: 257: u8 length=0;
 12082  0D39  01E6               	clrf	SendNumberToDispBuf@length
 12083                           
 12084                           ;DK_LCD.c: 260: switch(addr)
 12085  0D3A  2D42               	goto	l15285
 12086  0D3B                     l15269:	
 12087                           
 12088                           ;DK_LCD.c: 266: length=4;
 12089  0D3B  3004               	movlw	4
 12090  0D3C  2D40               	goto	L31
 12091  0D3D                     l15275:	
 12092                           ;DK_LCD.c: 267: break;
 12093                           
 12094                           
 12095                           ;DK_LCD.c: 275: length=2;
 12096  0D3D  3002               	movlw	2
 12097  0D3E  2D40               	goto	L31
 12098  0D3F                     l15277:	
 12099                           ;DK_LCD.c: 276: break;
 12100                           
 12101                           
 12102                           ;DK_LCD.c: 278: length=3;
 12103  0D3F  3003               	movlw	3
 12104  0D40                     L31:	
 12105  0D40  00E6               	movwf	SendNumberToDispBuf@length
 12106                           
 12107                           ;DK_LCD.c: 279: break;
 12108  0D41  2D59               	goto	l15287
 12109  0D42                     l15285:	
 12110  0D42  0868               	movf	SendNumberToDispBuf@addr,w
 12111                           
 12112                           ; Switch size 1, requested type "space"
 12113                           ; Number of cases is 7, Range of values is 0 to 29
 12114                           ; switch strategies available:
 12115                           ; Name         Instructions Cycles
 12116                           ; simple_byte           22    12 (average)
 12117                           ; direct_byte           66     6 (fixed)
 12118                           ; jumptable            260     6 (fixed)
 12119                           ; rangetable            34     4 (fixed)
 12120                           ; spacedrange           65     6 (fixed)
 12121                           ; locatedrange          30     3 (fixed)
 12122                           ;	Chosen strategy is simple_byte
 12123  0D43  3A00               	xorlw	0	; case 0
 12124  0D44  1903               	skipnz
 12125  0D45  2D3B               	goto	l15269
 12126  0D46  3A05               	xorlw	5	; case 5
 12127  0D47  1903               	skipnz
 12128  0D48  2D3F               	goto	l15277
 12129  0D49  3A0D               	xorlw	13	; case 8
 12130  0D4A  1903               	skipnz
 12131  0D4B  2D3F               	goto	l15277
 12132  0D4C  3A04               	xorlw	4	; case 12
 12133  0D4D  1903               	skipnz
 12134  0D4E  2D3F               	goto	l15277
 12135  0D4F  3A02               	xorlw	2	; case 14
 12136  0D50  1903               	skipnz
 12137  0D51  2D3D               	goto	l15275
 12138  0D52  3A1C               	xorlw	28	; case 18
 12139  0D53  1903               	skipnz
 12140  0D54  2D3B               	goto	l15269
 12141  0D55  3A0F               	xorlw	15	; case 29
 12142  0D56  1903               	skipnz
 12143  0D57  2D3B               	goto	l15269
 12144  0D58  2D59               	goto	l15287
 12145  0D59                     l15287:	
 12146                           
 12147                           ;DK_LCD.c: 287: if(length==4 && addr==0)
 12148  0D59  0866               	movf	SendNumberToDispBuf@length,w
 12149  0D5A  3A04               	xorlw	4
 12150  0D5B  1D03               	skipz
 12151  0D5C  2DBC               	goto	l15315
 12152  0D5D  08E8               	movf	SendNumberToDispBuf@addr,f
 12153  0D5E  1D03               	skipz
 12154  0D5F  2DBC               	goto	l15315
 12155                           
 12156                           ;DK_LCD.c: 288: {
 12157                           ;DK_LCD.c: 289: temp=(u8)(dat%10); DispBuf[addr+3]=LCDDigTable[temp];
 12158  0D60  300A               	movlw	10
 12159  0D61  27BB  318A         	fcall	PL35	;call to abstracted procedure
 12160  0D63  2738  318A         	fcall	___lwmod
 12161  0D65  0860               	movf	?___lwmod,w
 12162  0D66  00E7               	movwf	SendNumberToDispBuf@temp
 12163  0D67  0868               	movf	SendNumberToDispBuf@addr,w
 12164  0D68  3EA3               	addlw	(_DispBuf+3)& (0+255)
 12165  0D69  2758  318A         	fcall	PL2	;call to abstracted procedure
 12166                           
 12167                           ;DK_LCD.c: 290: temp=(u8)(dat/10%10); DispBuf[addr+2]=LCDDigTable[temp];
 12168  0D6B  300A               	movlw	10
 12169  0D6C  00E0               	movwf	?___lwmod
 12170  0D6D  01E1               	clrf	?___lwmod+1
 12171  0D6E  2781  318A         	fcall	PL16	;call to abstracted procedure
 12172  0D70  2713  318A         	fcall	___lwdiv
 12173  0D72  27DE  318A         	fcall	PL54	;call to abstracted procedure
 12174  0D74  2738  318A         	fcall	___lwmod
 12175  0D76  278E  318A         	fcall	PL22	;call to abstracted procedure
 12176  0D78  2758  318A         	fcall	PL2	;call to abstracted procedure
 12177                           
 12178                           ;DK_LCD.c: 291: temp=(u8)(dat/100%10); DispBuf[addr+1]=LCDDigTable[temp];
 12179  0D7A  27C9  318A         	fcall	PL41	;call to abstracted procedure
 12180  0D7C  2781  318A         	fcall	PL16	;call to abstracted procedure
 12181  0D7E  2713  318A         	fcall	___lwdiv
 12182  0D80  27DE  318A         	fcall	PL54	;call to abstracted procedure
 12183  0D82  2738  318A         	fcall	___lwmod
 12184  0D84  27B0  318A         	fcall	PL30	;call to abstracted procedure
 12185  0D86  2758  318A         	fcall	PL2	;call to abstracted procedure
 12186                           
 12187                           ;DK_LCD.c: 292: temp=(u8)(dat/1000); DispBuf[addr]=LCDDigTable[temp];
 12188  0D88  27D3  318A         	fcall	PL48	;call to abstracted procedure
 12189  0D8A  27CE  318A         	fcall	PL45	;call to abstracted procedure
 12190  0D8C  2713  318A         	fcall	___lwdiv
 12191  0D8E  2764  318A         	fcall	PL5	;call to abstracted procedure
 12192  0D90  2758  318A         	fcall	PL2	;call to abstracted procedure
 12193                           
 12194                           ;DK_LCD.c: 294: if(dat<1000){DispBuf[addr]=AsciiToDisplay(' ');}
 12195  0D92  3003               	movlw	3
 12196  0D93  0265               	subwf	SendNumberToDispBuf@dat+1,w
 12197  0D94  30E8               	movlw	232
 12198  0D95  1903               	skipnz
 12199  0D96  0264               	subwf	SendNumberToDispBuf@dat,w
 12200  0D97  1803               	skipnc
 12201  0D98  2DA0               	goto	l15307
 12202  0D99  0868               	movf	SendNumberToDispBuf@addr,w
 12203  0D9A  3EA0               	addlw	_DispBuf& (0+255)
 12204  0D9B  0086               	movwf	6
 12205  0D9C  3020               	movlw	32
 12206  0D9D  26D2  318A         	fcall	_AsciiToDisplay
 12207  0D9F  0081               	movwf	1
 12208  0DA0                     l15307:	
 12209                           
 12210                           ;DK_LCD.c: 295: if(dat<100){DispBuf[addr+1]=AsciiToDisplay(' ');}
 12211  0DA0  3000               	movlw	0
 12212  0DA1  0265               	subwf	SendNumberToDispBuf@dat+1,w
 12213  0DA2  3064               	movlw	100
 12214  0DA3  1903               	skipnz
 12215  0DA4  0264               	subwf	SendNumberToDispBuf@dat,w
 12216  0DA5  1803               	skipnc
 12217  0DA6  2DAD               	goto	l15311
 12218  0DA7  0868               	movf	SendNumberToDispBuf@addr,w
 12219  0DA8  27EE  318A         	fcall	PL64	;call to abstracted procedure
 12220  0DAA  26D2  318A         	fcall	_AsciiToDisplay
 12221  0DAC  0081               	movwf	1
 12222  0DAD                     l15311:	
 12223                           
 12224                           ;DK_LCD.c: 296: if(dat<10){DispBuf[addr+2]=AsciiToDisplay(' ');}
 12225  0DAD  3000               	movlw	0
 12226  0DAE  0265               	subwf	SendNumberToDispBuf@dat+1,w
 12227  0DAF  300A               	movlw	10
 12228  0DB0  1903               	skipnz
 12229  0DB1  0264               	subwf	SendNumberToDispBuf@dat,w
 12230  0DB2  1803               	skipnc
 12231  0DB3  0008               	return
 12232  0DB4  0868               	movf	SendNumberToDispBuf@addr,w
 12233  0DB5  3EA2               	addlw	(_DispBuf+2)& (0+255)
 12234  0DB6  0086               	movwf	6
 12235  0DB7  3020               	movlw	32
 12236  0DB8  0187               	clrf	7
 12237  0DB9  26D2               	fcall	_AsciiToDisplay
 12238  0DBA  0081               	movwf	1
 12239  0DBB  0008               	return
 12240  0DBC                     l15315:	
 12241                           
 12242                           ;DK_LCD.c: 298: else if(length==4)
 12243  0DBC  0866               	movf	SendNumberToDispBuf@length,w
 12244  0DBD  3A04               	xorlw	4
 12245  0DBE  1D03               	skipz
 12246  0DBF  2E1E               	goto	l15341
 12247                           
 12248                           ;DK_LCD.c: 299: {
 12249                           ;DK_LCD.c: 300: temp=(u8)(dat%10); DispBuf[addr-3]=LCDDigTable[temp];
 12250  0DC0  300A               	movlw	10
 12251  0DC1  27BB  318A         	fcall	PL35	;call to abstracted procedure
 12252  0DC3  2738  318A         	fcall	___lwmod
 12253  0DC5  0860               	movf	?___lwmod,w
 12254  0DC6  00E7               	movwf	SendNumberToDispBuf@temp
 12255  0DC7  0868               	movf	SendNumberToDispBuf@addr,w
 12256  0DC8  3E9D               	addlw	(_DispBuf+-3)& (0+255)
 12257  0DC9  2758  318A         	fcall	PL2	;call to abstracted procedure
 12258                           
 12259                           ;DK_LCD.c: 301: temp=(u8)(dat/10%10); DispBuf[addr-2]=LCDDigTable[temp];
 12260  0DCB  300A               	movlw	10
 12261  0DCC  00E0               	movwf	?___lwmod
 12262  0DCD  01E1               	clrf	?___lwmod+1
 12263  0DCE  2781  318A         	fcall	PL16	;call to abstracted procedure
 12264  0DD0  2713  318A         	fcall	___lwdiv
 12265  0DD2  27DE  318A         	fcall	PL54	;call to abstracted procedure
 12266  0DD4  2738  318A         	fcall	___lwmod
 12267  0DD6  0860               	movf	?___lwmod,w
 12268  0DD7  00E7               	movwf	SendNumberToDispBuf@temp
 12269  0DD8  0868               	movf	SendNumberToDispBuf@addr,w
 12270  0DD9  3E9E               	addlw	(_DispBuf+-2)& (0+255)
 12271  0DDA  2758  318A         	fcall	PL2	;call to abstracted procedure
 12272                           
 12273                           ;DK_LCD.c: 302: temp=(u8)(dat/100%10); DispBuf[addr-1]=LCDDigTable[temp];
 12274  0DDC  27C9  318A         	fcall	PL41	;call to abstracted procedure
 12275  0DDE  2781  318A         	fcall	PL16	;call to abstracted procedure
 12276  0DE0  2713  318A         	fcall	___lwdiv
 12277  0DE2  27DE  318A         	fcall	PL54	;call to abstracted procedure
 12278  0DE4  2738  318A         	fcall	___lwmod
 12279  0DE6  277C  318A         	fcall	PL13	;call to abstracted procedure
 12280  0DE8  2758  318A         	fcall	PL2	;call to abstracted procedure
 12281                           
 12282                           ;DK_LCD.c: 303: temp=(u8)(dat/1000); DispBuf[addr]=LCDDigTable[temp];
 12283  0DEA  27D3  318A         	fcall	PL48	;call to abstracted procedure
 12284  0DEC  27CE  318A         	fcall	PL45	;call to abstracted procedure
 12285  0DEE  2713  318A         	fcall	___lwdiv
 12286  0DF0  2764  318A         	fcall	PL5	;call to abstracted procedure
 12287  0DF2  2758  318A         	fcall	PL2	;call to abstracted procedure
 12288                           
 12289                           ;DK_LCD.c: 305: if(dat<1000){DispBuf[addr]=AsciiToDisplay(' ');}
 12290  0DF4  3003               	movlw	3
 12291  0DF5  0265               	subwf	SendNumberToDispBuf@dat+1,w
 12292  0DF6  30E8               	movlw	232
 12293  0DF7  1903               	skipnz
 12294  0DF8  0264               	subwf	SendNumberToDispBuf@dat,w
 12295  0DF9  1803               	skipnc
 12296  0DFA  2E02               	goto	l15333
 12297  0DFB  0868               	movf	SendNumberToDispBuf@addr,w
 12298  0DFC  3EA0               	addlw	_DispBuf& (0+255)
 12299  0DFD  0086               	movwf	6
 12300  0DFE  3020               	movlw	32
 12301  0DFF  26D2  318A         	fcall	_AsciiToDisplay
 12302  0E01  0081               	movwf	1
 12303  0E02                     l15333:	
 12304                           
 12305                           ;DK_LCD.c: 306: if(dat<100){DispBuf[addr-1]=AsciiToDisplay(' ');}
 12306  0E02  3000               	movlw	0
 12307  0E03  0265               	subwf	SendNumberToDispBuf@dat+1,w
 12308  0E04  3064               	movlw	100
 12309  0E05  1903               	skipnz
 12310  0E06  0264               	subwf	SendNumberToDispBuf@dat,w
 12311  0E07  1803               	skipnc
 12312  0E08  2E0F               	goto	l15337
 12313  0E09  0868               	movf	SendNumberToDispBuf@addr,w
 12314  0E0A  27F3  318A         	fcall	PL65	;call to abstracted procedure
 12315  0E0C  26D2  318A         	fcall	_AsciiToDisplay
 12316  0E0E  0081               	movwf	1
 12317  0E0F                     l15337:	
 12318                           
 12319                           ;DK_LCD.c: 307: if(dat<10){DispBuf[addr-2]=AsciiToDisplay(' ');}
 12320  0E0F  3000               	movlw	0
 12321  0E10  0265               	subwf	SendNumberToDispBuf@dat+1,w
 12322  0E11  300A               	movlw	10
 12323  0E12  1903               	skipnz
 12324  0E13  0264               	subwf	SendNumberToDispBuf@dat,w
 12325  0E14  1803               	skipnc
 12326  0E15  0008               	return
 12327  0E16  0868               	movf	SendNumberToDispBuf@addr,w
 12328  0E17  3E9E               	addlw	(_DispBuf+-2)& (0+255)
 12329  0E18  0086               	movwf	6
 12330  0E19  3020               	movlw	32
 12331  0E1A  0187               	clrf	7
 12332  0E1B  26D2               	fcall	_AsciiToDisplay
 12333  0E1C  0081               	movwf	1
 12334  0E1D  0008               	return
 12335  0E1E                     l15341:	
 12336                           
 12337                           ;DK_LCD.c: 309: else if(length==3 && addr==12)
 12338  0E1E  0866               	movf	SendNumberToDispBuf@length,w
 12339  0E1F  3A03               	xorlw	3
 12340  0E20  1D03               	skipz
 12341  0E21  2E6A               	goto	l15365
 12342  0E22  0868               	movf	SendNumberToDispBuf@addr,w
 12343  0E23  3A0C               	xorlw	12
 12344  0E24  1D03               	skipz
 12345  0E25  2E6A               	goto	l15365
 12346                           
 12347                           ;DK_LCD.c: 310: {
 12348                           ;DK_LCD.c: 311: temp=(u8)(dat%10); DispBuf[4]=LCDDigTable[temp];
 12349  0E26  300A               	movlw	10
 12350  0E27  27BB  318A         	fcall	PL35	;call to abstracted procedure
 12351  0E29  2738  318A         	fcall	___lwmod
 12352  0E2B  0860               	movf	?___lwmod,w
 12353  0E2C  00E7               	movwf	SendNumberToDispBuf@temp
 12354  0E2D  3E01               	addlw	low (_LCDDigTable| (0+32768))
 12355  0E2E  0084               	movwf	4
 12356  0E2F  3098               	movlw	high (_LCDDigTable| (0+32768))
 12357  0E30  1803               	skipnc
 12358  0E31  3E01               	addlw	1
 12359  0E32  0085               	movwf	5
 12360  0E33  0800               	movf	0,w	;code access
 12361  0E34  0021               	movlb	1	; select bank1
 12362  0E35  00A4               	movwf	(_DispBuf^(0+128)+4)
 12363                           
 12364                           ;DK_LCD.c: 312: temp=(u8)(dat/10%10); DispBuf[addr-1]=LCDDigTable[temp];
 12365  0E36  300A               	movlw	10
 12366  0E37  0020               	movlb	0	; select bank0
 12367  0E38  00E0               	movwf	?___lwmod
 12368  0E39  01E1               	clrf	?___lwmod+1
 12369  0E3A  2781  318A         	fcall	PL16	;call to abstracted procedure
 12370  0E3C  2713  318A         	fcall	___lwdiv
 12371  0E3E  27DE  318A         	fcall	PL54	;call to abstracted procedure
 12372  0E40  2738  318A         	fcall	___lwmod
 12373  0E42  277C  318A         	fcall	PL13	;call to abstracted procedure
 12374  0E44  2758  318A         	fcall	PL2	;call to abstracted procedure
 12375                           
 12376                           ;DK_LCD.c: 313: temp=(u8)(dat/100); DispBuf[addr]=LCDDigTable[temp];
 12377  0E46  3064               	movlw	100
 12378  0E47  2781  318A         	fcall	PL16	;call to abstracted procedure
 12379  0E49  2713  318A         	fcall	___lwdiv
 12380  0E4B  2764  318A         	fcall	PL5	;call to abstracted procedure
 12381  0E4D  2758  318A         	fcall	PL2	;call to abstracted procedure
 12382                           
 12383                           ;DK_LCD.c: 316: if(dat<100){DispBuf[addr]=AsciiToDisplay(' ');}
 12384  0E4F  3000               	movlw	0
 12385  0E50  0265               	subwf	SendNumberToDispBuf@dat+1,w
 12386  0E51  3064               	movlw	100
 12387  0E52  1903               	skipnz
 12388  0E53  0264               	subwf	SendNumberToDispBuf@dat,w
 12389  0E54  1803               	skipnc
 12390  0E55  2E5D               	goto	l15361
 12391  0E56  0868               	movf	SendNumberToDispBuf@addr,w
 12392  0E57  3EA0               	addlw	_DispBuf& (0+255)
 12393  0E58  0086               	movwf	6
 12394  0E59  3020               	movlw	32
 12395  0E5A  26D2  318A         	fcall	_AsciiToDisplay
 12396  0E5C  0081               	movwf	1
 12397  0E5D                     l15361:	
 12398                           
 12399                           ;DK_LCD.c: 317: if(dat<10){DispBuf[addr-1]=AsciiToDisplay(' ');}
 12400  0E5D  3000               	movlw	0
 12401  0E5E  0265               	subwf	SendNumberToDispBuf@dat+1,w
 12402  0E5F  300A               	movlw	10
 12403  0E60  1903               	skipnz
 12404  0E61  0264               	subwf	SendNumberToDispBuf@dat,w
 12405  0E62  1803               	skipnc
 12406  0E63  0008               	return
 12407  0E64  0868               	movf	SendNumberToDispBuf@addr,w
 12408  0E65  27F3  318A         	fcall	PL65	;call to abstracted procedure
 12409  0E67  26D2               	fcall	_AsciiToDisplay
 12410  0E68  0081               	movwf	1
 12411  0E69  0008               	return
 12412  0E6A                     l15365:	
 12413                           
 12414                           ;DK_LCD.c: 319: else if(length==3 && addr!=12)
 12415  0E6A  0866               	movf	SendNumberToDispBuf@length,w
 12416  0E6B  3A03               	xorlw	3
 12417  0E6C  1D03               	skipz
 12418  0E6D  2EAE               	goto	l15387
 12419  0E6E  0868               	movf	SendNumberToDispBuf@addr,w
 12420  0E6F  3A0C               	xorlw	12
 12421  0E70  1903               	skipnz
 12422  0E71  2EAE               	goto	l15387
 12423                           
 12424                           ;DK_LCD.c: 320: {
 12425                           ;DK_LCD.c: 321: temp=(u8)(dat%10); DispBuf[addr+2]=LCDDigTable[temp];
 12426  0E72  300A               	movlw	10
 12427  0E73  27BB  318A         	fcall	PL35	;call to abstracted procedure
 12428  0E75  2738  318A         	fcall	___lwmod
 12429  0E77  278E  318A         	fcall	PL22	;call to abstracted procedure
 12430  0E79  2758  318A         	fcall	PL2	;call to abstracted procedure
 12431                           
 12432                           ;DK_LCD.c: 322: temp=(u8)(dat/10%10); DispBuf[addr+1]=LCDDigTable[temp];
 12433  0E7B  300A               	movlw	10
 12434  0E7C  00E0               	movwf	?___lwmod
 12435  0E7D  01E1               	clrf	?___lwmod+1
 12436  0E7E  2781  318A         	fcall	PL16	;call to abstracted procedure
 12437  0E80  2713  318A         	fcall	___lwdiv
 12438  0E82  27DE  318A         	fcall	PL54	;call to abstracted procedure
 12439  0E84  2738  318A         	fcall	___lwmod
 12440  0E86  27B0  318A         	fcall	PL30	;call to abstracted procedure
 12441  0E88  2758  318A         	fcall	PL2	;call to abstracted procedure
 12442                           
 12443                           ;DK_LCD.c: 323: temp=(u8)(dat/100); DispBuf[addr]=LCDDigTable[temp];
 12444  0E8A  3064               	movlw	100
 12445  0E8B  2781  318A         	fcall	PL16	;call to abstracted procedure
 12446  0E8D  2713  318A         	fcall	___lwdiv
 12447  0E8F  2764  318A         	fcall	PL5	;call to abstracted procedure
 12448  0E91  2758  318A         	fcall	PL2	;call to abstracted procedure
 12449                           
 12450                           ;DK_LCD.c: 326: if(dat<100){DispBuf[addr]=AsciiToDisplay(' ');}
 12451  0E93  3000               	movlw	0
 12452  0E94  0265               	subwf	SendNumberToDispBuf@dat+1,w
 12453  0E95  3064               	movlw	100
 12454  0E96  1903               	skipnz
 12455  0E97  0264               	subwf	SendNumberToDispBuf@dat,w
 12456  0E98  1803               	skipnc
 12457  0E99  2EA1               	goto	l15383
 12458  0E9A  0868               	movf	SendNumberToDispBuf@addr,w
 12459  0E9B  3EA0               	addlw	_DispBuf& (0+255)
 12460  0E9C  0086               	movwf	6
 12461  0E9D  3020               	movlw	32
 12462  0E9E  26D2  318A         	fcall	_AsciiToDisplay
 12463  0EA0  0081               	movwf	1
 12464  0EA1                     l15383:	
 12465                           
 12466                           ;DK_LCD.c: 327: if(dat<10){DispBuf[addr+1]=AsciiToDisplay(' ');}
 12467  0EA1  3000               	movlw	0
 12468  0EA2  0265               	subwf	SendNumberToDispBuf@dat+1,w
 12469  0EA3  300A               	movlw	10
 12470  0EA4  1903               	skipnz
 12471  0EA5  0264               	subwf	SendNumberToDispBuf@dat,w
 12472  0EA6  1803               	skipnc
 12473  0EA7  0008               	return
 12474  0EA8  0868               	movf	SendNumberToDispBuf@addr,w
 12475  0EA9  27EE  318A         	fcall	PL64	;call to abstracted procedure
 12476  0EAB  26D2               	fcall	_AsciiToDisplay
 12477  0EAC  0081               	movwf	1
 12478  0EAD  0008               	return
 12479  0EAE                     l15387:	
 12480                           
 12481                           ;DK_LCD.c: 329: else if(length==2)
 12482  0EAE  0866               	movf	SendNumberToDispBuf@length,w
 12483  0EAF  3A02               	xorlw	2
 12484  0EB0  1D03               	skipz
 12485  0EB1  0008               	return
 12486                           
 12487                           ;DK_LCD.c: 330: {
 12488                           ;DK_LCD.c: 331: temp=(u8)(dat%10); DispBuf[addr-1]=LCDDigTable[temp];
 12489  0EB2  300A               	movlw	10
 12490  0EB3  27BB  318A         	fcall	PL35	;call to abstracted procedure
 12491  0EB5  2738  318A         	fcall	___lwmod
 12492  0EB7  277C  318A         	fcall	PL13	;call to abstracted procedure
 12493  0EB9  2758  318A         	fcall	PL2	;call to abstracted procedure
 12494                           
 12495                           ;DK_LCD.c: 332: temp=(u8)(dat/10); DispBuf[addr]=LCDDigTable[temp];
 12496  0EBB  300A               	movlw	10
 12497  0EBC  2781  318A         	fcall	PL16	;call to abstracted procedure
 12498  0EBE  2713  318A         	fcall	___lwdiv
 12499  0EC0  2764  318A         	fcall	PL5	;call to abstracted procedure
 12500  0EC2  2758  318A         	fcall	PL2	;call to abstracted procedure
 12501                           
 12502                           ;DK_LCD.c: 335: if(dat<10){DispBuf[addr]=AsciiToDisplay(' ');}
 12503  0EC4  3000               	movlw	0
 12504  0EC5  0265               	subwf	SendNumberToDispBuf@dat+1,w
 12505  0EC6  300A               	movlw	10
 12506  0EC7  1903               	skipnz
 12507  0EC8  0264               	subwf	SendNumberToDispBuf@dat,w
 12508  0EC9  1803               	skipnc
 12509  0ECA  0008               	return
 12510  0ECB  0868               	movf	SendNumberToDispBuf@addr,w
 12511  0ECC  3EA0               	addlw	_DispBuf& (0+255)
 12512  0ECD  0086               	movwf	6
 12513  0ECE  3020               	movlw	32
 12514  0ECF  26D2               	fcall	_AsciiToDisplay
 12515  0ED0  0081               	movwf	1
 12516  0ED1  0008               	return
 12517  0ED2                     __end_of_SendNumberToDispBuf:	
 12518  0ED2                     __ptext2217:	
 12519 ;; =============== function _SendSegDataToDispBuf ends ============
 12520                           
 12521                           
 12522 ;; *************** function _AsciiToDisplay *****************
 12523 ;; Defined at:
 12524 ;;		line 182 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_LCD.c"
 12525 ;; Parameters:    Size  Location     Type
 12526 ;;  Letter          1    wreg     unsigned char 
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;  Letter          1    3[COMMON] unsigned char 
 12529 ;;  DispData        1    2[COMMON] unsigned char 
 12530 ;; Return value:  Size  Location     Type
 12531 ;;                  1    wreg      unsigned char 
 12532 ;; Registers used:
 12533 ;;		wreg, fsr0l, fsr0h, pclath
 12534 ;; Tracked objects:
 12535 ;;		On entry : 1C/0
 12536 ;;		On exit  : 1C/0
 12537 ;;		Unchanged: FFFE3/0
 12538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;Total ram usage:        2 bytes
 12544 ;; Hardware stack levels used:    1
 12545 ;; Hardware stack levels required when called:    2
 12546 ;; This function calls:
 12547 ;;		Nothing
 12548 ;; This function is called by:
 12549 ;;		_SendStringToDispBuf
 12550 ;;		_SendNumberToDispBuf
 12551 ;; This function uses a non-reentrant model
 12552 ;;
 12553  0ED2                     _AsciiToDisplay:	
 12554                           
 12555                           ; Regs used in _AsciiToDisplay: [wreg-fsr0h+pclath]
 12556                           ;AsciiToDisplay@Letter stored from wreg
 12557  0ED2  00F3               	movwf	AsciiToDisplay@Letter
 12558                           
 12559                           ;DK_LCD.c: 183: u8 DispData;
 12560                           ;DK_LCD.c: 184: if(Letter>=0x30 && Letter<=0x39){DispData=LCDDigTable[Letter-0x30];}
 12561  0ED3  3030               	movlw	48
 12562  0ED4  0273               	subwf	AsciiToDisplay@Letter,w
 12563  0ED5  1C03               	skipc
 12564  0ED6  2EE1               	goto	l14475
 12565  0ED7  303A               	movlw	58
 12566  0ED8  0273               	subwf	AsciiToDisplay@Letter,w
 12567  0ED9  1803               	skipnc
 12568  0EDA  2EE1               	goto	l14475
 12569  0EDB  0873               	movf	AsciiToDisplay@Letter,w
 12570  0EDC  3ED1               	addlw	low ((_LCDDigTable| (0+32768)+65488))
 12571  0EDD  0084               	movwf	4
 12572  0EDE  3097               	movlw	high ((_LCDDigTable| (0+32768)+65488))
 12573  0EDF  27D8  318A         	fcall	PL52	;call to abstracted procedure
 12574  0EE1                     l14475:	
 12575                           
 12576                           ;DK_LCD.c: 185: if(Letter>=0x41 && Letter<=0x5A){DispData=LCDDigTable[Letter-0x41+10];}
 12577  0EE1  3041               	movlw	65
 12578  0EE2  0273               	subwf	AsciiToDisplay@Letter,w
 12579  0EE3  1C03               	skipc
 12580  0EE4  2EEF               	goto	l14481
 12581  0EE5  305B               	movlw	91
 12582  0EE6  0273               	subwf	AsciiToDisplay@Letter,w
 12583  0EE7  1803               	skipnc
 12584  0EE8  2EEF               	goto	l14481
 12585  0EE9  0873               	movf	AsciiToDisplay@Letter,w
 12586  0EEA  3ECA               	addlw	low ((_LCDDigTable| (0+32768)+65481))
 12587  0EEB  0084               	movwf	4
 12588  0EEC  3097               	movlw	high ((_LCDDigTable| (0+32768)+65481))
 12589  0EED  27D8  318A         	fcall	PL52	;call to abstracted procedure
 12590  0EEF                     l14481:	
 12591                           
 12592                           ;DK_LCD.c: 186: if(Letter>=0x61 && Letter<=0x7A){DispData=LCDDigTable[Letter-0x61+10];}
 12593  0EEF  3061               	movlw	97
 12594  0EF0  0273               	subwf	AsciiToDisplay@Letter,w
 12595  0EF1  1C03               	skipc
 12596  0EF2  2EFD               	goto	l14487
 12597  0EF3  307B               	movlw	123
 12598  0EF4  0273               	subwf	AsciiToDisplay@Letter,w
 12599  0EF5  0873               	movf	AsciiToDisplay@Letter,w
 12600  0EF6  1803               	skipnc
 12601  0EF7  2EFE               	goto	L38
 12602  0EF8  3EAA               	addlw	low ((_LCDDigTable| (0+32768)+65449))
 12603  0EF9  0084               	movwf	4
 12604  0EFA  3097               	movlw	high ((_LCDDigTable| (0+32768)+65449))
 12605  0EFB  27D8  318A         	fcall	PL52	;call to abstracted procedure
 12606  0EFD                     l14487:	
 12607                           
 12608                           ;DK_LCD.c: 187: if(Letter==0x20){DispData=LCDDigTable[36];}
 12609  0EFD  0873               	movf	AsciiToDisplay@Letter,w
 12610  0EFE                     L38:	
 12611  0EFE  3A20               	xorlw	32
 12612  0EFF  1D03               	skipz
 12613  0F00  2F07               	goto	l14491
 12614  0F01  3025               	movlw	low ((_LCDDigTable| (0+32768)+36))
 12615  0F02  0084               	movwf	4
 12616  0F03  3098               	movlw	high ((_LCDDigTable| (0+32768)+36))
 12617  0F04  0085               	movwf	5
 12618  0F05  0800               	movf	0,w	;code access
 12619  0F06  00F2               	movwf	AsciiToDisplay@DispData
 12620  0F07                     l14491:	
 12621                           
 12622                           ;DK_LCD.c: 188: if(Letter==0x2D){DispData=LCDDigTable[37];}
 12623  0F07  0873               	movf	AsciiToDisplay@Letter,w
 12624  0F08  3A2D               	xorlw	45
 12625  0F09  1D03               	skipz
 12626  0F0A  2F11               	goto	l14495
 12627  0F0B  3026               	movlw	low ((_LCDDigTable| (0+32768)+37))
 12628  0F0C  0084               	movwf	4
 12629  0F0D  3098               	movlw	high ((_LCDDigTable| (0+32768)+37))
 12630  0F0E  0085               	movwf	5
 12631  0F0F  0800               	movf	0,w	;code access
 12632  0F10  00F2               	movwf	AsciiToDisplay@DispData
 12633  0F11                     l14495:	
 12634                           
 12635                           ;DK_LCD.c: 190: return DispData;
 12636  0F11  0872               	movf	AsciiToDisplay@DispData,w
 12637  0F12  0008               	return
 12638  0F13                     __end_of_AsciiToDisplay:	
 12639  0F13                     __ptext2197:	
 12640 ;; =============== function ___lwmod ends ============
 12641                           
 12642                           
 12643 ;; *************** function ___lwdiv *****************
 12644 ;; Defined at:
 12645 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
 12646 ;; Parameters:    Size  Location     Type
 12647 ;;  divisor         2    2[COMMON] unsigned int 
 12648 ;;  dividend        2    4[COMMON] unsigned int 
 12649 ;; Auto vars:     Size  Location     Type
 12650 ;;  quotient        2    7[COMMON] unsigned int 
 12651 ;;  counter         1    6[COMMON] unsigned char 
 12652 ;; Return value:  Size  Location     Type
 12653 ;;                  2    2[COMMON] unsigned int 
 12654 ;; Registers used:
 12655 ;;		wreg, status,2, status,0
 12656 ;; Tracked objects:
 12657 ;;		On entry : 1F/0
 12658 ;;		On exit  : 1F/0
 12659 ;;		Unchanged: FFFE0/0
 12660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12664 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12665 ;;Total ram usage:        7 bytes
 12666 ;; Hardware stack levels used:    1
 12667 ;; Hardware stack levels required when called:    2
 12668 ;; This function calls:
 12669 ;;		Nothing
 12670 ;; This function is called by:
 12671 ;;		_SendNumberToDispBuf
 12672 ;;		_DisplayRFParameter
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675  0F13                     ___lwdiv:	
 12676                           
 12677                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12678  0F13  01F7               	clrf	___lwdiv@quotient
 12679  0F14  01F8               	clrf	___lwdiv@quotient+1
 12680  0F15  0873               	movf	___lwdiv@divisor+1,w
 12681  0F16  0472               	iorwf	___lwdiv@divisor,w
 12682  0F17  1903               	skipnz
 12683  0F18  2F33               	goto	l15117
 12684  0F19  01F6               	clrf	___lwdiv@counter
 12685  0F1A                     L36:	
 12686  0F1A  0AF6               	incf	___lwdiv@counter,f
 12687  0F1B  1BF3               	btfsc	___lwdiv@divisor+1,7
 12688  0F1C  2F20               	goto	l15105
 12689  0F1D  35F2               	lslf	___lwdiv@divisor,f
 12690  0F1E  0DF3               	rlf	___lwdiv@divisor+1,f
 12691  0F1F  2F1A               	goto	L36
 12692  0F20                     l15105:	
 12693  0F20  35F7               	lslf	___lwdiv@quotient,f
 12694  0F21  0DF8               	rlf	___lwdiv@quotient+1,f
 12695  0F22  0873               	movf	___lwdiv@divisor+1,w
 12696  0F23  0275               	subwf	___lwdiv@dividend+1,w
 12697  0F24  1D03               	skipz
 12698  0F25  2F28               	goto	u9055
 12699  0F26  0872               	movf	___lwdiv@divisor,w
 12700  0F27  0274               	subwf	___lwdiv@dividend,w
 12701  0F28                     u9055:	
 12702  0F28  1C03               	skipc
 12703  0F29  2F2F               	goto	l15113
 12704  0F2A  0872               	movf	___lwdiv@divisor,w
 12705  0F2B  02F4               	subwf	___lwdiv@dividend,f
 12706  0F2C  0873               	movf	___lwdiv@divisor+1,w
 12707  0F2D  3BF5               	subwfb	___lwdiv@dividend+1,f
 12708  0F2E  1477               	bsf	___lwdiv@quotient,0
 12709  0F2F                     l15113:	
 12710  0F2F  36F3               	lsrf	___lwdiv@divisor+1,f
 12711  0F30  0CF2               	rrf	___lwdiv@divisor,f
 12712  0F31  0BF6               	decfsz	___lwdiv@counter,f
 12713  0F32  2F20               	goto	l15105
 12714  0F33                     l15117:	
 12715  0F33  0878               	movf	___lwdiv@quotient+1,w
 12716  0F34  00F3               	movwf	?___lwdiv+1
 12717  0F35  0877               	movf	___lwdiv@quotient,w
 12718  0F36  00F2               	movwf	?___lwdiv
 12719  0F37  0008               	return
 12720  0F38                     __end_of___lwdiv:	
 12721  0F38                     __ptext2196:	
 12722 ;; =============== function _FlashErase ends ============
 12723                           
 12724                           
 12725 ;; *************** function ___lwmod *****************
 12726 ;; Defined at:
 12727 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
 12728 ;; Parameters:    Size  Location     Type
 12729 ;;  divisor         2    0[BANK0 ] unsigned int 
 12730 ;;  dividend        2    2[BANK0 ] unsigned int 
 12731 ;; Auto vars:     Size  Location     Type
 12732 ;;  counter         1    9[COMMON] unsigned char 
 12733 ;; Return value:  Size  Location     Type
 12734 ;;                  2    0[BANK0 ] unsigned int 
 12735 ;; Registers used:
 12736 ;;		wreg, status,2, status,0
 12737 ;; Tracked objects:
 12738 ;;		On entry : 1F/0
 12739 ;;		On exit  : 1F/0
 12740 ;;		Unchanged: FFFE0/0
 12741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12742 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12745 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;Total ram usage:        5 bytes
 12747 ;; Hardware stack levels used:    1
 12748 ;; Hardware stack levels required when called:    2
 12749 ;; This function calls:
 12750 ;;		Nothing
 12751 ;; This function is called by:
 12752 ;;		_SendNumberToDispBuf
 12753 ;; This function uses a non-reentrant model
 12754 ;;
 12755  0F38                     ___lwmod:	
 12756                           
 12757                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12758  0F38  0861               	movf	___lwmod@divisor+1,w
 12759  0F39  0460               	iorwf	___lwmod@divisor,w
 12760  0F3A  1903               	skipnz
 12761  0F3B  2F53               	goto	l15137
 12762  0F3C  01F9               	clrf	___lwmod@counter
 12763  0F3D                     L35:	
 12764  0F3D  0AF9               	incf	___lwmod@counter,f
 12765  0F3E  1BE1               	btfsc	___lwmod@divisor+1,7
 12766  0F3F  2F43               	goto	l15129
 12767  0F40  35E0               	lslf	___lwmod@divisor,f
 12768  0F41  0DE1               	rlf	___lwmod@divisor+1,f
 12769  0F42  2F3D               	goto	L35
 12770  0F43                     l15129:	
 12771  0F43  0861               	movf	___lwmod@divisor+1,w
 12772  0F44  0263               	subwf	___lwmod@dividend+1,w
 12773  0F45  1D03               	skipz
 12774  0F46  2F49               	goto	u9095
 12775  0F47  0860               	movf	___lwmod@divisor,w
 12776  0F48  0262               	subwf	___lwmod@dividend,w
 12777  0F49                     u9095:	
 12778  0F49  1C03               	skipc
 12779  0F4A  2F4F               	goto	l15133
 12780  0F4B  0860               	movf	___lwmod@divisor,w
 12781  0F4C  02E2               	subwf	___lwmod@dividend,f
 12782  0F4D  0861               	movf	___lwmod@divisor+1,w
 12783  0F4E  3BE3               	subwfb	___lwmod@dividend+1,f
 12784  0F4F                     l15133:	
 12785  0F4F  36E1               	lsrf	___lwmod@divisor+1,f
 12786  0F50  0CE0               	rrf	___lwmod@divisor,f
 12787  0F51  0BF9               	decfsz	___lwmod@counter,f
 12788  0F52  2F43               	goto	l15129
 12789  0F53                     l15137:	
 12790  0F53  0863               	movf	___lwmod@dividend+1,w
 12791  0F54  00E1               	movwf	?___lwmod+1
 12792  0F55  0862               	movf	___lwmod@dividend,w
 12793  0F56  00E0               	movwf	?___lwmod
 12794  0F57  0008               	return
 12795  0F58                     __end_of___lwmod:	
 12796  0F58                     PL2:	
 12797  0F58  0086               	movwf	6
 12798  0F59  0187               	clrf	7
 12799  0F5A  0867               	movf	SendNumberToDispBuf@temp,w
 12800  0F5B  3E01               	addlw	low (_LCDDigTable| (0+32768))
 12801  0F5C  0084               	movwf	4
 12802  0F5D  3098               	movlw	high (_LCDDigTable| (0+32768))
 12803  0F5E  1803               	skipnc
 12804  0F5F  3E01               	addlw	1
 12805  0F60  0085               	movwf	5
 12806  0F61  0800               	movf	0,w	;code access
 12807  0F62  0081               	movwf	1
 12808  0F63  0008               	return
 12809  0F64                     PL5:	
 12810  0F64  0872               	movf	?___lwdiv,w
 12811  0F65  00E7               	movwf	SendNumberToDispBuf@temp
 12812  0F66  0868               	movf	SendNumberToDispBuf@addr,w
 12813  0F67  3EA0               	addlw	_DispBuf& (0+255)
 12814  0F68  0008               	return
 12815  0F69                     PL7:	
 12816  0F69  0769               	addwf	??_DisplayRFParameter,w
 12817  0F6A  0084               	movwf	4
 12818  0F6B  086A               	movf	??_DisplayRFParameter+1,w
 12819  0F6C  1803               	skipnc
 12820  0F6D  0A6A               	incf	??_DisplayRFParameter+1,w
 12821  0F6E  0085               	movwf	5
 12822  0F6F  0800               	movf	0,w	;code access
 12823  0F70  0008               	return
 12824  0F71                     PL8:	
 12825  0F71  0084               	movwf	4
 12826  0F72  086A               	movf	??_DisplayRFParameter+1,w
 12827  0F73  1803               	skipnc
 12828  0F74  0A6A               	incf	??_DisplayRFParameter+1,w
 12829  0F75  0085               	movwf	5
 12830  0F76  0008               	return
 12831  0F77                     PL10:	
 12832  0F77  00EA               	movwf	??_DisplayRFParameter+1
 12833  0F78  082C               	movf	_RF_ModemBuf,w
 12834  0F79  00E9               	movwf	??_DisplayRFParameter
 12835  0F7A  087A               	movf	_gb_Modem_Addr,w
 12836  0F7B  0008               	return
 12837  0F7C                     PL13:	
 12838  0F7C  0860               	movf	?___lwmod,w
 12839  0F7D  00E7               	movwf	SendNumberToDispBuf@temp
 12840  0F7E  0868               	movf	SendNumberToDispBuf@addr,w
 12841  0F7F  3E9F               	addlw	(_DispBuf+-1)& (0+255)
 12842  0F80  0008               	return
 12843  0F81                     PL16:	
 12844  0F81  00F2               	movwf	?___lwdiv
 12845  0F82  01F3               	clrf	?___lwdiv+1
 12846  0F83  0865               	movf	SendNumberToDispBuf@dat+1,w
 12847  0F84  00F5               	movwf	?___lwdiv+3
 12848  0F85  0864               	movf	SendNumberToDispBuf@dat,w
 12849  0F86  00F4               	movwf	?___lwdiv+2
 12850  0F87  0008               	return
 12851  0F88                     PL20:	
 12852  0F88  00EA               	movwf	??_DisplayRFParameter+1
 12853  0F89  082A               	movf	_RF_LoRaBandWidthBuf,w
 12854  0F8A  00E9               	movwf	??_DisplayRFParameter
 12855  0F8B  3544               	lslf	_gb_BandBuf_Addr,w
 12856  0F8C  0769               	addwf	??_DisplayRFParameter,w
 12857  0F8D  0008               	return
 12858  0F8E                     PL22:	
 12859  0F8E  0860               	movf	?___lwmod,w
 12860  0F8F  00E7               	movwf	SendNumberToDispBuf@temp
 12861  0F90  0868               	movf	SendNumberToDispBuf@addr,w
 12862  0F91  3EA2               	addlw	(_DispBuf+2)& (0+255)
 12863  0F92  0008               	return
 12864  0F93                     PL27:	
 12865  0F93  3EA0               	addlw	_DispBuf& (0+255)
 12866  0F94  0086               	movwf	6
 12867  0F95  0187               	clrf	7
 12868  0F96  0875               	movf	SendStringToDispBuf@datBuf+1,w
 12869  0F97  0020               	movlb	0	; select bank0
 12870  0F98  00E1               	movwf	??_SendStringToDispBuf+1
 12871  0F99  0874               	movf	SendStringToDispBuf@datBuf,w
 12872  0F9A  00E0               	movwf	??_SendStringToDispBuf
 12873  0F9B  0876               	movf	SendStringToDispBuf@j,w
 12874  0F9C  0760               	addwf	??_SendStringToDispBuf,w
 12875  0F9D  0084               	movwf	4
 12876  0F9E  0861               	movf	??_SendStringToDispBuf+1,w
 12877  0F9F  1803               	skipnc
 12878  0FA0  0A61               	incf	??_SendStringToDispBuf+1,w
 12879  0FA1  0085               	movwf	5
 12880  0FA2  0800               	movf	0,w	;code access
 12881  0FA3  0008               	return
 12882  0FA4                     PL28:	
 12883  0FA4  0831               	movf	_RF_PowerBuf+1,w
 12884  0FA5  00EA               	movwf	??_DisplayRFParameter+1
 12885  0FA6  0830               	movf	_RF_PowerBuf,w
 12886  0FA7  00E9               	movwf	??_DisplayRFParameter
 12887  0FA8  0856               	movf	_gb_PowerBuf_Addr,w
 12888  0FA9  0008               	return
 12889  0FAA                     PL29:	
 12890  0FAA  0825               	movf	_RF_BandBuf+1,w
 12891  0FAB  00EA               	movwf	??_DisplayRFParameter+1
 12892  0FAC  0824               	movf	_RF_BandBuf,w
 12893  0FAD  00E9               	movwf	??_DisplayRFParameter
 12894  0FAE  0844               	movf	_gb_BandBuf_Addr,w
 12895  0FAF  0008               	return
 12896  0FB0                     PL30:	
 12897  0FB0  0860               	movf	?___lwmod,w
 12898  0FB1  00E7               	movwf	SendNumberToDispBuf@temp
 12899  0FB2  0868               	movf	SendNumberToDispBuf@addr,w
 12900  0FB3  3EA1               	addlw	(_DispBuf+1)& (0+255)
 12901  0FB4  0008               	return
 12902  0FB5                     PL31:	
 12903  0FB5  0827               	movf	_RF_FdevBuf+1,w
 12904  0FB6  00EA               	movwf	??_DisplayRFParameter+1
 12905  0FB7  0826               	movf	_RF_FdevBuf,w
 12906  0FB8  00E9               	movwf	??_DisplayRFParameter
 12907  0FB9  084D               	movf	_gb_FdevBuf_Addr,w
 12908  0FBA  0008               	return
 12909  0FBB                     PL35:	
 12910  0FBB  00E0               	movwf	?___lwmod
 12911  0FBC  01E1               	clrf	?___lwmod+1
 12912  0FBD  0865               	movf	SendNumberToDispBuf@dat+1,w
 12913  0FBE  00E3               	movwf	?___lwmod+3
 12914  0FBF  0864               	movf	SendNumberToDispBuf@dat,w
 12915  0FC0  00E2               	movwf	?___lwmod+2
 12916  0FC1  0008               	return
 12917  0FC2                     PL39:	
 12918  0FC2  0084               	movwf	4
 12919  0FC3  0861               	movf	??_SendStringToDispBuf+1,w
 12920  0FC4  1803               	skipnc
 12921  0FC5  0A61               	incf	??_SendStringToDispBuf+1,w
 12922  0FC6  0085               	movwf	5
 12923  0FC7  0800               	movf	0,w	;code access
 12924  0FC8  0008               	return
 12925  0FC9                     PL41:	
 12926  0FC9  300A               	movlw	10
 12927  0FCA  00E0               	movwf	?___lwmod
 12928  0FCB  3064               	movlw	100
 12929  0FCC  01E1               	clrf	?___lwmod+1
 12930  0FCD  0008               	return
 12931  0FCE                     PL45:	
 12932  0FCE  0865               	movf	SendNumberToDispBuf@dat+1,w
 12933  0FCF  00F5               	movwf	?___lwdiv+3
 12934  0FD0  0864               	movf	SendNumberToDispBuf@dat,w
 12935  0FD1  00F4               	movwf	?___lwdiv+2
 12936  0FD2  0008               	return
 12937  0FD3                     PL48:	
 12938  0FD3  30E8               	movlw	232
 12939  0FD4  00F2               	movwf	?___lwdiv
 12940  0FD5  3003               	movlw	3
 12941  0FD6  00F3               	movwf	?___lwdiv+1
 12942  0FD7  0008               	return
 12943  0FD8                     PL52:	
 12944  0FD8  1803               	skipnc
 12945  0FD9  3E01               	addlw	1
 12946  0FDA  0085               	movwf	5
 12947  0FDB  0800               	movf	0,w	;code access
 12948  0FDC  00F2               	movwf	AsciiToDisplay@DispData
 12949  0FDD  0008               	return
 12950  0FDE                     PL54:	
 12951  0FDE  0873               	movf	?___lwdiv+1,w
 12952  0FDF  00E3               	movwf	?___lwmod+3
 12953  0FE0  0872               	movf	?___lwdiv,w
 12954  0FE1  00E2               	movwf	?___lwmod+2
 12955  0FE2  0008               	return
 12956  0FE3                     PL55:	
 12957  0FE3  1521               	bsf	__DispSeg+1,2
 12958  0FE4  082F               	movf	_RF_ModuleName+1,w
 12959  0FE5  00F5               	movwf	?_SendStringToDispBuf+1
 12960  0FE6  082E               	movf	_RF_ModuleName,w
 12961  0FE7  00F4               	movwf	?_SendStringToDispBuf
 12962  0FE8  3412               	retlw	18
 12963  0FE9                     PL59:	
 12964  0FE9  083D               	movf	_gw_ReceiveDataCount+1,w
 12965  0FEA  00E5               	movwf	?_SendNumberToDispBuf+1
 12966  0FEB  083C               	movf	_gw_ReceiveDataCount,w
 12967  0FEC  00E4               	movwf	?_SendNumberToDispBuf
 12968  0FED  3400               	retlw	0
 12969  0FEE                     PL64:	
 12970  0FEE  3EA1               	addlw	(_DispBuf+1)& (0+255)
 12971  0FEF  0086               	movwf	6
 12972  0FF0  3020               	movlw	32
 12973  0FF1  0187               	clrf	7
 12974  0FF2  0008               	return
 12975  0FF3                     PL65:	
 12976  0FF3  3E9F               	addlw	(_DispBuf+-1)& (0+255)
 12977  0FF4  0086               	movwf	6
 12978  0FF5  3020               	movlw	32
 12979  0FF6  0187               	clrf	7
 12980  0FF7  0008               	return
 12981  0FF8                     PL68:	
 12982  0FF8  00E5               	movwf	?_SendNumberToDispBuf+1
 12983  0FF9  083E               	movf	_gw_SendDataCount,w
 12984  0FFA  00E4               	movwf	?_SendNumberToDispBuf
 12985  0FFB  341D               	retlw	29
 12986  0FFC                     PL69:	
 12987  0FFC  00F4               	movwf	?_SendStringToDispBuf
 12988  0FFD  3099               	movlw	high ((STR_20+1)| (0+32768))
 12989  0FFE  00F5               	movwf	?_SendStringToDispBuf+1
 12990  0FFF  3405               	retlw	5
 12991                           
 12992                           	psect	text2215
 12993  12F0                     __ptext2215:	
 12994 ;; =============== function _LCD_DisplayAll ends ============
 12995                           
 12996                           
 12997 ;; *************** function _FlashDisplay *****************
 12998 ;; Defined at:
 12999 ;;		line 383 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_LCD.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;		None
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;  i               1    3[COMMON] unsigned char 
 13004 ;; Return value:  Size  Location     Type
 13005 ;;		None               void
 13006 ;; Registers used:
 13007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13008 ;; Tracked objects:
 13009 ;;		On entry : 1E/0
 13010 ;;		On exit  : 1F/0
 13011 ;;		Unchanged: FFFE0/0
 13012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13017 ;;Total ram usage:        2 bytes
 13018 ;; Hardware stack levels used:    1
 13019 ;; Hardware stack levels required when called:    2
 13020 ;; This function calls:
 13021 ;;		Nothing
 13022 ;; This function is called by:
 13023 ;;		_LCD_Display
 13024 ;; This function uses a non-reentrant model
 13025 ;;
 13026  12F0                     _FlashDisplay:	
 13027                           
 13028                           ;DK_LCD.c: 384: u8 i;
 13029                           ;DK_LCD.c: 386: if(gb_DispFlashFlagBackup!=gb_DispFlashFlag)
 13030                           
 13031                           ; Regs used in _FlashDisplay: [wreg-status,0+pclath]
 13032  12F0  0020               	movlb	0	; select bank0
 13033  12F1  084B               	movf	_gb_DispFlashFlagBackup,w
 13034  12F2  064A               	xorwf	_gb_DispFlashFlag,w
 13035  12F3  1903               	skipnz
 13036  12F4  2BF3               	goto	l14767
 13037                           
 13038                           ;DK_LCD.c: 387: {
 13039                           ;DK_LCD.c: 388: for(i=0;i<32;i++){DispBufCache[i]=DispBuf[i];}
 13040  12F5  01F3               	clrf	FlashDisplay@i
 13041  12F6                     l14563:	
 13042  12F6  241A  3192         	fcall	PL6	;call to abstracted procedure
 13043  12F8  3020               	movlw	32
 13044  12F9  0AF3               	incf	FlashDisplay@i,f
 13045  12FA  0273               	subwf	FlashDisplay@i,w
 13046  12FB  1803               	btfsc	3,0
 13047  12FC  2BF3               	goto	l14767
 13048  12FD  2AF6               	goto	l14563
 13049  12FE                     l14569:	
 13050                           ;DK_LCD.c: 393: break;
 13051                           
 13052                           ;DK_LCD.c: 391: {
 13053                           ;DK_LCD.c: 392: case 0:
 13054                           
 13055                           
 13056                           ;DK_LCD.c: 395: if(gb_DispFlashEnableFlag)
 13057  12FE  0849               	movf	_gb_DispFlashEnableFlag,w
 13058  12FF  1903               	btfsc	3,2
 13059  1300  2B1D               	goto	l2459
 13060                           
 13061                           ;DK_LCD.c: 396: {
 13062                           ;DK_LCD.c: 397: if(_DispSeg.u32Bits.Bit5){DispBufCache[25]=DispBuf[25]&0x7F;}
 13063  1301  1EA0               	btfss	__DispSeg,5
 13064  1302  2B08               	goto	l2460
 13065  1303  0021               	movlb	1	; select bank1
 13066  1304  0839               	movf	(_DispBuf^(0+128)+25),w
 13067  1305  00D9               	movwf	(_DispBufCache^(0+128)+25)
 13068  1306  13D9               	bcf	(_DispBufCache^(0+128)+25),7
 13069  1307  2BFE               	goto	l14769
 13070  1308                     l2460:	
 13071                           
 13072                           ;DK_LCD.c: 398: else if(_DispSeg.u32Bits.Bit6){DispBufCache[24]=DispBuf[24]&0x7F;}
 13073  1308  1F20               	btfss	__DispSeg,6
 13074  1309  2B0F               	goto	l2462
 13075  130A  0021               	movlb	1	; select bank1
 13076  130B  0838               	movf	(_DispBuf^(0+128)+24),w
 13077  130C  00D8               	movwf	(_DispBufCache^(0+128)+24)
 13078  130D  13D8               	bcf	(_DispBufCache^(0+128)+24),7
 13079  130E  2BFE               	goto	l14769
 13080  130F                     l2462:	
 13081                           
 13082                           ;DK_LCD.c: 399: else if(_DispSeg.u32Bits.Bit7){DispBufCache[20]=DispBuf[20]&0x7F;}
 13083  130F  1FA0               	btfss	__DispSeg,7
 13084  1310  2B16               	goto	l2464
 13085  1311  0021               	movlb	1	; select bank1
 13086  1312  0834               	movf	(_DispBuf^(0+128)+20),w
 13087  1313  00D4               	movwf	(_DispBufCache^(0+128)+20)
 13088  1314  13D4               	bcf	(_DispBufCache^(0+128)+20),7
 13089  1315  2BFE               	goto	l14769
 13090  1316                     l2464:	
 13091                           
 13092                           ;DK_LCD.c: 400: else if(_DispSeg.u32Bits.Bit8){DispBufCache[19]=DispBuf[19]&0x7F;}
 13093  1316  1C21               	btfss	__DispSeg+1,0
 13094  1317  2BFE               	goto	l14769
 13095  1318  0021               	movlb	1	; select bank1
 13096  1319  0833               	movf	(_DispBuf^(0+128)+19),w
 13097  131A  00D3               	movwf	(_DispBufCache^(0+128)+19)
 13098  131B  13D3               	bcf	(_DispBufCache^(0+128)+19),7
 13099  131C  2BFE               	goto	l14769
 13100  131D                     l2459:	
 13101                           
 13102                           ;DK_LCD.c: 402: else
 13103                           ;DK_LCD.c: 403: {
 13104                           ;DK_LCD.c: 404: if(_DispSeg.u32Bits.Bit5){DispBufCache[25]=DispBuf[25];}
 13105  131D  1EA0               	btfss	__DispSeg,5
 13106  131E  2B23               	goto	l2468
 13107  131F  0021               	movlb	1	; select bank1
 13108  1320  0839               	movf	(_DispBuf^(0+128)+25),w
 13109  1321  00D9               	movwf	(_DispBufCache^(0+128)+25)
 13110  1322  2BFE               	goto	l14769
 13111  1323                     l2468:	
 13112                           
 13113                           ;DK_LCD.c: 405: else if(_DispSeg.u32Bits.Bit6){DispBufCache[24]=DispBuf[24];}
 13114  1323  1F20               	btfss	__DispSeg,6
 13115  1324  2B29               	goto	l2470
 13116  1325  0021               	movlb	1	; select bank1
 13117  1326  0838               	movf	(_DispBuf^(0+128)+24),w
 13118  1327  00D8               	movwf	(_DispBufCache^(0+128)+24)
 13119  1328  2BFE               	goto	l14769
 13120  1329                     l2470:	
 13121                           
 13122                           ;DK_LCD.c: 406: else if(_DispSeg.u32Bits.Bit7){DispBufCache[20]=DispBuf[20];}
 13123  1329  1FA0               	btfss	__DispSeg,7
 13124  132A  2B2F               	goto	l2472
 13125  132B  0021               	movlb	1	; select bank1
 13126  132C  0834               	movf	(_DispBuf^(0+128)+20),w
 13127  132D  00D4               	movwf	(_DispBufCache^(0+128)+20)
 13128  132E  2BFE               	goto	l14769
 13129  132F                     l2472:	
 13130                           
 13131                           ;DK_LCD.c: 407: else if(_DispSeg.u32Bits.Bit8){DispBufCache[19]=DispBuf[19];}
 13132  132F  1C21               	btfss	__DispSeg+1,0
 13133  1330  2BFE               	goto	l14769
 13134  1331  0021               	movlb	1	; select bank1
 13135  1332  0833               	movf	(_DispBuf^(0+128)+19),w
 13136  1333  00D3               	movwf	(_DispBufCache^(0+128)+19)
 13137  1334  2BFE               	goto	l14769
 13138  1335                     l14597:	
 13139                           
 13140                           ;DK_LCD.c: 411: if(gb_DispFlashEnableFlag)
 13141  1335  0849               	movf	_gb_DispFlashEnableFlag,w
 13142                           
 13143                           ;DK_LCD.c: 412: {
 13144                           ;DK_LCD.c: 413: for(i=25;i>25-6;i--){DispBufCache[i]=(DispBuf[i]&0x80)|LCDDigTable[36];}
 13145  1336  3019               	movlw	25
 13146  1337  00F3               	movwf	FlashDisplay@i
 13147  1338  1903               	btfsc	3,2
 13148  1339  2B43               	goto	l14613
 13149  133A                     l14603:	
 13150  133A  0873               	movf	FlashDisplay@i,w
 13151  133B  2402  3192         	fcall	PL3	;call to abstracted procedure
 13152  133D  3014               	movlw	20
 13153  133E  03F3               	decf	FlashDisplay@i,f
 13154  133F  0273               	subwf	FlashDisplay@i,w
 13155  1340  1C03               	btfss	3,0
 13156  1341  2BFE               	goto	l14769
 13157  1342  2B3A               	goto	l14603
 13158  1343                     l14613:	
 13159                           ;DK_LCD.c: 415: else
 13160                           ;DK_LCD.c: 416: {
 13161                           ;DK_LCD.c: 417: for(i=25;i>25-6;i--){DispBufCache[i]=DispBuf[i];}
 13162                           
 13163  1343  241A  3192         	fcall	PL6	;call to abstracted procedure
 13164  1345  3014               	movlw	20
 13165  1346  03F3               	decf	FlashDisplay@i,f
 13166  1347  0273               	subwf	FlashDisplay@i,w
 13167  1348  1C03               	btfss	3,0
 13168  1349  2BFE               	goto	l14769
 13169  134A  2B43               	goto	l14613
 13170  134B                     l14619:	
 13171                           
 13172                           ;DK_LCD.c: 421: if(gb_DispFlashEnableFlag!=0)
 13173  134B  0849               	movf	_gb_DispFlashEnableFlag,w
 13174                           
 13175                           ;DK_LCD.c: 422: {
 13176                           ;DK_LCD.c: 423: for(i=29;i>29-4;i--){DispBufCache[i]=(DispBuf[i]&0x80)|LCDDigTable[36];}
 13177  134C  301D               	movlw	29
 13178  134D  00F3               	movwf	FlashDisplay@i
 13179  134E  1903               	btfsc	3,2
 13180  134F  2B59               	goto	l14635
 13181  1350                     l14625:	
 13182  1350  0873               	movf	FlashDisplay@i,w
 13183  1351  2402  3192         	fcall	PL3	;call to abstracted procedure
 13184  1353  301A               	movlw	26
 13185  1354  03F3               	decf	FlashDisplay@i,f
 13186  1355  0273               	subwf	FlashDisplay@i,w
 13187  1356  1C03               	btfss	3,0
 13188  1357  2BFE               	goto	l14769
 13189  1358  2B50               	goto	l14625
 13190  1359                     l14635:	
 13191                           ;DK_LCD.c: 425: else
 13192                           ;DK_LCD.c: 426: {
 13193                           ;DK_LCD.c: 427: for(i=29;i>29-4;i--){DispBufCache[i]=DispBuf[i];}
 13194                           
 13195  1359  241A  3192         	fcall	PL6	;call to abstracted procedure
 13196  135B  301A               	movlw	26
 13197  135C  03F3               	decf	FlashDisplay@i,f
 13198  135D  0273               	subwf	FlashDisplay@i,w
 13199  135E  1C03               	btfss	3,0
 13200  135F  2BFE               	goto	l14769
 13201  1360  2B59               	goto	l14635
 13202  1361                     l14641:	
 13203                           
 13204                           ;DK_LCD.c: 431: if(gb_DispFlashEnableFlag)
 13205  1361  0849               	movf	_gb_DispFlashEnableFlag,w
 13206  1362  1903               	btfsc	3,2
 13207  1363  2B6E               	goto	l14655
 13208                           
 13209                           ;DK_LCD.c: 432: {
 13210                           ;DK_LCD.c: 433: for(i=0;i<0+4;i++){DispBufCache[i]=(DispBuf[i]&0x80)|LCDDigTable[36];}
 13211  1364  01F3               	clrf	FlashDisplay@i
 13212  1365                     l14649:	
 13213  1365  0873               	movf	FlashDisplay@i,w
 13214  1366  2402  3192         	fcall	PL3	;call to abstracted procedure
 13215  1368  3004               	movlw	4
 13216  1369  0AF3               	incf	FlashDisplay@i,f
 13217  136A  0273               	subwf	FlashDisplay@i,w
 13218  136B  1803               	btfsc	3,0
 13219  136C  2BFE               	goto	l14769
 13220  136D  2B65               	goto	l14649
 13221  136E                     l14655:	
 13222                           
 13223                           ;DK_LCD.c: 435: else
 13224                           ;DK_LCD.c: 436: {
 13225                           ;DK_LCD.c: 437: for(i=0;i<0+4;i++){DispBufCache[i]=DispBuf[i];}
 13226  136E  01F3               	clrf	FlashDisplay@i
 13227  136F                     l14661:	
 13228  136F  241A  3192         	fcall	PL6	;call to abstracted procedure
 13229  1371  3004               	movlw	4
 13230  1372  0AF3               	incf	FlashDisplay@i,f
 13231  1373  0273               	subwf	FlashDisplay@i,w
 13232  1374  1803               	btfsc	3,0
 13233  1375  2BFE               	goto	l14769
 13234  1376  2B6F               	goto	l14661
 13235  1377                     l14667:	
 13236                           
 13237                           ;DK_LCD.c: 441: if(gb_DispFlashEnableFlag)
 13238  1377  0849               	movf	_gb_DispFlashEnableFlag,w
 13239                           
 13240                           ;DK_LCD.c: 442: {
 13241                           ;DK_LCD.c: 443: for(i=18;i>18-4;i--){DispBufCache[i]=(DispBuf[i]&0x80)|LCDDigTable[36];}
 13242  1378  3012               	movlw	18
 13243  1379  00F3               	movwf	FlashDisplay@i
 13244  137A  1903               	btfsc	3,2
 13245  137B  2B85               	goto	l14683
 13246  137C                     l14673:	
 13247  137C  0873               	movf	FlashDisplay@i,w
 13248  137D  2402  3192         	fcall	PL3	;call to abstracted procedure
 13249  137F  300F               	movlw	15
 13250  1380  03F3               	decf	FlashDisplay@i,f
 13251  1381  0273               	subwf	FlashDisplay@i,w
 13252  1382  1C03               	btfss	3,0
 13253  1383  2BFE               	goto	l14769
 13254  1384  2B7C               	goto	l14673
 13255  1385                     l14683:	
 13256                           ;DK_LCD.c: 445: else
 13257                           ;DK_LCD.c: 446: {
 13258                           ;DK_LCD.c: 447: for(i=18;i>18-4;i--){DispBufCache[i]=DispBuf[i];}
 13259                           
 13260  1385  241A  3192         	fcall	PL6	;call to abstracted procedure
 13261  1387  300F               	movlw	15
 13262  1388  03F3               	decf	FlashDisplay@i,f
 13263  1389  0273               	subwf	FlashDisplay@i,w
 13264  138A  1C03               	btfss	3,0
 13265  138B  2BFE               	goto	l14769
 13266  138C  2B85               	goto	l14683
 13267  138D                     l14689:	
 13268                           
 13269                           ;DK_LCD.c: 451: if(gb_DispFlashEnableFlag)
 13270  138D  0849               	movf	_gb_DispFlashEnableFlag,w
 13271                           
 13272                           ;DK_LCD.c: 452: {
 13273                           ;DK_LCD.c: 453: for(i=14;i>14-2;i--){DispBufCache[i]=(DispBuf[i]&0x80)|LCDDigTable[36];}
 13274  138E  300E               	movlw	14
 13275  138F  00F3               	movwf	FlashDisplay@i
 13276  1390  1903               	btfsc	3,2
 13277  1391  2B9B               	goto	l14705
 13278  1392                     l14695:	
 13279  1392  0873               	movf	FlashDisplay@i,w
 13280  1393  2402  3192         	fcall	PL3	;call to abstracted procedure
 13281  1395  300D               	movlw	13
 13282  1396  03F3               	decf	FlashDisplay@i,f
 13283  1397  0273               	subwf	FlashDisplay@i,w
 13284  1398  1C03               	btfss	3,0
 13285  1399  2BFE               	goto	l14769
 13286  139A  2B92               	goto	l14695
 13287  139B                     l14705:	
 13288                           ;DK_LCD.c: 455: else
 13289                           ;DK_LCD.c: 456: {
 13290                           ;DK_LCD.c: 457: for(i=14;i>14-2;i--){DispBufCache[i]=DispBuf[i];}
 13291                           
 13292  139B  241A  3192         	fcall	PL6	;call to abstracted procedure
 13293  139D  300D               	movlw	13
 13294  139E  03F3               	decf	FlashDisplay@i,f
 13295  139F  0273               	subwf	FlashDisplay@i,w
 13296  13A0  1C03               	btfss	3,0
 13297  13A1  2BFE               	goto	l14769
 13298  13A2  2B9B               	goto	l14705
 13299  13A3                     l14711:	
 13300                           
 13301                           ;DK_LCD.c: 461: if(gb_DispFlashEnableFlag)
 13302  13A3  0849               	movf	_gb_DispFlashEnableFlag,w
 13303  13A4  1903               	btfsc	3,2
 13304  13A5  2BBB               	goto	l14719
 13305                           
 13306                           ;DK_LCD.c: 462: {
 13307                           ;DK_LCD.c: 463: DispBufCache[12]=(DispBuf[12]&0x80)|LCDDigTable[36];
 13308  13A6  3025               	movlw	low ((_LCDDigTable| (0+32768)+36))
 13309  13A7  2414  3192         	fcall	PL4	;call to abstracted procedure
 13310  13A9  0021               	movlb	1	; select bank1
 13311  13AA  082C               	movf	(_DispBuf^(0+128)+12),w
 13312  13AB  3980               	andlw	128
 13313  13AC  0472               	iorwf	??_FlashDisplay,w
 13314  13AD  00CC               	movwf	(_DispBufCache^(0+128)+12)
 13315                           
 13316                           ;DK_LCD.c: 464: DispBufCache[12-1]=(DispBuf[12-1]&0x00)|LCDDigTable[36];
 13317  13AE  3025               	movlw	low ((_LCDDigTable| (0+32768)+36))
 13318  13AF  0084               	movwf	4
 13319  13B0  3098               	movlw	high ((_LCDDigTable| (0+32768)+36))
 13320  13B1  0085               	movwf	5
 13321  13B2  0800               	movf	0,w	;code access
 13322  13B3  00CB               	movwf	(_DispBufCache^(0+128)+11)
 13323                           
 13324                           ;DK_LCD.c: 465: DispBufCache[4]=(DispBuf[4]&0x80)|LCDDigTable[36];
 13325  13B4  3025               	movlw	low ((_LCDDigTable| (0+32768)+36))
 13326  13B5  2414  3192         	fcall	PL4	;call to abstracted procedure
 13327  13B7  0824               	movf	(_DispBuf^(0+128)+4),w
 13328  13B8  3980               	andlw	128
 13329  13B9  0472               	iorwf	??_FlashDisplay,w
 13330  13BA  2BC1               	goto	L37
 13331  13BB                     l14719:	
 13332                           ;DK_LCD.c: 466: }
 13333                           
 13334                           
 13335                           ;DK_LCD.c: 467: else
 13336                           ;DK_LCD.c: 468: {
 13337                           ;DK_LCD.c: 469: DispBufCache[12]=DispBuf[12];
 13338  13BB  0021               	movlb	1	; select bank1
 13339  13BC  082C               	movf	(_DispBuf^(0+128)+12),w
 13340  13BD  00CC               	movwf	(_DispBufCache^(0+128)+12)
 13341                           
 13342                           ;DK_LCD.c: 470: DispBufCache[12-1]=DispBuf[12-1];
 13343  13BE  082B               	movf	(_DispBuf^(0+128)+11),w
 13344  13BF  00CB               	movwf	(_DispBufCache^(0+128)+11)
 13345                           
 13346                           ;DK_LCD.c: 471: DispBufCache[4]=DispBuf[4];
 13347  13C0  0824               	movf	(_DispBuf^(0+128)+4),w
 13348  13C1                     L37:	
 13349  13C1  00C4               	movwf	(_DispBufCache^(0+128)+4)
 13350  13C2  2BFE               	goto	l14769
 13351  13C3                     l14721:	
 13352                           
 13353                           ;DK_LCD.c: 475: if(gb_DispFlashEnableFlag)
 13354  13C3  0849               	movf	_gb_DispFlashEnableFlag,w
 13355                           
 13356                           ;DK_LCD.c: 476: {
 13357                           ;DK_LCD.c: 477: for(i=5;i<5+3;i++){DispBufCache[i]=(DispBuf[i]&0x80)|LCDDigTable[36];}
 13358  13C4  3005               	movlw	5
 13359  13C5  00F3               	movwf	FlashDisplay@i
 13360  13C6  1903               	btfsc	3,2
 13361  13C7  2BD3               	goto	l14737
 13362  13C8                     l14727:	
 13363  13C8  0873               	movf	FlashDisplay@i,w
 13364  13C9  2402  3192         	fcall	PL3	;call to abstracted procedure
 13365  13CB  3008               	movlw	8
 13366  13CC  0AF3               	incf	FlashDisplay@i,f
 13367  13CD  0273               	subwf	FlashDisplay@i,w
 13368  13CE  1C03               	skipc
 13369  13CF  2BC8               	goto	l14727
 13370                           
 13371                           ;DK_LCD.c: 478: DispBufCache[6]=DispBufCache[6]&0x7F;
 13372  13D0  0021               	movlb	1	; select bank1
 13373  13D1  13C6               	bcf	(_DispBufCache^(0+128)+6),7
 13374                           
 13375                           ;DK_LCD.c: 479: }
 13376  13D2  2BFE               	goto	l14769
 13377  13D3                     l14737:	
 13378                           ;DK_LCD.c: 480: else
 13379                           ;DK_LCD.c: 481: {
 13380                           ;DK_LCD.c: 482: for(i=5;i<5+3;i++){DispBufCache[i]=DispBuf[i];}
 13381                           
 13382  13D3  241A  3192         	fcall	PL6	;call to abstracted procedure
 13383  13D5  3008               	movlw	8
 13384  13D6  0AF3               	incf	FlashDisplay@i,f
 13385  13D7  0273               	subwf	FlashDisplay@i,w
 13386  13D8  1803               	btfsc	3,0
 13387  13D9  2BFE               	goto	l14769
 13388  13DA  2BD3               	goto	l14737
 13389  13DB                     l14743:	
 13390                           
 13391                           ;DK_LCD.c: 486: if(gb_DispFlashEnableFlag)
 13392  13DB  0849               	movf	_gb_DispFlashEnableFlag,w
 13393                           
 13394                           ;DK_LCD.c: 487: {
 13395                           ;DK_LCD.c: 488: for(i=8;i<8+3;i++){DispBufCache[i]=(DispBuf[i]&0x80)|LCDDigTable[36];}
 13396  13DC  3008               	movlw	8
 13397  13DD  00F3               	movwf	FlashDisplay@i
 13398  13DE  1903               	btfsc	3,2
 13399  13DF  2BEB               	goto	l14759
 13400  13E0                     l14749:	
 13401  13E0  0873               	movf	FlashDisplay@i,w
 13402  13E1  2402  3192         	fcall	PL3	;call to abstracted procedure
 13403  13E3  300B               	movlw	11
 13404  13E4  0AF3               	incf	FlashDisplay@i,f
 13405  13E5  0273               	subwf	FlashDisplay@i,w
 13406  13E6  1C03               	skipc
 13407  13E7  2BE0               	goto	l14749
 13408                           
 13409                           ;DK_LCD.c: 489: DispBufCache[9]=DispBufCache[9]&0x7F;
 13410  13E8  0021               	movlb	1	; select bank1
 13411  13E9  13C9               	bcf	(_DispBufCache^(0+128)+9),7
 13412                           
 13413                           ;DK_LCD.c: 490: }
 13414  13EA  2BFE               	goto	l14769
 13415  13EB                     l14759:	
 13416                           ;DK_LCD.c: 491: else
 13417                           ;DK_LCD.c: 492: {
 13418                           ;DK_LCD.c: 493: for(i=8;i<8+3;i++){DispBufCache[i]=DispBuf[i];}
 13419                           
 13420  13EB  241A  3192         	fcall	PL6	;call to abstracted procedure
 13421  13ED  300B               	movlw	11
 13422  13EE  0AF3               	incf	FlashDisplay@i,f
 13423  13EF  0273               	subwf	FlashDisplay@i,w
 13424  13F0  1803               	btfsc	3,0
 13425  13F1  2BFE               	goto	l14769
 13426  13F2  2BEB               	goto	l14759
 13427  13F3                     l14767:	
 13428  13F3  0020               	movlb	0	; select bank0
 13429  13F4  084A               	movf	_gb_DispFlashFlag,w
 13430                           
 13431                           ; Switch size 1, requested type "space"
 13432                           ; Number of cases is 10, Range of values is 0 to 9
 13433                           ; switch strategies available:
 13434                           ; Name         Instructions Cycles
 13435                           ; direct_byte           26     6 (fixed)
 13436                           ; simple_byte           31    16 (average)
 13437                           ; jumptable            260     6 (fixed)
 13438                           ; rangetable            14     4 (fixed)
 13439                           ; spacedrange           25     6 (fixed)
 13440                           ; locatedrange          10     3 (fixed)
 13441                           ;	Chosen strategy is direct_byte
 13442  13F5  0084               	movwf	4
 13443  13F6  300A               	movlw	10
 13444  13F7  0204               	subwf	4,w
 13445  13F8  1803               	skipnc
 13446  13F9  2BFE               	goto	l14769
 13447  13FA  3187               	movlp	high S17147
 13448  13FB  3504               	lslf	4,w
 13449  13FC  3EC4               	addlw	low S17147
 13450  13FD  0082               	movwf	2
 13451  13FE                     l14769:	
 13452                           
 13453                           ;DK_LCD.c: 497: gb_DispFlashFlagBackup=gb_DispFlashFlag;
 13454  13FE  0020               	movlb	0	; select bank0
 13455  13FF  084A               	movf	_gb_DispFlashFlag,w
 13456  1400  00CB               	movwf	_gb_DispFlashFlagBackup
 13457  1401  0008               	return
 13458  1402                     __end_of_FlashDisplay:	
 13459  1402                     PL3:	
 13460  1402  3EC0               	addlw	_DispBufCache& (0+255)
 13461  1403  0086               	movwf	6
 13462  1404  3025               	movlw	low ((_LCDDigTable| (0+32768)+36))
 13463  1405  0187               	clrf	7
 13464  1406  0084               	movwf	4
 13465  1407  3098               	movlw	high ((_LCDDigTable| (0+32768)+36))
 13466  1408  0085               	movwf	5
 13467  1409  0800               	movf	0,w	;code access
 13468  140A  00F2               	movwf	??_FlashDisplay
 13469  140B  0873               	movf	FlashDisplay@i,w
 13470  140C  3EA0               	addlw	_DispBuf& (0+255)
 13471  140D  0084               	movwf	4
 13472  140E  0185               	clrf	5
 13473  140F  0800               	movf	0,w
 13474  1410  3980               	andlw	128
 13475  1411  0472               	iorwf	??_FlashDisplay,w
 13476  1412  0081               	movwf	1
 13477  1413  0008               	return
 13478  1414                     PL4:	
 13479  1414  0084               	movwf	4
 13480  1415  3098               	movlw	high ((_LCDDigTable| (0+32768)+36))
 13481  1416  0085               	movwf	5
 13482  1417  0800               	movf	0,w	;code access
 13483  1418  00F2               	movwf	??_FlashDisplay
 13484  1419  0008               	return
 13485  141A                     PL6:	
 13486  141A  0873               	movf	FlashDisplay@i,w
 13487  141B  3EC0               	addlw	_DispBufCache& (0+255)
 13488  141C  0086               	movwf	6
 13489  141D  0187               	clrf	7
 13490  141E  0873               	movf	FlashDisplay@i,w
 13491  141F  3EA0               	addlw	_DispBuf& (0+255)
 13492  1420  0084               	movwf	4
 13493  1421  0185               	clrf	5
 13494  1422  0800               	movf	0,w
 13495  1423  0081               	movwf	1
 13496  1424  0008               	return
 13497                           
 13498                           	psect	swtext1
 13499  07C4                     __pswtext1:	
 13500  07C4                     S17147:	
 13501  07C4  3193  2BFE         	ljmp	l14769
 13502  07C6  3192  2AFE         	ljmp	l14569
 13503  07C8  3193  2B35         	ljmp	l14597
 13504  07CA  3193  2B4B         	ljmp	l14619
 13505  07CC  3193  2B61         	ljmp	l14641
 13506  07CE  3193  2B77         	ljmp	l14667
 13507  07D0  3193  2B8D         	ljmp	l14689
 13508  07D2  3193  2BA3         	ljmp	l14711
 13509  07D4  3193  2BC3         	ljmp	l14721
 13510  07D6  3193  2BDB         	ljmp	l14743
 13511                           
 13512                           	psect	intentry
 13513  0004                     __pintentry:	
 13514 ;; =============== function _FlashRead ends ============
 13515                           
 13516                           
 13517 ;; *************** function _ISR_timer *****************
 13518 ;; Defined at:
 13519 ;;		line 210 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\main.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;		None
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;		None
 13524 ;; Return value:  Size  Location     Type
 13525 ;;		None               void
 13526 ;; Registers used:
 13527 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13528 ;; Tracked objects:
 13529 ;;		On entry : 0/0
 13530 ;;		On exit  : 1F/0
 13531 ;;		Unchanged: FFFE0/0
 13532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13536 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13537 ;;Total ram usage:        2 bytes
 13538 ;; Hardware stack levels used:    1
 13539 ;; Hardware stack levels required when called:    1
 13540 ;; This function calls:
 13541 ;;		i1_BeepOff
 13542 ;; This function is called by:
 13543 ;;		Interrupt level 1
 13544 ;; This function uses a non-reentrant model
 13545 ;;
 13546  0004                     _ISR_timer:	
 13547                           
 13548                           ; Regs used in _ISR_timer: [wreg+fsr1l-status,0+pclath+cstack]
 13549  0004  3180               	pagesel	$
 13550                           
 13551                           ;main.c: 212: if(TMR2IF)
 13552  0005  0020               	movlb	0	; select bank0
 13553  0006  1C91               	btfss	17,1
 13554  0007  288C               	goto	i1l7930
 13555                           
 13556                           ;main.c: 213: {
 13557                           ;main.c: 215: if(gw_KeyDebounceTimer){gw_KeyDebounceTimer--;}
 13558  0008  0839               	movf	_gw_KeyDebounceTimer+1,w
 13559  0009  0438               	iorwf	_gw_KeyDebounceTimer,w
 13560  000A  1903               	skipnz
 13561  000B  2810               	goto	i1l7931
 13562  000C  3001               	movlw	1
 13563  000D  02B8               	subwf	_gw_KeyDebounceTimer,f
 13564  000E  3000               	movlw	0
 13565  000F  3BB9               	subwfb	_gw_KeyDebounceTimer+1,f
 13566  0010                     i1l7931:	
 13567                           
 13568                           ;main.c: 216: if(gw_TxLedTimer){gw_TxLedTimer--;}
 13569  0010  0841               	movf	_gw_TxLedTimer+1,w
 13570  0011  0440               	iorwf	_gw_TxLedTimer,w
 13571  0012  1903               	skipnz
 13572  0013  2818               	goto	i1l12215
 13573  0014  3001               	movlw	1
 13574  0015  02C0               	subwf	_gw_TxLedTimer,f
 13575  0016  3000               	movlw	0
 13576  0017  3BC1               	subwfb	_gw_TxLedTimer+1,f
 13577  0018                     i1l12215:	
 13578                           
 13579                           ;main.c: 218: gw_LCDFlashTimer++;
 13580  0018  0021               	movlb	1	; select bank1
 13581  0019  0AE0               	incf	_gw_LCDFlashTimer^(0+128),f
 13582  001A  1903               	skipnz
 13583  001B  0AE1               	incf	(_gw_LCDFlashTimer+1)^(0+128),f
 13584                           
 13585                           ;main.c: 219: if(gw_LCDFlashTimer>=300)
 13586  001C  3001               	movlw	1
 13587  001D  0261               	subwf	(_gw_LCDFlashTimer+1)^(0+128),w
 13588  001E  302C               	movlw	44
 13589  001F  1903               	skipnz
 13590  0020  0260               	subwf	_gw_LCDFlashTimer^(0+128),w
 13591  0021  1C03               	skipc
 13592  0022  2828               	goto	i1l12223
 13593  0023  3001               	movlw	1
 13594                           
 13595                           ;main.c: 220: {
 13596                           ;main.c: 221: gw_LCDFlashTimer=0;
 13597  0024  01E0               	clrf	_gw_LCDFlashTimer^(0+128)
 13598  0025  01E1               	clrf	(_gw_LCDFlashTimer+1)^(0+128)
 13599                           
 13600                           ;main.c: 222: gb_DispFlashEnableFlag^=1;
 13601  0026  0020               	movlb	0	; select bank0
 13602  0027  06C9               	xorwf	_gb_DispFlashEnableFlag,f
 13603  0028                     i1l12223:	
 13604                           
 13605                           ;main.c: 223: }
 13606                           ;main.c: 225: if(gw_TxTimer){gw_TxTimer--;}
 13607  0028  0020               	movlb	0	; select bank0
 13608  0029  0843               	movf	_gw_TxTimer+1,w
 13609  002A  0442               	iorwf	_gw_TxTimer,w
 13610  002B  1903               	skipnz
 13611  002C  2831               	goto	i1l12227
 13612  002D  3001               	movlw	1
 13613  002E  02C2               	subwf	_gw_TxTimer,f
 13614  002F  3000               	movlw	0
 13615  0030  3BC3               	subwfb	_gw_TxTimer+1,f
 13616  0031                     i1l12227:	
 13617                           
 13618                           ;main.c: 227: gw_TimerCount++;
 13619  0031  0021               	movlb	1	; select bank1
 13620  0032  0AE2               	incf	_gw_TimerCount^(0+128),f
 13621  0033  1903               	skipnz
 13622  0034  0AE3               	incf	(_gw_TimerCount+1)^(0+128),f
 13623                           
 13624                           ;main.c: 228: if(gw_TimerCount>=1000)
 13625  0035  3003               	movlw	3
 13626  0036  0263               	subwf	(_gw_TimerCount+1)^(0+128),w
 13627  0037  30E8               	movlw	232
 13628  0038  1903               	skipnz
 13629  0039  0262               	subwf	_gw_TimerCount^(0+128),w
 13630  003A  1C03               	skipc
 13631  003B  2842               	goto	i1l12237
 13632                           
 13633                           ;main.c: 229: {
 13634                           ;main.c: 230: gw_TimerCount=0;
 13635  003C  01E2               	clrf	_gw_TimerCount^(0+128)
 13636  003D  01E3               	clrf	(_gw_TimerCount+1)^(0+128)
 13637                           
 13638                           ;main.c: 232: if(gb_SysTimer_1S){gb_SysTimer_1S--;}
 13639  003E  0020               	movlb	0	; select bank0
 13640  003F  085B               	movf	_gb_SysTimer_1S,w
 13641  0040  1D03               	skipz
 13642  0041  03DB               	decf	_gb_SysTimer_1S,f
 13643  0042                     i1l12237:	
 13644                           
 13645                           ;main.c: 233: }
 13646                           ;main.c: 237: if(gw_BeepTimer){gw_BeepTimer--;}
 13647  0042  0020               	movlb	0	; select bank0
 13648  0043  0837               	movf	_gw_BeepTimer+1,w
 13649  0044  0436               	iorwf	_gw_BeepTimer,w
 13650  0045  1903               	skipnz
 13651  0046  284B               	goto	i1l7937
 13652  0047  3001               	movlw	1
 13653  0048  02B6               	subwf	_gw_BeepTimer,f
 13654  0049  3000               	movlw	0
 13655  004A  3BB7               	subwfb	_gw_BeepTimer+1,f
 13656  004B                     i1l7937:	
 13657                           
 13658                           ;main.c: 238: if((gb_BeepOnFlag==1)&&(gw_BeepTimer==0))
 13659  004B  0B46               	decfsz	_gb_BeepOnFlag,w
 13660  004C  2886               	goto	i1l12251
 13661  004D  0837               	movf	_gw_BeepTimer+1,w
 13662  004E  0436               	iorwf	_gw_BeepTimer,w
 13663  004F  1D03               	skipz
 13664  0050  2886               	goto	i1l12251
 13665                           
 13666                           ;main.c: 239: {
 13667                           ;main.c: 240: if(gw_ToneBuf[gb_BeepOnCount+1]!=0)
 13668  0051  3545               	lslf	_gb_BeepOnCount,w
 13669  0052  3EA2               	addlw	(_gw_ToneBuf+2)& (0+255)
 13670  0053  0086               	movwf	6
 13671  0054  3001               	movlw	1	; select bank3/4
 13672  0055  0087               	movwf	7
 13673  0056  0016               	moviw fsr1++
 13674  0057  0401               	iorwf	1,w
 13675  0058  1903               	skipnz
 13676  0059  2883               	goto	i1l12249
 13677                           
 13678                           ;main.c: 241: {
 13679                           ;main.c: 242: gb_BeepTimerH = (gw_ToneBuf[gb_BeepOnCount]>>8) & 0xff;
 13680  005A  3545               	lslf	_gb_BeepOnCount,w
 13681  005B  3EA0               	addlw	_gw_ToneBuf& (0+255)
 13682  005C  0086               	movwf	6
 13683  005D  3001               	movlw	1	; select bank3/4
 13684  005E  0087               	movwf	7
 13685  005F  3F40               	moviw [0]fsr1
 13686  0060  00F0               	movwf	??_ISR_timer
 13687  0061  3F41               	moviw [1]fsr1
 13688  0062  00F1               	movwf	??_ISR_timer+1
 13689  0063  00C7               	movwf	_gb_BeepTimerH
 13690                           
 13691                           ;main.c: 243: gb_BeepTimerL = gw_ToneBuf[gb_BeepOnCount] & 0xff;
 13692  0064  3545               	lslf	_gb_BeepOnCount,w
 13693  0065  3EA0               	addlw	_gw_ToneBuf& (0+255)
 13694  0066  0086               	movwf	6
 13695  0067  0801               	movf	1,w
 13696  0068  00C8               	movwf	_gb_BeepTimerL
 13697                           
 13698                           ;main.c: 244: gw_BeepTimer=gw_ToneBuf[gb_BeepOnCount+1];
 13699  0069  3545               	lslf	_gb_BeepOnCount,w
 13700  006A  3EA2               	addlw	(_gw_ToneBuf+2)& (0+255)
 13701  006B  0086               	movwf	6
 13702  006C  3001               	movlw	1	; select bank3/4
 13703  006D  3F40               	moviw [0]fsr1
 13704  006E  00B6               	movwf	_gw_BeepTimer
 13705  006F  3F41               	moviw [1]fsr1
 13706  0070  00B7               	movwf	_gw_BeepTimer+1
 13707                           
 13708                           ;main.c: 245: gw_ToneBuf[gb_BeepOnCount]=0;
 13709  0071  3545               	lslf	_gb_BeepOnCount,w
 13710  0072  3EA0               	addlw	_gw_ToneBuf& (0+255)
 13711  0073  0086               	movwf	6
 13712  0074  3001               	movlw	1	; select bank3/4
 13713  0075  0181               	clrf	1
 13714  0076  3141               	addfsr 1,1
 13715  0077  0181               	clrf	1
 13716                           
 13717                           ;main.c: 246: gw_ToneBuf[gb_BeepOnCount+1]=0;
 13718  0078  3545               	lslf	_gb_BeepOnCount,w
 13719  0079  3EA2               	addlw	(_gw_ToneBuf+2)& (0+255)
 13720  007A  0086               	movwf	6
 13721  007B  3001               	movlw	1	; select bank3/4
 13722  007C  0087               	movwf	7
 13723  007D  0181               	clrf	1
 13724  007E  3141               	addfsr 1,1
 13725  007F  0181               	clrf	1
 13726                           
 13727                           ;main.c: 247: gb_BeepOnCount+=2;
 13728  0080  0AC5               	incf	_gb_BeepOnCount,f
 13729  0081  0AC5               	incf	_gb_BeepOnCount,f
 13730                           
 13731                           ;main.c: 248: }
 13732  0082  2886               	goto	i1l12251
 13733  0083                     i1l12249:	
 13734                           
 13735                           ;main.c: 249: else
 13736                           ;main.c: 250: {
 13737                           ;main.c: 251: BeepOff();
 13738  0083  3187  27D8  3180   	fcall	i1_BeepOff
 13739  0086                     i1l12251:	
 13740                           
 13741                           ;main.c: 252: }
 13742                           ;main.c: 253: }
 13743                           ;main.c: 254: if(gb_BeepOnFlag==0)
 13744  0086  08C6               	movf	_gb_BeepOnFlag,f
 13745  0087  1D03               	skipz
 13746  0088  288B               	goto	i1l7941
 13747                           
 13748                           ;main.c: 255: {
 13749                           ;main.c: 256: TMR1ON = 0;
 13750  0089  1018               	bcf	24,0
 13751                           
 13752                           ;main.c: 257: RC2=0;
 13753  008A  110E               	bcf	14,2
 13754  008B                     i1l7941:	
 13755                           
 13756                           ;main.c: 258: }
 13757                           ;main.c: 259: TMR2IF = 0;
 13758  008B  1091               	bcf	17,1
 13759  008C                     i1l7930:	
 13760                           
 13761                           ;main.c: 260: }
 13762                           ;main.c: 263: if(TMR1IF)
 13763  008C  1C11               	btfss	17,0
 13764  008D  0009               	retfie
 13765                           
 13766                           ;main.c: 264: {
 13767                           ;main.c: 265: RC2^=1;
 13768  008E  3004               	movlw	4
 13769  008F  068E               	xorwf	14,f
 13770                           
 13771                           ;main.c: 266: TMR1H = gb_BeepTimerH;
 13772  0090  0847               	movf	_gb_BeepTimerH,w
 13773  0091  0097               	movwf	23	;volatile
 13774                           
 13775                           ;main.c: 267: TMR1L = gb_BeepTimerL;
 13776  0092  0848               	movf	_gb_BeepTimerL,w
 13777  0093  0096               	movwf	22	;volatile
 13778                           
 13779                           ;main.c: 268: TMR1IF =0 ;
 13780  0094  1011               	bcf	17,0
 13781  0095  0009               	retfie
 13782  0096                     __end_of_ISR_timer:	
 13783                           
 13784                           	psect	text2223
 13785  07D8                     __ptext2223:	
 13786 ;; =============== function _ISR_timer ends ============
 13787                           
 13788                           
 13789 ;; *************** function i1_BeepOff *****************
 13790 ;; Defined at:
 13791 ;;		line 964 in file "E:\NewDemo\RFDK_PIC16_LCD_V2.0-V2.1\Code\RFDK_PIC16_LCD_DEMO_V2.1\substantive\RFDK_RFM98_V2.1\Sour
      +ce\DK_PIC16_App.c"
 13792 ;; Parameters:    Size  Location     Type
 13793 ;;		None
 13794 ;; Auto vars:     Size  Location     Type
 13795 ;;		None
 13796 ;; Return value:  Size  Location     Type
 13797 ;;		None               void
 13798 ;; Registers used:
 13799 ;;		status,2
 13800 ;; Tracked objects:
 13801 ;;		On entry : 1F/0
 13802 ;;		On exit  : 1F/0
 13803 ;;		Unchanged: FFFE0/0
 13804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13809 ;;Total ram usage:        0 bytes
 13810 ;; Hardware stack levels used:    1
 13811 ;; This function calls:
 13812 ;;		Nothing
 13813 ;; This function is called by:
 13814 ;;		_ISR_timer
 13815 ;; This function uses a non-reentrant model
 13816 ;;
 13817  07D8                     i1_BeepOff:	
 13818                           
 13819                           ;DK_PIC16_App.c: 965: TMR1ON = 0;
 13820                           
 13821                           ; Regs used in i1_BeepOff: [status,2]
 13822  07D8  1018               	bcf	24,0
 13823                           
 13824                           ;DK_PIC16_App.c: 966: gb_BeepOnFlag = 0;
 13825  07D9  01C6               	clrf	_gb_BeepOnFlag
 13826                           
 13827                           ;DK_PIC16_App.c: 967: gb_BeepOnCount=0;
 13828  07DA  01C5               	clrf	_gb_BeepOnCount
 13829                           
 13830                           ;DK_PIC16_App.c: 968: gw_BeepTimer=0;
 13831  07DB  01B6               	clrf	_gw_BeepTimer
 13832  07DC  01B7               	clrf	_gw_BeepTimer+1
 13833                           
 13834                           ;DK_PIC16_App.c: 969: RC2=0;
 13835  07DD  110E               	bcf	14,2
 13836  07DE  0008               	return
 13837  07DF                     __end_ofi1_BeepOff:	
 13838                           
 13839                           	psect	text2224
 13840  0000                     __ptext2224:	
 13841 ;; =============== function i1_BeepOff ends ============
 13842                           
 13843  007E                     btemp	set	126	;btemp
 13844  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Dec 27 15:27:42 2013

                        _RF_PowerBuf 0030                                    pc 0002  
                  _gb_WorkmodeBackup 005E           __end_of_RFM98_LoRaRxPacket 09A8  
                     ___bmul@product 0073                         ?_LCD_Display 0070  
                   _gb_PowerBuf_Addr 0056                                   _RD 0CA8  
                                 _WR 0CA9           __end_of_RFM98_LoRaTxPacket 1474  
             __end_of_LCD_DisplayAll 02C3                                  _GIE 005F  
                                _RA0 0060                                  _RA1 0061  
                                _RB0 0068                                  _RB1 0069  
                                _RB2 006A                                  _RB3 006B  
                                _RA5 0065                                  _RC2 0072  
                  _RFParameterSelect 03C3                                  _RD1 0079  
                                _RC3 0073                                  _RB5 006D  
                                _RE0 0080                                  _RD2 007A  
                                _RC4 0074                                  _RD3 007B  
                                _RC5 0075                                  _RE2 0082  
                                _RD4 007C                                  _RD5 007D  
                                _RD6 007E                                  _RD7 007F  
                                _PR2 001B          __end_of_InitSystemParameter 12C7  
                                wreg 0009                   ?_RFParameterSelect 0070  
                RFM98_Running@RxFlag 0069                          KeyRead@temp 0072  
                RFM98_Running@TxFlag 0068              __size_of_WorkModeSelect 0195  
                        KeyScan@temp 0074                                 l1143 023C  
                               l1151 0000                                 l1145 0000  
                               l1155 06CD                                 l1148 0000  
                               l1156 06C4                                 l1158 0000  
                               l2320 0306                                 l2321 0000  
                               l2313 02EA                                 l2315 02F2  
                               l2316 02F4                                 l2340 028C  
                               l2420 033C                                 l2317 02FC  
                               l2341 028E                                 l2421 0341  
                               l2318 0000                                 l2342 0000  
                               l2430 036A                                 l2422 0346  
                               l2350 0000                                 l2319 0304  
                               l2431 036F                                 l2423 034B  
                               l2440 039A                                 l2432 0374  
                               l2424 0350                                 l2441 039F  
                               l2433 0379                                 l2425 0355  
                               l2338 0284                                 l2442 03A4  
                               l2434 037E                                 l2426 035A  
                               l2339 0000                                 l2443 03A9  
                               l2435 0384                                 l2427 0360  
                               l2419 0337                                 l2347 0000  
                               l2444 03AE                                 l2436 0386  
                               l2428 0362                                 l2460 1308  
                               l2445 03B3                                 l2437 038B  
                               l2429 0368                                 l2358 0000  
                               l2446 03B8                                 l2438 0390  
                               l2470 1329                                 l2462 130F  
                               l2534 0000                                 l2447 03BD  
                               l2439 0395                                 l2527 0000  
                               l4071 0620                                 l2472 132F  
                               l2464 1316                                 l4056 05BF  
                               l4065 05F2                                 l4049 058E  
                               l4090 0000                                 l2459 131D  
                               l2539 0000                                 l4075 06EF  
                               l2468 1323                                 l4068 0611  
                               l4085 0000                                 l5301 0000  
                               l5310 0000                                 l4078 0000  
                               l4095 02B2                                 l5304 0000  
                               l5320 0000                                 l4097 0000  
                               l5314 09F6                                 l5307 0000  
                               l3804 0000                                 l5412 1625  
                               l3821 0133                                 l5413 0000  
                               l5501 0000                                 l3814 0000  
                               l3902 0B20                                 l5430 0000  
                               l5414 162E                                 l5342 17FE  
                               l3823 0135                                 l5415 0000  
                               l3824 013E                                 l3904 0B23  
                               l3825 014E                                 l3905 0B27  
                               l5433 1570                                 l5353 0000  
                               l5409 0000                                 l3818 016B  
                               l3826 0150                                 l3930 0000  
                               l3842 0000                                 l3906 0B2C  
                               l5418 163E                                 l5370 08F7  
                               l5434 0000                                 l5338 0000  
                               l3827 0153                                 l3907 0B6B  
                               l5435 1579                                 l5356 0000  
                               l5436 0000                                 l5452 0000  
                               l3845 124E                                 l3917 0C93  
                               l5461 0000                                 l5366 0000  
                               l3847 1288                                 l5359 0000  
                               l3919 0C61                                 l5447 0000  
                               l5439 1589                                 l3935 03DE  
                               l5471 147F                                 l5393 0000  
                               l5481 14AE                                 l3858 129D  
                               l5298 0000                                 l3797 0000  
                               l5397 0A0B                                 l3986 048B  
                               l6651 09DB                                 l6644 09C9  
                               l6652 0000                                 l6661 16F1  
                               l6645 0000                                 l6662 0000  
                               l6646 09CE                                 l6663 16F6  
                               l6647 09CF                                 l6655 0000  
                               l6664 16F7                                 l6648 0000  
                               l6665 0000                                 l6673 09C2  
                               l6681 0958                                 l6658 0000  
                               l7921 0000                                 l7915 0000  
                               l7924 0000                                 l7918 0000  
                               l7927 0000                                 l7952 0000  
                               l7946 0000                                 l7968 0000  
                               _CFGS 0CAE                                 l7978 0000  
                               STR_1 19E6                                 STR_2 19CA  
                               STR_3 19ED                                 STR_4 19C3  
                               STR_5 197D                                 STR_6 19B5  
                               STR_7 1999                                 STR_8 19DF  
                               STR_9 19A7                                 _FREE 0CAC  
                               _LATA 010C                                 _LATB 010D  
                               _LATC 010E                                 _LATD 010F  
                               _LATE 0110                                 _RCIE 048D  
                               _PCON 0096                                 _PIR1 0011  
                               _PIR2 0012                                 u9055 0F28  
                               u9215 0D2D                                 u9095 0F49  
                               u8720 013B                                 u9195 0D10  
                               u8740 0144                                 u8750 014B  
                               u8754 0146                                 _LWLO 0CAD  
                ??_RFParameterSelect 0060                                 _TXIE 048C  
                               _WREN 0CAA                                 _WPUB 020D  
                               _WPUE 0210            SendNumberToDispBuf@length 0066  
                               _main 00BD                      __end_of_SPIRead 171A  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                      _gb_FreqBuf_Addr 004F  
                    __end_of_BeepOff 0189                     ?_RFM98_EntryLoRa 0070  
__size_of_ModuleSelectModeEntryCheck 0039                    RFM98_TestConfig@i 0060  
                               start 0096               RFM98_LoRaTxPacket@addr 0062  
                    __end_of_Clr_LCD 02DB                  __end_of_FlashUnlock 06D9  
                      _gw_TxLedTimer 0040                    ___bmul@multiplier 0074  
                       ?_RFM98_Sleep 0070                      __end_of_KeyRead 0725  
                    __end_of_KeyScan 0719                                S17147 07C4  
                    __end_of_InitSfr 01A2                        _gw_TimerCount 00E2  
                   __end_of_LCD_Init 0277            __end_of_RFParameterSelect 048C  
                              l15001 0000                                l15011 0000  
                              l15003 0000                                l15021 0000  
                              l15013 0000                                l15005 0000  
                              l15023 0000                                l15015 0000  
                              l15007 0000                                l15031 0000  
                              l15111 0000                                l14401 0000  
                              l15025 0000                                l15017 0000  
                              l15009 0000                                l15033 0000  
                              l15041 0000                                l15113 0F2F  
                              l15105 0F20                                l15121 0000  
                              l15201 0000                                l14411 0000  
                              l15027 0000                                l15019 0000  
                              l15035 0000                                l15043 0000  
                              l15051 0000                                l15115 0000  
                              l15107 0000                                l15203 0000  
                              l15211 0C9D                                l16003 0000  
                              l14413 0000                                l14421 0000  
                              l15029 0000                                l15037 0000  
                              l15061 0000                                l15053 0000  
                              l15045 0000                                l15117 0F33  
                              l15133 0F4F                                l15141 0000  
                              l15205 0000                                l15221 0CA3  
                              l15213 0C9F                                l15301 0000  
                              l16013 0000                                l16005 0000  
                              l14407 0000                                l14415 0000  
                              l14423 0000                                l15039 0000  
                              l15055 0000                                l15047 0000  
                              l15071 0000                                l15063 0000  
                              l15135 0000                                l15151 0000  
                              l15143 0000                                l15207 0000  
                              l15231 0CC0                                l15311 0DAD  
                              l15303 0000                                l16031 0000  
                              l16023 0000                                l16015 0000  
                              l16103 03E5                                l14409 0000  
                              l14417 0000                                l14425 0000  
                              l15057 0000                                l15049 0000  
                              l15073 0000                                l15065 1702  
                              l15129 0F43                                l15137 0F53  
                              l15153 0000                                l15145 0000  
                              l15161 0000                                l15209 0000  
                              l15321 0000                                l15401 030D  
                              l16009 0000                                l16041 0000  
                              l16033 1582                                l16025 0000  
                              l16017 0000                                l16121 0404  
                              l16113 03F4                                l16201 0000  
                              l17001 0000                                l14419 0000  
                              l14427 0000                                l14451 0000  
                              l14603 133A                                l15059 0000  
                              l15155 0000                                l15147 0000  
                              l15163 0000                                l15251 0000  
                              l15235 0000                                l15219 0CA1  
                              l15323 0000                                l15307 0DA0  
                              l15315 0DBC                                l15411 0000  
                              l15403 0000                                l16123 0000  
                              l16107 03EB                                l16211 0000  
                              l17003 1504                                l17011 0000  
                              l14437 0000                                l14429 0000  
                              l14461 0000                                l14453 0000  
                              l14621 0000                                l14613 1343  
                              l14605 0000                                l15149 0000  
                              l15181 0000                                l15165 0000  
                              l15157 0000                                l15261 0000  
                              l15253 0CFC                                l15245 0CFA  
                              l15237 0CEA                                l15229 0CA6  
                              l15333 0E02                                l15325 0000  
                              l15341 0E1E                                l15413 0000  
                              l16133 0415                                l16117 03FF  
                              l16221 0000                                l16205 0000  
                              l16301 04DA                                l17021 0000  
                              l17013 0000                                l17005 0000  
                              l14447 0000                                l14439 0000  
                              l14455 0000                                l14711 13A3  
                              l14615 0000                                l14607 0000  
                              l15095 0000                                l15191 06C9  
                              l15175 06AF                                l15167 0000  
                              l15159 0000                                l15263 0000  
                              l15255 0D1B                                l15351 0000  
                              l15327 0000                                l15319 0000  
                              l15423 0323                                l15431 0000  
                              l15503 0000                                l16071 0000  
                              l16055 158E                                l16047 0000  
                              l16143 0423                                l16135 0418  
                              l16127 040D                                l16119 0402  
                              l16231 0000                                l16207 11DF  
                              l16215 11E9                                l17031 0000  
                              l17023 0000                                l17015 0000  
                              l17007 0000                                l14457 0000  
                              l14449 0000                                l14481 0EEF  
                              l14721 13C3                                l14713 0000  
                              l14705 139B                                l14641 1361  
                              l14625 1350                                l14617 0000  
                              l14801 0725                                l15097 0000  
                              l15185 0000                                l15177 0000  
                              l15169 0000                                l15193 02C3  
                              l15265 0D20                                l15257 0000  
                              l15249 0000                                l15361 0E5D  
                              l15353 0000                                l15337 0E0F  
                              l15329 0000                                l15425 0000  
                              l15417 0000                                l15409 0310  
                              l15441 0705                                l15433 0000  
                              l15505 09B3                                l15521 0944  
                              l15513 0000                                l15601 0000  
                              l16081 15B8                                l16057 0000  
                              l16049 0000                                l16161 044A  
                              l16145 0426                                l16137 041A  
                              l16129 0000                                l16241 1218  
                              l16233 0000                                l16225 11FB  
                              l16209 11E1                                l16313 04EE  
                              l17033 0000                                l17025 0000  
                              l17017 0000                                l17009 0000  
                              l14467 0000                                l14459 0000  
                              l14491 0F07                                l14475 0EE1  
                              l14731 0000                                l14723 0000  
                              l14715 0000                                l14707 0000  
                              l14651 0000                                l14643 0000  
                              l14635 1359                                l14627 0000  
                              l14619 134B                                l14571 0000  
                              l14563 12F6                                l14555 0000  
                              l14803 0000                                l15187 0000  
                              l15179 0000                                l15371 0000  
                              l15355 0000                                l15347 0000  
                              l15275 0D3D                                l15267 0000  
                              l15427 0000                                l15451 0716  
                              l15435 0000                                l15515 0000  
                              l15507 0000                                l15523 0000  
                              l15531 065F                                l15611 0A6E  
                              l15603 0000                                l16083 0000  
                              l16075 0000                                l16067 15A0  
                              l16059 0000                                l16171 0457  
                              l16163 0000                                l16147 0428  
                              l16139 0000                                l16155 0431  
                              l16091 0000                                l16251 0000  
                              l16219 0000                                l16403 0588  
                              l16323 04FF                                l16307 04E4  
                              l17035 0000                                l17043 00F9  
                              l17027 00D4                                l17019 0000  
                              l14397 0000                                l14469 0000  
                              l14741 0000                                l14717 0000  
                              l14709 0000                                l14661 136F  
                              l14653 0000                                l14637 0000  
                              l14629 0000                                l14565 0000  
                              l14805 0000                                l14821 0000  
                              l14901 0000                                l15189 0000  
                              l15373 0000                                l15357 0000  
                              l15349 0000                                l15365 0E6A  
                              l15293 0000                                l15277 0D3F  
                              l15269 0D3B                                l15285 0D42  
                              l15429 0000                                l15461 0000  
                              l15525 0000                                l15541 0000  
                              l15533 0000                                l15701 0000  
                              l15621 0000                                l15613 0000  
                              l15605 0000                                l16085 0000  
                              l16069 0000                                l16173 0000  
                              l16149 0000                                l16157 043F  
                              l16093 0000                                l16229 0000  
                              l16253 122C                                l16421 05A8  
                              l16341 051A                                l16325 0000  
                              l16261 0000                                l16501 0000  
                              l17045 0000                                l17053 010A  
                              l17037 0000                                l17029 0000  
                              l14399 0000                                l14495 0F11  
                              l14487 0EFD                                l14751 0000  
                              l14743 13DB                                l14727 13C8  
                              l14719 13BB                                l14663 0000  
                              l14655 136E                                l14639 0000  
                              l14583 0000                                l14575 0000  
                              l14567 0000                                l14911 062D  
                              l15199 02C5                                l15391 0000  
                              l15383 0EA1                                l15375 0000  
                              l15295 0000                                l15287 0D59  
                              l15455 0717                                l15439 0000  
                              l15447 0710                                l15471 0000  
                              l15463 0000                                l15519 0000  
                              l15527 0000                                l15551 0000  
                              l15543 0000                                l15535 0000  
                              l17143 0B44                                l15711 0B54  
                              l15703 0000                                l15631 0000  
                              l15623 0000                                l15615 0000  
                              l16183 0468                                l16167 0452  
                              l16191 0470                                l16095 0000  
                              l16255 0000                                l16239 0000  
                              l16415 059E                                l16335 0510  
                              l16319 04F9                                l16263 0000  
                              l16503 0000                                l16511 0000  
                              l17071 0000                                l17055 0000  
                              l17047 0000                                l17039 0000  
                              l17063 0118                                l14761 0000  
                              l14753 0000                                l14745 0000  
                              l14737 13D3                                l14729 0000  
                              l14673 137C                                l14665 0000  
                              l14649 1365                                l14569 12FE  
                              l14833 0157                                l14825 0000  
                              l14841 0000                                l14913 0000  
                              l14905 0000                                l14921 0000  
                              l15393 0000                                l15377 0000  
                              l15297 0000                                l15481 0000  
                              l15529 0000                                l15561 0000  
                              l15545 0000                                l15537 0000  
                              l15713 0000                                l17145 0B4C  
                              l15705 0000                                l15633 0000  
                              l15625 0000                                l15617 0000  
                              l16185 0000                                l16177 0460  
                              l16169 0455                                l16193 047E  
                              l16089 0000                                l16249 1229  
                              l16433 05B9                                l16409 0594  
                              l16441 05C6                                l16353 052F  
                              l16329 0506                                l16281 04B9  
                              l16273 0000                                l16265 0000  
                              l16257 0000                                l16505 0000  
                              l16521 0000                                l16513 0000  
                              l16601 0000                                l17057 010E  
                              l17049 0000                                l14499 0000  
                              l14763 0000                                l14739 0000  
                              l14691 0000                                l14683 1385  
                              l14675 0000                                l14667 1377  
                              l14587 0000                                l14579 0000  
                              l14827 0000                                l14835 016C  
                              l14819 0000                                l14843 0000  
                              l14851 0000                                l14907 0000  
                              l14923 16EC                                l15395 0000  
                              l15379 0000                                l15387 0EAE  
                              l15299 0000                                l15467 0228  
                              l15459 0000                                l15475 171A  
                              l15483 0000                                l15491 0000  
                              l15547 0000                                l15539 0000  
                              l15731 0000                                l15723 0000  
                              l15651 0A85                                l15635 0000  
                              l15627 0000                                l15619 0000  
                              l15571 0A3F                                l15563 0000  
                              l16179 0000                                l16451 0000  
                              l16427 05B2                                l16443 05D2  
                              l16347 0524                                l16275 04A6  
                              l16259 0000                                l16283 04BA  
                              l16507 0000                                l16531 0000  
                              l16515 0000                                l16611 0000  
                              l16603 0000                                l17059 0000  
                              l17067 011A                                l14749 13E0  
                              l14685 0000                                l14677 0000  
                              l14669 0000                                l14597 1335  
                              l14845 017C                                l14861 126D  
                              l14909 0650                                l14917 0000  
                              l14933 0000                                l14925 0000  
                              l15469 0000                                l15477 0000  
                              l15485 0000                                l15557 068C  
                              l15549 0000                                l15741 0000  
                              l15725 0000                                l15733 0BA3  
                              l15717 0B6D                                l15709 0B31  
                              l15661 0A99                                l15653 0A89  
                              l15645 0A77                                l15637 0000  
                              l15629 0000                                l15581 0000  
                              l16197 0000                                l16453 0000  
                              l16373 0000                                l16357 0535  
                              l16293 04CF                                l16365 053D  
                              l16277 04AC                                l16269 049B  
                              l16517 0962                                l16509 0000  
                              l16613 0000                                l16605 0000  
                              l16621 1443                                l14759 13EB  
                              l14695 1392                                l14687 0000  
                              l14599 0000                                l14767 13F3  
                              l14783 02B7                                l14839 0000  
                              l14919 0000                                l14935 0000  
                              l14951 0000                                l15399 0000  
                              l15479 0000                                l15487 0000  
                              l15559 0000                                l15751 0000  
                              l15743 0000                                l15727 0000  
                              l15671 0AAE                                l15663 0A9D  
                              l15655 0A8D                                l15647 0A7D  
                              l15639 0000                                l15591 0000  
                              l15583 0000                                l15575 0A4B  
                              l15567 0A33                                l15831 0000  
                              l15823 0000                                l15911 0000  
                              l15903 0000                                l16199 0000  
                              l16471 0000                                l16463 05F8  
                              l16455 05E9                                l16391 0573  
                              l16375 0559                                l16359 0000  
                              l16295 0000                                l16367 0549  
                              l16551 0994                                l16543 0000  
                              l16535 0000                                l16527 0967  
                              l16631 0000                                l16623 0000  
                              l16615 0000                                l16607 0000  
                              l16711 0000                                l16703 0000  
                              l14697 0000                                l14689 138D  
                              l14769 13FE                                l14785 0000  
                              l14777 0000                                l14881 12B0  
                              l14873 129B                                l14865 0000  
                              l14857 0000                                l14849 1235  
                              l14945 0000                                l14937 0000  
                              l14953 0000                                l15497 0000  
                              l15761 0000                                l15753 0000  
                              l15745 0000                                l15729 0000  
                              l15665 0AA1                                l15657 0A91  
                              l15649 0A81                                l15593 0000  
                              l15585 0000                                l15841 0000  
                              l15833 02A1                                l15825 0000  
                              l15921 0000                                l15905 0000  
                              l15913 169A                                l16481 0000  
                              l16465 0604                                l16457 05F0  
                              l16385 0569                                l16289 04C9  
                              l16545 0000                                l16529 0000  
                              l16641 0000                                l16633 1452  
                              l16617 0000                                l16713 0000  
                              l16801 0000                                l14699 0000  
                              l14787 0000                                l14875 12A0  
                              l14963 0000                                l14947 0000  
                              l14971 0000                                l15499 0000  
                              l15771 0C20                                l15763 0000  
                              l15755 0000                                l15747 0000  
                              l15739 0000                                l15683 0AC5  
                              l15675 0AB9                                l15667 0AA5  
                              l15659 0A95                                l15595 0000  
                              l15587 0000                                l15579 0A5A  
                              l15827 0000                                l15931 0000  
                              l15907 0000                                l15923 16C6  
                              l15851 0000                                l15843 0000  
                              l16475 0000                                l16459 05F5  
                              l16379 055F                                l16491 0000  
                              l16483 0000                                l16539 0985  
                              l16643 0000                                l16651 1472  
                              l16619 0000                                l16731 0000  
                              l16811 0000                                l16803 0910  
                              l14797 073D                                l14893 12C1  
                              l14885 12B6                                l14869 1292  
                              l14949 0000                                l14981 0000  
                              l14973 0000                                l15757 0000  
                              l15749 0BDD                                l15669 0AA9  
                              l15597 0000                                l15589 0000  
                              l15693 0AD2                                l15829 0000  
                              l15933 0000                                l15917 0000  
                              l15909 0000                                l15861 1637  
                              l15853 0000                                l15845 0000  
                              l16469 060A                                l16397 057D  
                              l16493 0000                                l16485 0000  
                              l16557 0000                                l16581 0000  
                              l16645 0000                                l16629 0000  
                              l16725 08C4                                l16717 0000  
                              l16709 08B3                                l16813 091B  
                              l16805 0000                                l14799 0000  
                              l14895 0000                                l14887 0000  
                              l14879 12A3                                l14991 0000  
                              l14983 0000                                l14975 0000  
                              l14967 0000                                l15775 0000  
                              l15767 0000                                l15687 0ACB  
                              l15679 0ABF                                l15599 0000  
                              l15695 0B04                                l15839 02AF  
                              l15943 16DE                                l15919 0000  
                              l15951 0000                                l16479 0618  
                              l16495 0000                                l16487 0000  
                              l16591 0000                                l16583 0000  
                              l16575 0000                                l16647 0000  
                              l16639 0000                                l16655 0000  
                              l16719 0000                                l16751 0000  
                              l16823 0000                                l16831 0000  
                              l16903 06E4                                l14897 0000  
                              l14889 12BB                                l14993 0000  
                              l14985 0000                                l14977 0000  
                              l14969 0000                                l15769 0000  
                              l15777 0C34                                l15785 0C49  
                              l15697 0000                                l15945 0000  
                              l15937 0000                                l15929 16C7  
                              l15881 0000                                l15961 0000  
                              l16497 0000                                l16489 0000  
                              l16593 0000                                l16585 0000  
                              l16577 0000                                l16649 0000  
                              l16681 0000                                l16665 153F  
                              l16657 0000                                l16761 0000  
                              l16825 0000                                l16817 0000  
                              l16841 17B4                                l16833 0000  
                              l16921 148A                                l16913 147A  
                              l14899 0621                                l14995 0000  
                              l14987 0000                                l14979 0000  
                              l15795 0000                                l15779 0000  
                              l15699 0B11                                l15947 0000  
                              l15891 0000                                l15875 0000  
                              l15859 0000                                l15955 0000  
                              l15963 0000                                l15971 0000  
                              l16499 0000                                l16595 0000  
                              l16587 0000                                l16579 0000  
                              l16667 0000                                l16659 0000  
                              l16691 0000                                l16771 0000  
                              l16819 092B                                l16827 0936  
                              l16851 0000                                l16843 0000  
                              l16835 0000                                l16907 06ED  
                              l16931 0000                                l14989 0000  
                              l14997 0000                                l15949 16EB  
                              l15877 0000                                l15869 0000  
                              l15965 0000                                l15981 0000  
                              l16597 0000                                l16589 0000  
                              l16685 0000                                l16677 1559  
                              l16669 0000                                l16693 0000  
                              l16781 0000                                l16773 0000  
                              l16757 150B                                l16749 0000  
                              l16853 0000                                l16845 0000  
                              l16861 0000                                l16933 1499  
                              l16925 148E                                l16917 0000  
                              l16909 0000                                l14999 0000  
                              l15799 0000                                l15895 0000  
                              l15887 1648                                l15959 0000  
                              l15967 0000                                l15975 0000  
                              l15991 0000                                l15983 0000  
                              l16599 0000                                l16687 0000  
                              l16679 0000                                l16695 0000  
                              l16759 0000                                l16791 0000  
                              l16783 0000                                l16863 0000  
                              l16855 0000                                l16951 14B2  
                              l16943 14AB                                l16927 0000  
               AsciiToDisplay@Letter 0073                                l15897 0000  
                              l15889 0000                                l15977 0000  
                              l15985 0000                                l16689 0000  
                              l16697 0000                                l16777 0000  
                              l16769 1525                                l16785 0000  
                              l16849 0000                                l16857 0000  
                              l16865 0000                                l16961 0000  
                              l16953 0000                                l16945 0000  
                              l16929 0000                                l16937 149F  
                              l15899 0000                                l15987 0000  
                              l15995 0000                                l16699 08AE  
                              l16779 0000                                l16795 0000  
                              l16787 0000                                l16859 0000  
                              l16883 0000                                l16875 17D3  
                              l16867 0000                                l16891 0000  
                              l16963 14C0                                l16955 14B5  
                              l16947 0000                                l16939 14A7  
                              l15989 0000                                l16797 0000  
                              l16789 0000                                l16885 0000  
                              l16877 0000                                l16869 0000  
                              l16893 0000                                l16957 0000  
                              l16981 14E4                                l15999 0000  
                              l16799 0000                                l16887 0000  
                              l16879 0000                                l16895 0000  
                              l16991 14F2                                l16975 14DA  
                              l16959 0000                                l16967 14C7  
                              l16889 0000                                l16897 0000  
                              l16993 14F5                                l16969 14CF  
                              l16899 0000                                l16997 0000  
                              l16989 0000                                l16999 14FC  
                              ?_main 0070                           _FlashErase 0695  
                    ?_LCD_DisplayAll 0070                                STR_10 198B  
                              STR_11 19D1                                STR_20 19F4  
                              STR_12 19AE                                STR_21 19F6  
                              STR_13 1992                                STR_22 19F5  
                              STR_14 19D8                                STR_23 19F4  
                              STR_15 19BC                                STR_24 19F5  
                              STR_16 19A0                                STR_25 19F5  
                              STR_17 1984                                STR_18 197D  
                              STR_19 1976                    ?_RFM98_FskEntryRx 0070  
                  ?_RFM98_FskEntryTx 0070                                _T1CON 0018  
                              _T2CON 001C                                _LATD0 0878  
                    __end_of___lwdiv 0F38                      __end_of___lwmod 0F58  
                              _PMADR 0191                                _PMDAT 0193  
                         _FlashWrite 06A4                                _RCSTA 019D  
                              _TMR1H 0017                                _TMR1L 0016  
                 __size_ofi1_BeepOff 0007                                _PORTA 000C  
                              _PORTB 000D                                _PORTC 000E  
                              _PORTD 000F                                _PORTE 0010  
                              _TRISA 008C                                _TRISB 008D  
                              _TRISC 008E                                _TRISD 008F  
                              _TRISE 0090                                _TXSTA 019E  
                 ??_RFM98_FskEntryRx 0063                   ??_RFM98_FskEntryTx 0063  
       __size_of_SendNumberToDispBuf 019A                   __size_of_ISR_timer 0092  
                      ??_ModemSelect 0060                 __end_of_FlashDisplay 1402  
                        ?_SPICmd8bit 0070              SendNumberToDispBuf@addr 0068  
            __end_of_CK1622_WriteCmd 0296                     __end_of_SPIWrite 1700  
                     _AsciiToDisplay 0ED2               __size_of_RFM98_Standby 0005  
                       LCD_Display@i 0077              SendNumberToDispBuf@temp 0067  
             __size_of_RFM98_Running 0093                          BurstWrite@i 0061  
                              wtemp0 007E                     __end_of_Delay_ms 0748  
                         _RxLED_Deal 0178                        ?_RFM98_Config 0070  
     __size_of_RFM98_FSKRxWaitStable 0015        __end_of_RFM98_FSKRxWaitStable 08F8  
             WorkModeSelect@KeyValue 0062                 _SendSegDataToDispBuf 0333  
                         _MenuConfig 06D9                        ?_RFM98_TestRx 0070  
                      ?_RFM98_TestTx 0070                         __end_of_main 0122  
                         _BurstWrite 0938                     CK1622_WriteCmd@i 0075  
                         _TxLED_Deal 0122                    _RFM98_LoRaEntryRx 15F0  
                  _RFM98_LoRaEntryTx 15C6                     __end_of_InitPort 01D6  
         __end_of_DisplayRFParameter 0C99                         _gb_ErrorFlag 004C  
                CK1622_WriteCmd@temp 0073                   ?_RFM98_LoRaEntryRx 0070  
                 ?_RFM98_LoRaEntryTx 0070                               ??_main 007A  
            ?_RFM98_LoRaRxWaitStable 0070              SaveRFParameterToFlash@i 0079  
                 __size_of_FlashRead 001D             ??_SaveRFParameterToFlash 0079  
                ??_RFM98_LoRaEntryRx 007A                  ??_RFM98_LoRaEntryTx 007A  
                CK1622_WriteByte@dat 0072                               _ADCON0 009D  
             __end_of_AsciiToDisplay 0F13                            ??_SPIRead 0074  
                             _APFCON 011D                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELC 018E  
                             _ANSELD 018F                               _ANSELE 0190  
                      _gb_BeepOnFlag 0046                               _BORCON 0116  
                          ??_BeepOff 0072                        SPIBurstRead@i 0078  
                             i1l4090 0000                               i1l7930 008C  
                             i1l7931 0010                               i1l7941 008B  
                             _INTCON 000B                               i1l7937 004B  
                             _FVRCON 0117                    _RFM98_FskRxPacket 08A6  
                        _FlashUnlock 06D1                            ??_Clr_LCD 0077  
                             _PMDATH 0194                               _PMDATL 0193  
                             _PMCON2 0196                               _OSCCON 0099  
                      _gb_BeepTimerH 0047                        _gb_BeepTimerL 0048  
                _SendStringToDispBuf 0C99                               _TMR1IE 0488  
                             _TMR1IF 0088                               _TMR2IE 0489  
                             _TMR2IF 0089                               _SPBRGH 019C  
                             _TMR1ON 00C0                               _SPBRGL 019B  
                             _WDTCON 0097                    _RFM98_FskTxPacket 08F8  
                             _TRISA1 0461                               _TRISA5 0465  
                             _TRISD0 0478                               _TRISE0 0480  
                             _TRISE1 0481                               _TRISE2 0482  
                             _TRISC6 0476                               _TRISC7 0477  
                  ?_RFM98_TestConfig 0070                               _BeepOn 0621  
                 ?_RFM98_FskRxPacket 0070                            ??_KeyRead 0072  
                          ??_KeyScan 0073                            ??_InitSfr 0072  
                __end_of_ModemSelect 1235                       ??_RFM98_Config 0078  
                 ?_RFM98_FskTxPacket 0070                    __end_ofi1_BeepOff 07DF  
                 ??_RFM98_TestConfig 0078       __size_of_RFM98_FSKTxWaitStable 0015  
              ?_SendSegDataToDispBuf 0070        __end_of_RFM98_FSKTxWaitStable 0A0C  
                     ??_RFM98_TestRx 0078                       ??_RFM98_TestTx 0078  
          __end_of_RFM98_LoRaEntryRx 1620            __end_of_RFM98_LoRaEntryTx 15F0  
                             ___bmul 1700              __size_of_RFM98_ReadRSSI 0008  
                  __end_of_ISR_timer 0096                  ??_RFM98_FskRxPacket 0079  
                       ?_timer1_init 0070                            ??___lwdiv 0076  
                ??_RFM98_FskTxPacket 0079                         ?_timer2_init 0070  
                          ??___lwmod 0079                        _RFM98PowerTbl 1873  
     __end_of_RFM98_LoRaRxWaitStable 09F7                        _RFM98_Standby 171A  
         __size_of_RFParameterSelect 00C9                 ?_SendStringToDispBuf 0074  
                      _RFM98_Running 1474                  __size_of_SPICmd8bit 0012  
                        ?_FlashErase 0072                 __size_of_LCD_Display 0026  
                             clrloop 07E0              ?_RFM98_LoRaTxWaitStable 0070  
                 __size_of_Uart_init 0011                          ?_FlashWrite 0072  
           __end_of_CK1622_WriteByte 030D             RFM98_LoRaTxPacket@TxFlag 0063  
                  _RFM98_EntryTestRx 17CE                    _RFM98_EntryTestTx 17AD  
                     _WorkModeSelect 048C                      ?_AsciiToDisplay 0070  
          __end_of_RFM98_FskRxPacket 08D8                   ?_RFM98_EntryTestRx 0070  
                 ?_RFM98_EntryTestTx 0070            __end_of_RFM98_FskTxPacket 0938  
                   ?_CK1622_WriteCmd 0070                            ?_LCD_Init 0070  
                       ?_SPIRead8bit 0070                      _gb_RateBuf_Addr 0057  
                  RFM98_Running@RSSI 006A            RFParameterSelect@KeyValue 0064  
                ??_RFM98_EntryTestRx 007A                  ??_RFM98_EntryTestTx 007A  
                        ?_RxLED_Deal 0070                    RFM98_Running@mode 006B  
                  RFM98_Running@temp 006C                  ___bmul@multiplicand 0072  
                  __end_of_FlashRead 0252                           _gb_RF_RSSI 005F  
                 _RFM98_LoRaClearIrq 171F                       __pcstackCOMMON 0070  
                        ?_MenuConfig 0070                     _gw_SendDataCount 003E  
                        ?_BurstWrite 0074                       ?_RFM98_Standby 0070  
                        ?_TxLED_Deal 0070                 __size_of_RFM98_Sleep 0005  
              ??_SendStringToDispBuf 0060                       ?_RFM98_Running 0066  
     __end_of_RFM98_LoRaTxWaitStable 1800              RFM98_FskTxPacket@TxFlag 0079  
                ?_RFM98_LoRaClearIrq 0070                   _RFM98_LoRaReadRSSI 1731  
                          ?_SPIWrite 0075                   _RFM98_FskClearFIFO 08D8  
                  CK1622_WriteByte@i 0076            __end_of_RFM98_EntryTestRx 17E7  
          __end_of_RFM98_EntryTestTx 17C8               __end_of_WorkModeSelect 0621  
              __size_of_FlashDisplay 0112                            ?_Delay_ms 0072  
          SendStringToDispBuf@datBuf 0074                     RFM98_Config@mode 0060  
                 _RFM98_LoRaRxPacket 095A      __size_of_SaveRFParameterToFlash 0036  
                ?_RFM98_LoRaReadRSSI 0070                 SendStringToDispBuf@i 0077  
               SendStringToDispBuf@j 0076            SendStringToDispBuf@length 0078  
                  _gb_ModuleWorkMode 0054                   _RFM98_LoRaTxPacket 1425  
                ?_RFM98_FskClearFIFO 0070                        _gb_Modem_Addr 007A  
                        _ModemSelect 11D1                           __pbssBANK0 0020  
                         __pbssBANK1 00A0                           __pbssBANK2 0120  
                         __pbssBANK3 01A0                 ??_RFM98_LoRaClearIrq 0078  
                          ?_InitPort 0070                  ?_RFM98_LoRaRxPacket 0070  
                         ??_LCD_Init 0079                         _DispBufCache 00C0  
             AsciiToDisplay@DispData 0072                  ?_RFM98_LoRaTxPacket 0070  
                            ?_BeepOn 0072                  __size_of_FlashErase 000F  
                  __end_of_Uart_init 01FC                       FlashRead@array 0076  
             ??_SendSegDataToDispBuf 0072                  __size_of_FlashWrite 002D  
                _SendNumberToDispBuf 0D38                           __pmaintext 00BD  
               ??_RFM98_LoRaReadRSSI 0076           __size_of_RFM98_LoRaEntryRx 0030  
         __size_of_RFM98_LoRaEntryTx 002A                              ?___bmul 0072  
                   ??_LCD_DisplayAll 0072                 ??_RFM98_FskClearFIFO 0078  
               CK1622_WriteByte@addr 0073                           __pintentry 0004  
               CK1622_WriteByte@temp 0074                         _FlashDisplay 12F0  
                         __ptext2200 01E1                           __ptext2201 01D6  
                         __ptext2210 0178                           __ptext2202 01A2  
                         __ptext2211 0122                           __ptext2203 0189  
                         __ptext2220 06D1                           __ptext2212 0719  
                         __ptext2204 09D6                           __ptext2221 0235  
                         __ptext2213 0725                           __ptext2205 09C4  
                         __ptext2214 02B6                           __ptext2206 16EC  
                         __ptext2150 1474                           __ptext2223 07D8  
                         __ptext2215 12F0                           __ptext2207 0181  
                         __ptext2151 06D9                              _BAUDCON 019F  
                         __ptext2224 0000                           __ptext2216 0333  
                         __ptext2208 0621                           __ptext2160 1425  
                         __ptext2152 089D                           __ptext2217 0ED2  
                         __ptext2209 1235                           __ptext2161 15C6  
                         __ptext2153 17CE                           __ptext2218 0277  
                         __ptext2170 1724                           __ptext2162 095A  
                         __ptext2154 173B                           __ptext2219 02DB  
                         __ptext2171 17ED                           __ptext2163 15F0  
                         __ptext2155 17AD                           __ptext2180 08D8  
                         __ptext2172 1731                           __ptext2164 048C  
                         __ptext2156 08F8                           __ptext2181 0938  
                         __ptext2173 09E5                           __ptext2165 11D1  
                         __ptext2157 1507                           __ptext2190 030D  
                         __ptext2182 09A8                           __ptext2174 1620  
                         __ptext2166 03C3                           __ptext2158 08A6  
                         __ptext2191 0D38                           __ptext2183 1711  
                         __ptext2175 0296                           __ptext2167 156D  
                         __ptext2159 1539                           __ptext2192 0C99  
                         __ptext2184 171F                           __ptext2176 0A2F  
                         __ptext2168 09F7                           __ptext2193 02C3  
                         __ptext2185 172C                           __ptext2177 065F  
                         __ptext2169 08E3                           __ptext2194 06A4  
                         __ptext2186 170C                           __ptext2178 0258  
                         __ptext2195 0695                           __ptext2187 171A  
                         __ptext2179 0252                           __ptext2196 0F38  
                         __ptext2188 01FC                           __ptext2197 0F13  
                         __ptext2189 06F3                           __ptext2198 1700  
                         __ptext2199 01EB                       _MusicTab_KeyOK 191A  
               ??_RFM98_LoRaRxPacket 0079                       _MusicTab_Error 1906  
                      _gb_TxLedCount 005C                           ??_SPIWrite 0077  
                            BeepOn@i 0079                 ??_RFM98_LoRaTxPacket 0079  
                     _gb_BeepOnCount 0045                              i1l12221 0000  
                            i1l12223 0028                              i1l12215 0018  
                            i1l12207 0000                              i1l12241 0000  
                            i1l12233 0000                              i1l12217 0000  
                            i1l12251 0086                              i1l12235 0000  
                            i1l12227 0031                              i1l12341 0000  
                            i1l12237 0042                              i1l12229 0000  
                            i1l12247 0000                              i1l12337 0000  
                            i1l12257 0000                              i1l12249 0083  
                            i1l12339 0000                       _RFM98LoRaBwTbl 1869  
               ?_SendNumberToDispBuf 0064                       _RFM98ConfigTbl 1827  
                    ?_WorkModeSelect 0070                 __end_of_RFM98_Config 16EC  
                         ??_Delay_ms 0076                  __size_of_RxLED_Deal 0009  
                 RFM98_FskRxPacket@i 0060                 __end_of_RFM98_TestRx 08A6  
               __end_of_RFM98_TestTx 1746           __size_of_RFM98_FskRxPacket 0032  
                __size_of_MenuConfig 001A                              _SPIRead 1711  
                __size_of_BurstWrite 0022           __size_of_RFM98_FskTxPacket 0040  
                         __stringtab 1800                              _BeepOff 0181  
                       ??_SPICmd8bit 0072         __size_of_InitSystemParameter 0092  
                            _Clr_LCD 02C3                  __size_of_TxLED_Deal 0056  
                         ??_InitPort 0072            __size_of_RFM98_FskEntryRx 0034  
          __size_of_RFM98_FskEntryTx 0032                              _DispBuf 00A0  
                         _gw_ToneBuf 01A0                           _gw_TxTimer 0042  
                _gw_KeyDebounceTimer 0038                              _KeyRead 0719  
                            _KeyScan 06F3                      __size_of_BeepOn 003E  
                            _InitSfr 0189               _SaveRFParameterToFlash 065F  
             _gb_DispFlashFlagBackup 004B                     _MusicTab_KeyMove 1942  
                   _MusicTab_KeyOver 18BA                       _RFM98_ReadRSSI 1724  
                    ??_RFM98_Standby 0078                      __size_of___bmul 000C  
                    ??_RFM98_Running 007A          RFM98_Running@ParaChangeFlag 0067  
                            ___lwdiv 0F13                   FlashWrite@FlashAdr 0072  
                            ___lwmod 0F38             __size_of_RFM98_EntryLoRa 0005  
                   _MusicTab_PowerOn 1896               _gb_DispFlashEnableFlag 0049  
               __size_of_timer1_init 000B                        ?_PowerOnMusic 0070  
               __size_of_timer2_init 000A                   __end_of_SPICmd8bit 09D6  
                      ?_PowerUpDelay 0070         ??_ModuleSelectModeEntryCheck 0079  
              ??_SendNumberToDispBuf 007A           __size_of_RFM98_EntryTestRx 0019  
         __size_of_RFM98_EntryTestTx 001B              SendStringToDispBuf@addr 0079  
             RFM98_LoRaReadRSSI@temp 0076               _gb_ParameterChangeFlag 0055  
                 _DisplayRFParameter 0A2F                   MenuConfig@KeyValue 006F  
               end_of_initialization 00BB                         ?_FlashUnlock 0070  
                       _gw_BeepTimer 0036                            _RFM98Data 18F0  
                          Delay_ms@i 0060                        _gb_SystemMode 007B  
                ?_DisplayRFParameter 0070               __end_of_RFM98_ReadRSSI 172C  
               __size_of_SPIRead8bit 000F                            i1_BeepOff 07D8  
              _RFM98_FSKRxWaitStable 08E3                         __pstringtext 1800  
                      BurstWrite@adr 0060                        BurstWrite@ptr 0074  
      DisplayRFParameter@TempDispBuf 006D                       ??_PowerOnMusic 007A  
                          _ISR_timer 0004                       ??_PowerUpDelay 007A  
                       ??_FlashErase 0076            __size_of_RFM98_TestConfig 0059  
               ??_DisplayRFParameter 0069                         ??_FlashWrite 0077  
                RFM98_LoRaRxPacket@i 0062                     ??_AsciiToDisplay 0072  
            _gb_ModuleWorkEnableFlag 0053                   RFM98_ReadRSSI@temp 0076  
                  ?_CK1622_WriteByte 0072                     SPICmd8bit@WrPara 0072  
                 _C_RFM98_ModuleName 1957                   ??_CK1622_WriteByte 0073  
                   SPICmd8bit@bitcnt 0073                           main@RxFlag 00E5  
                      ?_SPIBurstRead 0074                           main@TxFlag 00E4  
                  SPIRead8bit@RdPara 0072                         ??_RxLED_Deal 0072  
                 __end_of_FlashErase 06A4                      ?_RFM98_ReadRSSI 0070  
                  __size_of_LCD_Init 001F                       __end_of_BeepOn 065F  
                 __end_of_FlashWrite 06D1                    SPIRead8bit@bitcnt 0073  
                       ??_MenuConfig 007A                      _RFM98FSKRateTbl 1859  
                       ??_BurstWrite 0077                           ?i1_BeepOff 0070  
              _RFM98_FSKTxWaitStable 09F7                        ??_LCD_Display 0077  
                       ??_TxLED_Deal 0072                       _gb_KeyDownFlag 0050  
                     __end_of___bmul 170C                            _FlashRead 0235  
                  FlashRead@FlashAdr 0072                __size_of_RFM98_Config 00CC  
                         ?_ISR_timer 0070                __size_of_RFM98_TestRx 0009  
              __size_of_RFM98_TestTx 000B               SendNumberToDispBuf@dat 0064  
                  __size_of_SPIWrite 0014                  start_initialization 0099  
                  ??_RFM98_EntryLoRa 0078                   __end_of_RxLED_Deal 0181  
                        _gb_KeyValue 0051                       ??_SPIBurstRead 0076  
                 CK1622_WriteCmd@cmd 0072                    __size_of_Delay_ms 0023  
                       ?_ModemSelect 0070                   __end_of_MenuConfig 06F3  
                 RFM98_EntryTestRx@i 0061                   RFM98_EntryTestTx@i 0061  
                 __end_of_BurstWrite 095A           RFM98_LoRaTxWaitStable@temp 0076  
                   _RFM98_FskEntryRx 1539                     _RFM98_FskEntryTx 1507  
                 __end_of_TxLED_Deal 0178                             ??_BeepOn 0074  
                       _RFM98FreqTbl 188A                    __size_of_InitPort 0034  
        __end_of_SendStringToDispBuf 0D38                         _RFM98_Config 1620  
                      ??_RFM98_Sleep 0078                          _gb_StatusRx 0058  
                        _gb_StatusTx 0059             __size_of_CK1622_WriteCmd 001F  
             ?_RFM98_FSKRxWaitStable 0070                             ??___bmul 0073  
                       _RFM98RxTable 187B                  _gw_ReceiveDataCount 003C  
                          _Uart_init 01EB                         _RFM98TxTable 1890  
                       _RFM98_TestRx 089D                         _RFM98_TestTx 173B  
                       Delay_ms@time 0072                           ?_FlashRead 0072  
                _InitSystemParameter 1235                     ??_WorkModeSelect 0060  
 __end_of_ModuleSelectModeEntryCheck 0235           _ModuleSelectModeEntryCheck 01FC  
                   _C_RFM98_ModemBuf 196F                  __end_of_LCD_Display 0333  
                        __pbssCOMMON 007A                      KeyScan@keyValue 0073  
               _gb_Modem_Addr_Backup 0052                        __pcstackBANK0 0060  
                      __pcstackBANK1 00E4                     _C_RFM98_PowerBuf 195C  
                           ?_SPIRead 0070                             ?_BeepOff 0070  
            RFM98_Running@WorkStatus 0066                 ?_InitSystemParameter 0070  
                          _gb_RxData 0120                   _MusicTab_RxSuccess 194A  
                           ?_Clr_LCD 0070                        FlashDisplay@i 0073  
                    RFM98_Config@tmp 0061          __size_of_RFM98_LoRaClearIrq 0005  
               __end_of_PowerOnMusic 02B6              ?_SaveRFParameterToFlash 0070  
               __end_of_PowerUpDelay 0258                      _gb_BandBuf_Addr 0044  
                           ?_KeyRead 0070                             ?_KeyScan 0070  
               __size_of_FlashUnlock 0008                    RFM98_FskEntryRx@i 0065  
                  RFM98_FskEntryTx@i 0065                             ?_InitSfr 0070  
                      RFM98_Config@i 0062                     ___lwdiv@dividend 0074  
           ??_RFM98_LoRaRxWaitStable 0076                 _RFM98SpreadFactorTbl 1883  
      __size_of_SendSegDataToDispBuf 0090          __size_of_RFM98_LoRaReadRSSI 000A  
             ?_RFM98_FSKTxWaitStable 0070                           ?_Uart_init 0070  
                        ??i1_BeepOff 0070          __size_of_RFM98_FskClearFIFO 000B  
                           ?___lwdiv 0072                             ?___lwmod 0060  
                 _gw_RF_SentInterval 003A                          ??_ISR_timer 0070  
                 FlashErase@FlashAdr 0072                     _RFM98_TestConfig 156D  
                __end_of_RFM98_Sleep 1711          __size_of_RFM98_LoRaRxPacket 004E  
                          __pswtext1 07C4          __size_of_RFM98_LoRaTxPacket 004F  
                 _RFM98TestConfigTbl 1847                      _MusicTab_KeyErr 193A  
                _gb_FirstPowerUpFlag 004E                      _MusicTab_KeySet 1926  
                ModemSelect@KeyValue 0062                     ___lwdiv@quotient 0077  
              ??_InitSystemParameter 0072       __end_of_SaveRFParameterToFlash 0695  
                        _LCDDigTable 1801                      SPIBurstRead@adr 0077  
                  _gb_WaitStableFlag 005D                      SPIBurstRead@ptr 0074  
                           _LCD_Init 0258                             Clr_LCD@i 0078  
                           Clr_LCD@j 0077             ??_RFM98_LoRaTxWaitStable 0076  
                 SPIBurstRead@length 0075                        ??_timer1_init 0072  
                      ??_timer2_init 0072                 __end_of_SPIBurstRead 09C4  
              __end_of_RFM98_Standby 171F                          ??_FlashRead 0077  
        __end_of_SendNumberToDispBuf 0ED2                          _LCD_Display 030D  
              __end_of_RFM98_Running 1507                RFM98_LoRaEntryRx@addr 0063  
                  ??_CK1622_WriteCmd 0072                RFM98_LoRaEntryTx@addr 0063  
                           _SPIWrite 16EC              __size_of_LCD_DisplayAll 000D  
                           _Delay_ms 0725                           SPIRead@adr 0074  
                         SPIRead@tmp 0075                     __size_of_SPIRead 0009  
                   ??_RFM98_ReadRSSI 0076                     __size_of_BeepOff 0008  
                      ??_SPIRead8bit 0072                             _InitPort 01A2  
               __size_of_ModemSelect 0064                     __size_of_Clr_LCD 0018  
                           __DispSeg 0020        RFM98_LoRaRxPacket@packet_size 0061  
                    _C_RFM98_RSSIBuf 1961                      _C_RFM98_BandBuf 1972  
          __size_of_CK1622_WriteByte 0032                     __size_of_KeyRead 000C  
                   __size_of_KeyScan 0026                     __size_of_InitSfr 0019  
                    _C_RFM98_FdevBuf 1974      __size_of_RFM98_LoRaRxWaitStable 0012  
                        _RFM98_Sleep 170C                          ??_Uart_init 0072  
                    _C_RFM98_FreqBuf 196B                      _RFM98_EntryLoRa 172C  
                    _C_RFM98_RateBuf 1966                     __size_of___lwdiv 0025  
                   __size_of___lwmod 0020             __end_of_RFM98_FskEntryRx 156D  
           __end_of_RFM98_FskEntryTx 1539                           BeepOn@Tone 0072  
        __size_of_DisplayRFParameter 026A                  __end_of_timer1_init 01E1  
                _C_RFM98_LoRaRSSIBuf 1952                  __end_of_timer2_init 01EB  
                _C_RFM98_LoRaBandBuf 18DA                  _RF_LoRaBandWidthBuf 002A  
                     _gb_SysMode_Set 005A                     BurstWrite@length 0076  
                    ___lwdiv@divisor 0072                      ___lwdiv@counter 0076  
              __size_of_PowerOnMusic 0020                __size_of_PowerUpDelay 0006  
                    _gb_FdevBuf_Addr 004D                       _gb_SysTimer_1S 005B  
                      __size_of_main 0065                     _gw_LCDFlashTimer 00E0  
            ??_RFM98_FSKRxWaitStable 0076                             clear_ram 07DF  
    __size_of_RFM98_LoRaTxWaitStable 0013                  __end_of_SPIRead8bit 09E5  
                      ?_FlashDisplay 0070          ?_ModuleSelectModeEntryCheck 0070  
                       _PowerOnMusic 0296                         _PowerUpDelay 0252  
                     SPIWrite@WrPara 0075               _RFM98_LoRaRxWaitStable 09E5  
                     SPIWrite@bitcnt 0077                             intlevel1 0000  
                   _gb_DispFlashFlag 004A              __size_of_AsciiToDisplay 0041  
                   ___lwmod@dividend 0062             __end_of_RFM98_TestConfig 15C6  
                    LCD_DisplayAll@i 0072              __end_of_RFM98_EntryLoRa 1731  
             RFM98_LoRaRxPacket@addr 0060              ??_RFM98_FSKTxWaitStable 0076  
              __size_of_SPIBurstRead 001C                          FlashWrite@i 0078  
                    FlashWrite@array 0076                       ??_FlashDisplay 0072  
                        _timer1_init 01D6                          _timer2_init 01E1  
       __size_of_SendStringToDispBuf 009F                           _OPTION_REG 0095  
                         FlashRead@i 0078                        _RF_ModuleName 002E  
                     _LCD_DisplayAll 02B6                      ___lwmod@divisor 0060  
                    ___lwmod@counter 0079         __end_of_SendSegDataToDispBuf 03C3  
             _RFM98_LoRaTxWaitStable 17ED                           _RF_RSSIBuf 0032  
                         _RF_BandBuf 0024           __end_of_RFM98_LoRaClearIrq 1724  
                       _SPIBurstRead 09A8                        ??_FlashUnlock 0072  
                         _SPICmd8bit 09C4                           _RF_FdevBuf 0026  
            _C_RFM98_SpreadFactorBuf 1932                          _RF_ModemBuf 002C  
                        _SPIRead8bit 09D6                           _RF_FreqBuf 0028  
                         _RF_RateBuf 0034                     _CK1622_WriteByte 02DB  
         __end_of_RFM98_LoRaReadRSSI 173B                      _CK1622_WriteCmd 0277  
         __end_of_RFM98_FskClearFIFO 08E3  
